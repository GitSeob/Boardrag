(self.webpackChunk_42board_front=self.webpackChunk_42board_front||[]).push([[771],{6317:(e,t,a)=>{"use strict";a.d(t,{Z:()=>d});var n=a(7294),i=a(5366);const r=a(9911).F4`
	from {
		transform: rotate(0);
	}
	to {
		transform: rotate(359deg);
	}
`,o=(0,i.Z)("div",{target:"egpcubb2",label:"LoadingCircleContainer"})({name:"8lbyj9",styles:"width:300px;height:300px;display:flex;justify-content:center;align-items:center;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)"}),l=(0,i.Z)("div",{target:"egpcubb1",label:"LoadingCircleBox"})("width:150px;height:150px;padding:3px;display:flex;justify-content:center;align-items:center;border-radius:50%;background:rgb(63, 249, 200);background:linear-gradient(0deg, rgba(63, 249, 200, 0.1) 33%, rgba(63, 249, 220, 1) 100%);animation:",r," 0.8s linear 0s infinite;"),s=(0,i.Z)("div",{target:"egpcubb0",label:"LoadingCircleCore"})({name:"1sudnkc",styles:"width:100%;height:100%;background:#001c29;border-radius:50%"}),d=()=>n.createElement(o,null,n.createElement(l,null,n.createElement(s,null)))},9842:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(7294);const i=(0,a(5366).Z)("div",{target:"eoo7c7v0",label:"Footer"})({name:"1cw67ic",styles:"display:flex;align-items:center;justify-content:center;background:rgba(0, 0, 0, 0.1);padding:2rem 0;color:rgba(255, 255, 255, 0.6);font-size:12px;width:100vw;&.board{padding:1rem;height:100%;font-weight:400;}img{height:16px;margin-right:6px;}a{color:inherit;}"}),r=({className:e})=>n.createElement(i,{className:e},n.createElement("img",{src:"/public/github.png"}),n.createElement("a",{href:"https://github.com/gitseob",target:"_blank",rel:"noreferrer"},"gitseob"))},8678:(e,t,a)=>{"use strict";a.d(t,{Z:()=>i});var n=a(7294);const i=e=>{const[t,a]=(0,n.useState)(e);return[t,(0,n.useCallback)((e=>{a(e.target.value)}),[]),a]}},4771:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>et});var n=a(7294),i=a(5977),r=a(8100),o=a(3564),l=a(6317),s=a(5615);const d={},c=e=>{const t=(0,n.useCallback)((()=>{e&&d[e]&&(d[e].disconnect(),delete d[e])}),[e]);return e?(d[e]||(d[e]=(0,s.Z)("https://api.42board.com/board-"+e,{transports:["websocket"]}),console.info("create socket",e,d[e].id)),[d[e],t]):[void 0,t]};var g=a(5366),m=a(9911);const h=m.F4`
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
`,p=((0,g.Z)("div",{target:"e1jwxo3k2",label:"OpenMenu"})({name:"164x91j",styles:"position:fixed;top:1rem;right:1rem;width:30px;height:30px;z-index:9;cursor:pointer;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px"}),(0,g.Z)("div",{target:"e1jwxo3k1",label:"DetailBackground"})("width:100%;height:100vh;z-index:12;position:fixed;top:0;left:0;background:rgba(0, 0, 0, 0.4);animation:",h," 0.5s ease-in-out 1;")),u=(0,g.Z)("div",{target:"e1jwxo3k0",label:"BoardHeader"})({name:"p6s4m4",styles:"position:relative;width:100vw;height:48px;display:flex;background:#0e0e0e;box-shadow:0 0 4px 1px #3e3e3e;&>div,a{top:0;height:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;&.logo{padding:12px;h2{font-size:16px;font-weight:400;}img{height:2.5rem;margin-left:-1rem;}&:visited{color:inherit;}}}.up{height:100%;display:flex;position:absolute;width:48px;right:0;cursor:pointer;&:hover{background:rgba(255, 255, 255, 0.1);}}"});var x=a(7484),f=a.n(x),b=a(6176),w=a.n(b),y=a(1171),v=(a(5202),a(3653)),E=a.n(v),k=a(3286),C=a(4420),z=a.n(C);const S=({x:e=0,y:t=0,canMove:a,openDetail:i,rectSize:r,rectDE:o})=>{const l=3===i.category?i.content?.url:i.content?.background_img,[s]=z()(l||""),d=a?"rgba(32, 178, 170, .5)":"rgba(255, 255, 255, 0.1)";return 3!==i?.category&&2!==i?.category||!a?n.createElement(k.Rect,{width:r.width,height:r.height,fill:d,x:e,y:t,cornerRadius:5,draggable:a,onDragEnd:a?o:void 0}):n.createElement(k.Image,{opacity:.4,width:r.width,height:r.height,fill:d,x:e,y:t,cornerRadius:5,image:s,draggable:a,onDragEnd:a?o:void 0})},M=(e,t,a)=>e>t&&e<a,Z=(e,t,a,n,i)=>e.filter((e=>!(1===t.category&&e.id===t.id))).find((e=>(M(e.x*i,a.x,a.x+n.width)||M((e.x+e.width)*i,a.x,a.x+n.width))&&(M(e.y*i,a.y,a.y+n.height)||M((e.y+e.height)*i,a.y,a.y+n.height))||(M(e.x*i,a.x,a.x+n.width)||M((e.x+e.width)*i,a.x,a.x+n.width))&&(M(a.y,e.y*i,(e.y+e.height)*i)||M(a.y+n.height,e.y*i,(e.y+e.height)*i))||(M(a.x,e.x*i,(e.x+e.width)*i)||M(a.x+n.width,e.x*i,(e.x+e.width)*i))&&(M(e.y*i,a.y,a.y+n.height)||M((e.y+e.height)*i,a.y,a.y+n.height)))),B=(e,t,a,n,i)=>!!e&&!(Z(e.TextContents,t,a,n,i)||Z(e.Images,t,a,n,i)||Z(e.Notes,t,a,n,i)),D=(e,t,a,n,i)=>!e||!!e?.filter((e=>!(1===t.category&&e.id===t.id))).find((e=>{return t=e.x*i,r=e.y*i,o=e.width*i,l=e.height*i,s=a.x,d=a.y,c=n.width,g=n.height,!!(s>=t&&d>=r&&s+c<=t+o&&d+g<=r+l);var t,r,o,l,s,d,c,g})),j=m.F4`
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
`,I=(0,g.Z)("div",{target:"e7dz734",label:"KonvaContainer"})({name:"1mps0h6",styles:"position:relative;display:flex;flex-direction:column;transition:0.3s;min-height:calc(100vh - 48px)"}),R=(0,g.Z)("div",{target:"e7dz733",label:"WarnMessage"})({name:"1492gee",styles:"position:absolute;background:rgba(0, 0, 0, 0.6);z-index:50;border-radius:5px;color:#ff5555;font-weight:500;font-size:14px;padding:1rem 2rem;top:50%;left:50%;transform:translate(-50%, -50%)"}),N=(0,g.Z)("div",{target:"e7dz732",label:"DetailBackground"})("width:100%;height:calc(100% + 40px);z-index:12;position:absolute;top:0;left:0;background:rgba(0, 0, 0, 0.4);transform:translateY(-48px);animation:",j," 0.5s ease-in-out 1;"),L=(0,g.Z)("div",{target:"e7dz731",label:"StageContainer"})("position:relative;&::before{width:100%;height:",(e=>e.height),";position:absolute;content:'';top:0;left:0;background-image:url(",(e=>e.url),");background-size:cover;background-repeat:no-repeat;background-position:center;opacity:",(e=>e.op),";}");(0,g.Z)("div",{target:"e7dz730",label:"ContentContainer"})({name:"duudsh",styles:"position:fixed"});var $=a(8678);const A=m.F4`
	from {
		opacity: 0;
		transform: translate(-50%, -40%);
	}
	to {
		opacity: 1;
		transform: translate(-50%, -50%);
	}
`,F=m.F4`
	from {
		opacity: 1;
		transform: translate(-50%, -50%);
	}
	to {
		opacity: 0;
		transform: translate(-50%, -40%);
	}
`,H=m.F4`
	from {
		width: 0;
		height: 0;
	}
	to {
		width: 60px;
		height: 60px;
	}
`,T=(0,g.Z)("div",{target:"ejguu8i8",label:"ContentBox"})("position:fixed;overflow:",(e=>e.flg?"auto":"hidden"),";width:",(e=>e.flg?"760px":"0"),";max-height:",(e=>e.flg?"calc(100% - 60px)":"0"),";padding:",(e=>e.flg?"30px":"0"),";background:rgba(0, 0, 0, 0.85);border-radius:18px;box-shadow:",(e=>e.flg?"0 0 4px 1px #55555e":"none"),";top:50%;left:50%;transform:translate(-50%, -50%);z-index:13;animation:",(e=>e.flg?A:F)," 0.5s ease-in-out 1;-ms-overflow-style:none;scrollbar-width:none;&::-webkit-scrollbar{display:none;}@media screen and (max-width: 600px){width:90%;}"),U=(0,g.Z)("div",{target:"ejguu8i7",label:"UserInfoBox"})({name:"1700rsy",styles:"position:relative;width:100%;padding-right:30px;&>.user{display:flex;align-items:center;&>img{height:48px;width:48px;margin-right:12px;border-radius:48px;object-fit:cover;border:1px solid #444;background:#000;}.no_profile_img{width:3rem;height:3rem;border-radius:100%;margin-right:12px;background:linear-gradient(rgb(0, 37, 52), rgb(9, 10, 15)) no-repeat;display:flex;&>img{margin:auto;}}}"}),_=(0,g.Z)("div",{target:"ejguu8i6",label:"MoreButton"})({name:"gj6nqm",styles:"position:absolute;right:0;top:12px;height:18px;cursor:pointer"}),Y=(0,g.Z)("div",{target:"ejguu8i5",label:"MoreList"})("position:absolute;width:60px;height:60px;overflow:hidden;top:30px;right:0;animation:",H," 0.3s ease-in-out 1;box-shadow:0 0 4px 1px #777;background:#000;&.three{height:90px;}&>div{cursor:pointer;padding:6px;height:30px;overflow:hidden;line-height:20px;word-break:keep-all;&:hover{background:#444;}}"),W=(0,g.Z)("div",{target:"ejguu8i4",label:"DetailContentBox"})({name:"jht25n",styles:"min-height:240px;padding-bottom:30px;&>.dayjs{font-weight:400;font-size:11px;color:#ddd;margin:12px 0;padding-bottom:12px;border-bottom:1px solid #444;}"}),P=(0,g.Z)("div",{target:"ejguu8i3",label:"CommentBox"})({name:"avcfwr",styles:"border-top:1px solid #444;padding:30px 0;height:fit-content"}),q=(0,g.Z)("div",{target:"ejguu8i2",label:"Comment"})({name:"9bqo6h",styles:"display:flex;position:relative;min-height:3rem;padding:12px 0;padding-right:18px;border-radius:12px;&>img{width:3rem;height:3rem;border-radius:100%;margin-right:1rem;background:#000;object-fit:cover;}.content{width:calc(100% - 62px);p.nickname{margin-bottom:6px;}.edit-box{color:#999;font-size:9px;&>button{color:#aaa;font-size:9px;background:inherit;cursor:pointer;}&>span{margin:0 2px;}}&>div{display:flex;align-items:flex-end;width:100%;&.editComment{height:120px;}input[type='text']{width:calc(100% - 60px);height:100%;border-radius:12px 0 0 12px;padding:1em;}div.editButton{width:60px;height:100%;border-radius:0 12px 12px 0;overflow:hidden;&>div{width:100%;height:50%;cursor:pointer;text-align:center;vertical-align:middle;line-height:60px;&.submit{background:#5656bf;}&.cancel{background:#bf5656;}}}div.commentBubble{background:#f8f8f8;border-radius:5px;color:#000;padding:0.5rem;min-height:100%;max-width:calc(100% - 100px);position:relative;&::before{content:'';transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:1px;z-index:-1;}}&>p{color:#777;height:fit-content;font-size:10px;margin-left:0.3rem;width:8rem;}}}"}),O=(0,g.Z)("form",{target:"ejguu8i1",label:"WriteComment"})({name:"yt7bxj",styles:"display:flex;position:relative;align-items:center;&>img{width:48px;height:48px;border-radius:48px;border:1px solid #444;object-fit:cover;background:#000;}input{width:calc(100% - 102px);height:36px;border-radius:12px;background:#eee;line-height:1.4em;padding:6px 1em;margin:0 6px 0 12px;}&>.btn{height:36px;width:36px;border-radius:12px;padding:3px;overflow:hidden;cursor:pointer;display:flex;align-items:center;justify-content:center;&:hover{background:rgba(255, 255, 255, 0.1);}img{width:18px;height:18px;background:transparent;color:#fff;}}"}),X=(0,g.Z)("div",{target:"ejguu8i0",label:"NoImageProfile"})({name:"1h8bvbm",styles:"width:3rem;height:3rem;border-radius:100%;margin-right:12px;background:linear-gradient(#002534, #090a0f) no-repeat;display:flex;img{width:1.5rem;margin:auto;}"});(0,g.Z)("div",{target:"eutvq2n7",label:"CContainer"})({name:"1871c2w",styles:"width:100%;&>div{width:100%;}"});const V=(0,g.Z)("img",{target:"eutvq2n6",label:"ImageBox"})({name:"wuidhq",styles:"width:100%;border-radius:12px"}),K=(0,g.Z)("div",{target:"eutvq2n5",label:"HeadBox"})({name:"1lv41ed",styles:"width:100%;margin:12px 0;h2{font-size:2em;}"}),G=(0,g.Z)("pre",{target:"eutvq2n4",label:"TextBox"})({name:"14tzlvp",styles:"width:100%;white-space:break-spaces"}),J=(0,g.Z)("div",{target:"eutvq2n3",label:"EditArea"})({name:"6ferdm",styles:"position:relative;&>textarea{width:calc(100% - 50px);resize:none;padding:0.5rem;border-radius:12px;min-height:240px;width:100%;padding:1em;}&>input{width:calc(100% - 50px);font-size:24px;padding:0.5rem;font-weight:600;margin-bottom:1rem;}"}),Q=(0,g.Z)("input",{target:"eutvq2n2",label:"EditHead"})({name:"1fomz2g",styles:"font-size:2em;padding:0.5em;border-radius:12px;width:100%;margin:12px 0"}),ee=(0,g.Z)("div",{target:"eutvq2n1",label:"EditButtonBox"})({name:"ct0ve0",styles:"right:0;top:0;width:100%;display:flex;align-items:center;justify-content:center;margin-top:12px;overflow:hidden;.button{background:#777;color:#fff;width:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;padding:12px;border-radius:12px;&.edit{background:#01babc;color:#000;margin-right:24px;}}"}),te=(0,g.Z)("div",{target:"eutvq2n0",label:"EditImageBox"})({name:"pmmivh",styles:"position:relative;width:100%;height:fit-content;border-radius:12px;overflow:hidden;&>img{width:100%;}.temp{width:100%;height:6rem;background:#eee;}"}),ae=({content:e,isEdit:t,setEdit:a,onSubmitEdit:i})=>{const[r,o]=(0,n.useState)(""),[l,s]=(0,n.useState)("auto"),d=(0,n.useRef)(),c=n.useCallback((e=>{s(d.current.scrollHeight+"px"),o(e.target.value)}),[d]);return(0,n.useEffect)((()=>{o("string"==typeof e?e:"")}),[t,e]),t?n.createElement(n.Fragment,null,n.createElement(J,null,n.createElement("textarea",{value:r,onChange:c,ref:d,style:{height:l}})),n.createElement(ee,null,n.createElement("div",{className:"button edit",onClick:()=>{i(r,"","")}},"수정"),n.createElement("div",{className:"button",onClick:()=>{a(!1)}},"취소"))):n.createElement(G,null,e)},ne=(0,g.Z)("div",{target:"eb1juvh0",label:"EditImageInput"})({name:"10ro9ka",styles:"position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:50%;padding:0.5rem 1rem;background:rgba(0, 0, 0, 0.4);color:#fff;border-radius:3px;display:flex;align-items:center;justify-content:center;height:2rem;cursor:pointer;&>svg{fill:#fff;height:2rem;}"}),ie=({imageInput:e,onChangeImg:t,onClick:a})=>n.createElement(ne,{onClick:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("p",null,"이미지 변경하기"),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:e,onChange:t})),re=({isEdit:e,head:t,content:a,url:i,onSubmitEdit:r,setEdit:o,board:l})=>{const[s,d]=(0,n.useState)(""),[c,g,m]=(0,$.Z)(""),[h,p]=(0,n.useState)("auto"),[u,x]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),f=(0,n.useRef)(),b=(0,n.useRef)(),w=(0,n.useCallback)((()=>{b.current.click()}),[]),y=n.useCallback((e=>{p(f.current.scrollHeight+"px"),d(e.target.value)}),[f]),v=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await x({...u,loading:!0}),await E().post(`/api/uploadImage?type=upload&board=${l}&contentName=note`,t,{headers:{"Access-Control-Allow-Origin":"*"}}).then((e=>{x({...u,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{x({...u,loading:!1,message:e.response.data})}))}),[l,u]);return(0,n.useEffect)((()=>{d("string"==typeof a?a:""),m("string"==typeof t?t:""),x({...u,imageURL:"string"==typeof i?i:""})}),[e,a,t]),e?n.createElement(n.Fragment,null,n.createElement(te,null,""!==u.imageURL?n.createElement("img",{src:u.imageURL}):n.createElement("div",{className:"temp"}),n.createElement(ie,{onClick:w,imageInput:b,onChangeImg:v})),n.createElement(Q,{type:"text",value:c,onChange:g}),n.createElement(J,null,n.createElement("textarea",{value:s,onChange:y,ref:f,style:{height:h}})),n.createElement(ee,null,n.createElement("div",{className:"button edit",onClick:()=>{r(s,c,u.imageURL)}},"수정"),n.createElement("div",{className:"button",onClick:()=>{o(!1)}},"취소"))):n.createElement(n.Fragment,null,i&&n.createElement(V,{src:i}),n.createElement(K,null,n.createElement("h2",null,t)),n.createElement(G,null,a))},oe=({isEdit:e,url:t,setEdit:a,onSubmitEdit:i,board:r})=>{const[o,l]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),s=(0,n.useRef)(),d=(0,n.useCallback)((()=>{s.current.click()}),[]);return(0,n.useEffect)((()=>{l({...o,imageURL:"string"==typeof t?t:""})}),[e,t]),e?n.createElement(n.Fragment,null,n.createElement(te,null,""!==o.imageURL?n.createElement("img",{src:o.imageURL}):n.createElement("div",{className:"temp"}),n.createElement(ie,{onClick:d,imageInput:s,onChangeImg:async e=>{const t=new FormData;t.append("image",e.target.files[0]),await l({...o,loading:!0}),await E().post(`/api/uploadImage?type=upload&board=${r}&contentName=image`,t,{headers:{"Access-Control-Allow-Origin":"*"}}).then((e=>{l({...o,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{l({...o,loading:!1,message:e.response.data})}))}})),n.createElement(ee,null,n.createElement("div",{className:"button edit",onClick:()=>{i("","",o.imageURL)}},"수정"),n.createElement("div",{className:"button",onClick:()=>{a(!1)}},"취소"))):n.createElement(V,{src:t})},le=({openDetail:e,isEdit:t,setEdit:a,onSubmitEdit:i,board:r})=>void 0===e.content?n.createElement(n.Fragment,null):1==e.category?n.createElement(ae,{isEdit:t,setEdit:a,onSubmitEdit:i,content:e.content?.content}):2==e.category?n.createElement(re,{isEdit:t,setEdit:a,onSubmitEdit:i,content:e.content?.paragraph,head:e.content?.head,url:e.content?.background_img,board:r}):3==e.category?n.createElement(oe,{isEdit:t,setEdit:a,onSubmitEdit:i,url:e.content?.url,board:r}):n.createElement(n.Fragment,null);f().extend(w());const se=({openDetail:e,userData:t,board:a,toast:i,onSubmitEdit:r,dataReval:o,setOpenDetail:l,comments:s,moveMode:d})=>{const[c,g]=(0,n.useState)(-1),[m,h]=(0,n.useState)(-1),[p,u]=(0,n.useState)(!1),[x,b,w]=(0,$.Z)(""),[y,v,k]=(0,$.Z)(""),[C,z]=(0,n.useState)(!1),S=(0,n.useRef)(null),M=new Date,Z=n=>{n.preventDefault(),""!==x&&E().post(`/api/board/${a}/comment/${e.category}/${e.content?.id}`,{content:x,BoardMemberId:t.id}).then((()=>{w(""),S.current&&S.current.scrollToBottom()})).catch((e=>{console.error(e)}))};return(0,n.useEffect)((()=>{g(-1),h(-1),u(!1),w(""),k(""),z(!1)}),[e]),n.createElement(T,{flg:e.flg},n.createElement(U,null,n.createElement("div",{className:"user"},e.content?.BoardMember.profile_img?n.createElement("img",{src:e.content?.BoardMember.profile_img}):n.createElement("div",{className:"no_profile_img"},n.createElement("img",{src:"/public/person.svg"})),n.createElement("p",null,e.content?.BoardMember?e.content.BoardMember.username:"unknown user")),n.createElement(_,{onClick:()=>{u(!p),h(-1)}},n.createElement("img",{src:"/public/more.svg"})),p&&n.createElement(Y,{className:"three"},n.createElement("div",{onClick:()=>{z(!0),u(!1)}},"내용 수정"),n.createElement("div",{onClick:d},"위치 수정"),n.createElement("div",{onClick:t=>{if(t.preventDefault(),!confirm("정말 삭제하시겠습니까?"))return;let n="";if(1===e.category)n="text";else if(2===e.category)n="note";else{if(3!==e.category)return;n="image"}E().delete(`api/board/${a}/delete/${n}/${e.content?.id}`).then((()=>{o(),l({category:0,id:0,flg:!1,loadComment:!1,content:null}),i.dark("게시물이 삭제되었습니다.")})).catch((e=>{console.error(e)}))}},"삭제"))),n.createElement(W,null,n.createElement("div",{className:"dayjs"},n.createElement("p",null,f()(e.content?.createdAt).format("YYYY년 MM월 DD일"))),e&&n.createElement(le,{openDetail:e,isEdit:C,setEdit:z,onSubmitEdit:r,board:a})),!C&&n.createElement(n.Fragment,null,n.createElement(P,null,0===s?.length&&n.createElement("div",{style:{color:"#777",fontSize:"12px"}},"첫 댓글을 작성해보세요 !"),s?.map(((e,r)=>n.createElement(q,{key:r,style:{background:c===e.id?"#444":""}},e.BoardMember.profile_img?n.createElement("img",{src:e.BoardMember.profile_img}):n.createElement(X,null,n.createElement("img",{src:"/public/person.svg"})),n.createElement("div",{className:"content"},n.createElement("p",{className:"nickname"},e.BoardMember?e.BoardMember.username:"unknown user"),e.id===c?n.createElement("div",{className:"editComment"},n.createElement("input",{type:"text",autoFocus:!0,value:y,onChange:v}),n.createElement("div",{className:"editButton"},n.createElement("div",{className:"submit",onClick:()=>{var t;t=e.id,E().patch(`/api/board/${a}/comment/${t}`,{content:y}).then((()=>{i.dark("댓글이 수정되었습니다."),k(""),g(0)})).catch((e=>{i.error(e.response.data.reason)}))}},"수정"),n.createElement("div",{className:"cancel",onClick:()=>{g(-1),k("")}},"취소"))):n.createElement("div",null,n.createElement("div",{className:"commentBubble"},e.content),n.createElement("p",null,f()(e.createdAt).diff(M,"day")>-1?f()(e.createdAt).format("LT"):f()(e.createdAt).format("YYYY년 MM월 DD일"),e.createdAt!==e.updatedAt&&"(edited)"))),e.BoardMemberId===t.id&&e.id!==c&&n.createElement(n.Fragment,null,n.createElement(_,{onClick:()=>{h(e.id===m?-1:e.id),u(!1)}},n.createElement("img",{src:"/public/more.svg"})),m===e.id&&n.createElement(Y,null,n.createElement("div",{onClick:()=>{g(e.id),h(-1),k(e.content)}},"수정"),n.createElement("div",{onClick:()=>{var t;t=e.id,confirm("댓글을 삭제하시겠습니까?")&&(h(-1),E().delete(`/api/board/${a}/comment/${t}`).then((()=>{i.dark("댓글이 삭제되었습니다.")})).catch((e=>{i.error(e.response.data.reason)})))}},"삭제"))))))),n.createElement(O,{onClick:Z},t.profile_img?n.createElement("img",{src:t.profile_img}):n.createElement(X,null,n.createElement("img",{src:"/public/person.svg"})),n.createElement("input",{type:"text",value:x,onChange:b,onKeyPress:e=>{"Enter"===e.key&&Z(e)}}),n.createElement("div",{className:"btn"},n.createElement("img",{src:"/public/sendIcon.svg"})))))};var de=a(9842);const ce=m.F4`
	from {
		max-width: 0;
		max-height: 0;
	}
	to {
		max-width: 200px;
		max-height: 200px;
	}
`,ge=m.F4`
	from {
		max-width: 200px;
		max-height: 200px;
	}
	to {
		max-width: 0px;
		max-height: 0px
	}
`,me=(0,g.Z)("div",{target:"ed2wn9e1",label:"MenuBox"})("display:flex;flex-direction:column;position:absolute;background:rgba(0, 0, 0, .85);display:",(e=>e.disp?"block":"none"),";overflow:hidden;color:#efefef;border-radius:5px;box-shadow:0 0 8px 1px rgb(0, 0, 0);max-width:",(e=>e.clicked?"200px":"0px"),";max-height:",(e=>e.clicked?"200px":"0px"),";top:",(e=>e.y),";left:",(e=>e.x),";animation:",(e=>e.clicked?ce:ge)," .3s ease-in-out 1;z-index:10;"),he=(0,g.Z)("div",{target:"ed2wn9e0",label:"MenuAttr"})({name:"2my92g",styles:"width:120px;padding:1rem;cursor:pointer;position:relative;&:hover{background:rgba(20, 20, 20, 0.5);}@media screen and (max-width: 800px){font-size:12px;width:100px;padding:0.5rem;}@media screen and (max-width: 500px){font-size:10px;width:80px;padding:0.3rem;}"}),pe=m.F4`
	0% {
		width: 0;
		height: 0;
	}
	30% {
		width: 10%;
		height: 10%;
	}
	100% {
		width: 100%;
		height: 100%;
	}
`,ue=(0,g.Z)("div",{target:"e1vh4axv9",label:"AddContainer"})("position:absolute;z-index:4;display:flex;align-items:center;justify-content:center;top:",(e=>e.y+5),";left:",(e=>e.x+5),";width:",(e=>e.width-10),";height:",(e=>e.height-10),";z-index:6;"),xe=(0,g.Z)("div",{target:"e1vh4axv8",label:"AddBox"})("position:relative;display:flex;align-items:center;justify-content:center;border-radius:5px;background:#fff;box-shadow:0 0 4px 1px rgba(255, 255, 255, 0.5);color:#000;width:100%;animation:",pe," 0.3s ease-in-out 1;height:100%;&.note{padding:0;border-radius:5px;}&>img{width:100%;height:100%;border-radius:5px;}"),fe=(0,g.Z)("div",{target:"e1vh4axv7",label:"SubmitButton"})("position:absolute;display:flex;align-items:center;justify-content:center;top:0;right:",(e=>e.right),";transform:translateX(100%);width:",(e=>e.size-10),";height:",(e=>e.size-10),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");border-radius:5px;background:#01babc;color:#fff;box-shadow:0 0 4px 1px rgba(1, 186, 188, 0.7);cursor:pointer;padding:2px;&>svg{height:20px;fill:#fff;}@media screen and (max-width: 800px){border-radius:2px;}"),be=(0,g.Z)("div",{target:"e1vh4axv6",label:"ImageInputButton"})("position:absolute;display:flex;align-items:center;justify-content:center;right:",(e=>e.right),";top:",(e=>e.size),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");width:",(e=>e.size-10),";height:",(e=>e.size-10),";border-radius:5px;cursor:pointer;background:#34568b;box-shadow:0 0 4px 1px rgba(52, 86, 139, 0.7);padding:2px;&>svg{fill:#fff;height:20px;}@media screen and (max-width: 800px){border-radius:2px;}"),we=(0,g.Z)("textarea",{target:"e1vh4axv5",label:"TextArea"})({name:"kf3szx",styles:"width:100%;max-height:100%;overflow:auto;border:none;border-radius:5px;padding:0;white-space:normal;text-align:center;resize:none;padding:5px"}),ye=(0,g.Z)("div",{target:"e1vh4axv4",label:"ImageAddBox"})({name:"kh4re2",styles:"width:100%;height:100%;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:500;overflow:hidden;text-align:center;word-break:keep-all;&>img{width:100%;height:100%;}"}),ve=(0,g.Z)("div",{target:"e1vh4axv3",label:"NoteAddBox"})("width:100%;heigth:100%;display:flex;align-items:center;justify-content:center;flex-direction:column;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"#fff"),";background-size:cover;overflow:hidden;animation:",pe," 0.3s ease-in-out 1;padding:5px;border-radius:5px;color:",(e=>e.src?"#fff":"000"),"!important;&>div{background:transparent;font-weight:500;}textarea{font-size:12px;}input[type='text'],textarea{color:",(e=>e.src?"#fff":"#000"),"!important;text-shadow:",(e=>e.src?"0 3px 10px #000":"none"),";}@media screen and (max-width: 800px){textarea{font-size:10px;}input{font-size:142x;}}@media screen and (max-width: 500px){textarea{font-size:8px;}input{font-size:10px;}}"),Ee=(0,g.Z)("div",{target:"e1vh4axv2",label:"InputBox"})("width:100%;height:",(e=>e.size),";overflow:hidden;&>textarea{background:none;}"),ke=(0,g.Z)("input",{target:"e1vh4axv1",label:"InputArea"})({name:"16gi3ra",styles:"width:100%;height:100%;padding:5px;font-weight:600;background:inherit!important;color:inherit!important"}),Ce=(0,g.Z)("div",{target:"e1vh4axv0",label:"WarnBox"})({name:"brnaxo",styles:"width:100%;height:100%;background:rgba(0, 0, 0, 0.8);color:red;font-size:12px;display:flex;align-items:center;justify-content:center"}),ze=({BMID:e,toast:t,x:a,y:r,width:o,height:l,offset:s,initStates:d,board:c})=>{const g=(0,n.useRef)(),[m,h]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),p=(0,n.useCallback)((()=>{g.current.click()}),[]),u=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await h({...m,loading:!0}),await E().post(`/api/uploadImage?type=upload&board=${c}&contentName=image`,t).then((e=>{h({...m,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{h({...m,loading:!1,message:e.response.data})}))}),[]),x=(0,n.useCallback)((async()=>{h({...m,loading:!0}),await E().post(`/api/board/${c}/write/image`,{url:m.imageURL,x:s.x,y:s.y,width:s.width,height:s.height,BoardMemberId:e}).then((e=>{if(202===e.status)return h({...m,loading:!1,message:e.data.reason}),setTimeout((()=>{h({...m,message:""})}),2e3);h({...m,loading:!1,success:!0}),t.dark(`남은 칸은 ${e.data}칸 입니다.`),d()})).catch((e=>{401===e.response.status&&(alert("로그인을 해주세요."),i.l_),h({...m,loading:!1,message:e.response.data.reason})}))}),[m,c,s]);return n.createElement(ue,{y:r,x:a,width:o,height:l},""===m.message?n.createElement(xe,null,""===m.imageURL?n.createElement(ye,null,"오른쪽 버튼을 클릭해서 사진을 업로드해주세요."):n.createElement("img",{src:m.imageURL}),n.createElement(fe,{size:o/s.width,onClick:x,right:s.x+s.width<32?-5:o},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(be,{onClick:p,size:o/s.width,right:s.x+s.width<32?-5:o},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:g,onChange:u}))):n.createElement(Ce,null,m.message))},Se=({BMID:e,toast:t,x:a,y:i,width:r,height:o,offset:l,initStates:s,board:d})=>{const[c,g]=(0,n.useState)(""),[m,h]=(0,n.useState)({loading:!1,success:!1,warning:""}),p=(0,n.useRef)(),[u,x]=(0,n.useState)("auto"),f=(0,n.useCallback)((e=>{x(p.current.scrollHeight+"px"),g(e.target.value)}),[p]),b=(0,n.useCallback)((async a=>{a.preventDefault(),h({...m,loading:!0}),await E().post(`/api/board/${d}/write/text`,{content:c,x:l.x,y:l.y,width:l.width,height:l.height,BoardMemberId:e}).then((e=>{if(202===e.status)return h({...m,warning:e.data.reason}),setTimeout((()=>{h({...m,warning:""})}),2e3);h({...m,loading:!1,success:!0}),t.dark(`남은 칸은 ${e.data}칸 입니다.`),s()})).catch((e=>{h({...m,loading:!1,warning:e.response.data.reason}),setTimeout((()=>{h({...m,warning:""})}),2e3)}))}),[c,m,d]);return n.createElement(ue,{y:i,x:a,width:r,height:o},""===m.warning?n.createElement(xe,null,m.loading?n.createElement("div",null,"loading..."):n.createElement(we,{style:{height:u},value:c,onChange:f,autoFocus:!0,ref:p}),n.createElement(fe,{size:r/l.width,onClick:b,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"})))):n.createElement(Ce,null,m.warning))},Me=({BMID:e,toast:t,x:a,y:i,width:r,height:o,offset:l,initStates:s,board:d})=>{const[c,g]=(0,$.Z)(""),[m,h]=(0,$.Z)(""),p=(0,n.useRef)(),[u,x]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),f=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await x({...u,loading:!0}),await E().post(`/api/uploadImage?type=upload&board=${d}&contentName=note`,t).then((e=>{x({...u,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{x({...u,loading:!1,message:e.response.data})}))}),[u,d]),b=(0,n.useCallback)((async()=>{x({...u,loading:!0}),await E().post(`/api/board/${d}/write/note`,{background_img:u.imageURL,head:c,paragraph:m,x:l.x,y:l.y,width:l.width,height:l.height,BoardMemberId:e}).then((e=>{if(202===e.status)return x({...u,loading:!1,message:e.data.reason}),setTimeout((()=>{x({...u,message:""})}),2e3);x({...u,loading:!1,success:!0}),t.dark(`남은 칸은 ${e.data}칸 입니다.`),s()})).catch((e=>{x({...u,loading:!1,message:e.response.data.reason})}))}),[u,m,c,d]);return n.createElement(ue,{y:i,x:a,width:r,height:o},""===u.message?n.createElement(xe,{className:"note"},n.createElement(ve,{src:""!==u.imageURL?u.imageURL:null},n.createElement(Ee,{size:o/l.height},n.createElement(ke,{key:"headerInput",type:"text",placeholder:"타이틀을 입력해주세요.",value:c,onChange:g})),n.createElement(Ee,{size:o-o/l.height-20},n.createElement(we,{value:m,onChange:h,autoFocus:!0,placeholder:"본문 내용을 입력해주세요.",style:{textAlign:"left"}}))),n.createElement(fe,{size:r/l.width,onClick:b,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(be,{onClick:()=>{p.current.click()},size:r/l.width,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:p,onChange:f}))):n.createElement(Ce,null,u.message))},Ze=({board:e,BMID:t,addState:a,menuState:i,rectSize:r,rPos:o,offset:l,initStates:s,openAddComponent:d,toast:c})=>n.createElement(n.Fragment,null,n.createElement(me,{clicked:i.flg,x:i.x,y:i.y,disp:i.disp},n.createElement(he,{onClick:()=>d(1)},"Text"),n.createElement(he,{onClick:()=>d(2)},"Note"),n.createElement(he,{onClick:()=>d(3)},"Image")),1===a&&n.createElement(Se,{toast:c,width:r.width,height:r.height,x:o.x,y:o.y,offset:l,initStates:s,board:e,BMID:t}),2===a&&n.createElement(Me,{toast:c,width:r.width,height:r.height,x:o.x,y:o.y,offset:l,initStates:s,board:e,BMID:t}),3===a&&n.createElement(ze,{toast:c,width:r.width,height:r.height,x:o.x,y:o.y,offset:l,initStates:s,board:e,BMID:t})),Be=m.F4`
	0% {
		width: 0%;
		height: 0%;
	}
	50% {
		width: 30%;
		height: 30%;
	}
	100% {
		width: 100%;
		height: 100%;
	}
`,De=(0,g.Z)("div",{target:"exb3tr4",label:"ComponentBox"})("position:absolute;width:",(e=>e.width),";height:",(e=>e.height),";left:",(e=>e.x),";top:",(e=>e.y),";display:flex;align-items:center;justify-content:center;background:transparent;z-index:4;padding:2px;"),je=(0,g.Z)("div",{target:"exb3tr3",label:"AltBox"})({name:"1lj8kr0",styles:"position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0, 0, 0, 0.8);display:none;justify-content:center;align-items:center;color:#fff;&>div{display:flex;}"}),Ie=(0,g.Z)("pre",{target:"exb3tr2",label:"TextComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, 0.3);background:rgba(0, 0, 0, 0.75);color:#fff;width:100%;height:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;animation:",Be," 0.3s ease-in-out 1;overflow:hidden;padding:5px;white-space:break-spaces;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, 0.3);z-index:5;.alt{display:flex;}}@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}"),Re=(0,g.Z)("div",{target:"exb3tr1",label:"ImageComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, 0.3);display:flex;align-items:center;justify-content:center;cursor:pointer;border-radius:5px;overflow:hidden;width:100%;height:100%;animation:",Be," 0.3s ease-in-out 1;@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}&>img{width:100%;height:100%;object-fit:cover;}&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, 0.3);z-index:5;.alt{display:flex;}}"),Ne=(0,g.Z)("div",{target:"exb3tr0",label:"NoteComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, 0.3);color:#fff;display:flex;flex-direction:column;align-items:center;justify-content:center;cursor:pointer;animation:",Be," 0.3s ease-in-out 1;width:100%;height:100%;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"rgba(0, 0, 0, .75)"),";background-size:cover;overflow:hidden;padding:5px;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, 0.3);z-index:5;.alt{display:flex;}}.head{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;height:auto;font-size:20px;font-weight:600;padding-bottom:0.5rem;white-space:break-spaces;}&>pre{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;overflow:hidden;text-overflow:ellipsis;padding:5px;white-space:break-spaces;}@media screen and (max-width: 800px){font-size:10px;.head{font-size:14px;padding-bottom:0.2rem;}&>pre{padding:2px;}}@media screen and (max-width: 500px){font-size:8px;.head{font-size:12px;padding-bottom:0.1rem;}}"),Le=({boardData:e,defaultRectSize:t,openDetailWindow:a})=>n.createElement(n.Fragment,null,e?.TextContents&&e?.TextContents.map(((e,i)=>n.createElement(De,{key:i,width:t*e.width,height:t*e.height,x:t*e.x,y:t*e.y},n.createElement(Ie,{onClick:()=>a(1,e.id,e)},e.content,n.createElement(je,{className:"alt"},e.BoardMember?e.BoardMember.username:"unknown user"))))),e?.Images&&e?.Images.map(((e,i)=>n.createElement(De,{key:i,width:t*e.width,height:t*e.height,x:t*e.x,y:t*e.y},n.createElement(Re,{onClick:()=>a(3,e.id,e)},n.createElement(je,{className:"alt"},e.BoardMember?e.BoardMember.username:"unknown user"),n.createElement("img",{src:e.url}))))),e?.Notes&&e?.Notes.map(((e,i)=>n.createElement(De,{key:i,width:t*e.width,height:t*e.height,x:t*e.x,y:t*e.y},n.createElement(Ne,{onClick:()=>a(2,e.id,e),src:e.background_img?e.background_img:""},n.createElement(je,{className:"alt"},e.BoardMember?e.BoardMember.username:"unknown user"),n.createElement("h3",{className:"head"},e.head),n.createElement("pre",{className:"para",style:{height:t*e.height-10}},n.createElement("p",null,e.paragraph))))))),$e=(0,g.Z)("div",{target:"etwwole1",label:"OnModeAlt"})({name:"1ew80oi",styles:"position:relative;background:#000;display:flex;justify-content:center;align-items:center;z-index:21;color:#fff;padding:.5rem;border-radius:3px;line-height:1.2;border:1px solid #999;transition:.3s;cursor:pointer;width:fit-content;margin-bottom:1rem;&.resize{flex-direction:column;}&>img{background:transparent;}&>span{width:0;height:1rem;overflow:hidden;}&:hover{&>img{margin-left:.5rem;}&>span{width:fit-content;}}"}),Ae=(0,g.Z)("div",{target:"etwwole0",label:"ResizeRemote"})({name:"b9iqma",styles:"display:flex;justify-content:center;align-items:center;&>span{width:4rem;}&>button{width:1.5rem;height:1.5rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;background:transparent;cursor:pointer;}button.decrease img{transform:rotate(180deg);}&>div{background:rgb(32, 178, 170);box-shadow:0 0 3px 1px rgb(32, 178, 170);width:1.5rem;height:1.5rem;border-radius:1rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;}&:nth-of-type(2){margin-top:0.5rem;}"}),Fe=({rectSize:e,defaultRectSize:t,cancelChangeBlockStatus:a,updatePosition:i,setRectSize:r})=>{const[o,l]=(0,n.useState)(!1);return n.createElement("div",{style:{position:"absolute",top:"10px",left:"10px"}},n.createElement($e,{onClick:()=>{a()}},n.createElement("span",null,"돌아가기"),n.createElement("img",{src:"/public/close.svg"})),n.createElement($e,{onClick:i},n.createElement("span",null,"수정하기"),n.createElement("img",{src:"/public/check.svg"})),o?n.createElement($e,{className:"resize",style:{cursor:"none"}},n.createElement(Ae,null,n.createElement("span",null,"WIDTH -"),n.createElement("button",{className:"decrease",onClick:()=>r({...e,width:e.width-t})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,e.width/t),n.createElement("button",{onClick:()=>r({...e,width:e.width+t})},n.createElement("img",{src:"/public/arrow.svg"}))),n.createElement(Ae,null,n.createElement("span",null,"HEIGHT -"),n.createElement("button",{className:"decrease",onClick:()=>r({...e,height:e.height-t})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,e.height/t),n.createElement("button",{onClick:()=>r({...e,height:e.height+t})},n.createElement("img",{src:"/public/arrow.svg"})))):n.createElement($e,{onClick:()=>l(!0)},n.createElement("span",null,"크기 변경하기"),n.createElement("img",{src:"/public/resize.svg"})))};f().extend(w());const He=({board:e,boardData:t,dataReval:a,userData:i})=>{const r=n.useRef(),[o,l]=(0,n.useState)({x:0,y:0,dragged:!1}),[s,d]=(0,n.useState)({x:0,y:0}),[c,g]=(0,n.useState)({x:0,y:0}),[m,h]=(0,n.useState)({x:0,y:0,flg:!1,disp:!1}),[p,u]=(0,n.useState)({x:0,y:0,width:0,height:0}),[x,f]=(0,n.useState)(0),[b,w]=(0,n.useState)({category:0,id:0,flg:!1,loadComment:!1,content:null}),[v,C]=(0,n.useState)(""),[z,M]=(0,n.useState)(window.innerWidth),[Z,j]=(0,n.useState)(z/32),[$,A]=(0,n.useState)({width:Z,height:Z}),[F,H]=(0,n.useState)(20*Z),[T,U]=(0,n.useState)(),[_,Y]=(0,n.useState)(!1),W=t?.background?t.background:"";(0,n.useEffect)((()=>{g({x:c.x/Z*window.innerWidth/32,y:c.y/Z*window.innerWidth/32}),A({width:$.width/Z*window.innerWidth/32,height:$.height/Z*window.innerWidth/32}),M(window.innerWidth),j(window.innerWidth/32),H(window.innerWidth/32*20)}),[Z]);const P=(0,n.useCallback)((e=>{const t=$.width/Z,a=$.height/Z;a*t<4?C("최소 4칸의 영역을 선택해야합니다."):3===e&&a*t<6?C("이미지는 최소 6칸의 영역을 선택해야합니다."):2===e&&a*t<20?C("노트는 최소 20칸이상의 영역을 선택해야합니다."):2===e&&(a<3||t<4)?C("노트는 4x3이상의 영역을 선택해야합니다."):(u({x:c.x/Z,y:c.y/Z,width:$.width/Z,height:$.height/Z}),f(e))}),[$,Z,c]),q=(0,n.useCallback)((()=>{if(o&&!_){let e=Z*Math.floor(Math.abs(s.x-s.x%Z-o.x)/Z+1),t=Z*Math.floor(Math.abs(s.y-s.y%Z-o.y)/Z+1);const a=s.x-o.x,n=s.y-o.y;a<0&&n>0?g({...c,x:s.x-s.x%Z}):a>0&&n<0?g({...c,y:s.y-s.y%Z}):a<0&&n<0&&g({x:s.x-s.x%Z,y:s.y-s.y%Z}),a>Z&&(e+=Z),n>Z&&(t+=Z),A({width:e,height:t})}}),[s,o,c,Z,_]),O=(0,n.useCallback)((e=>{B(t,b,c,$,Z)?P(e):C("겹치는 영역이 존재합니다.")}),[P]),X=(0,n.useCallback)((()=>{A({width:Z,height:Z}),l({...o,dragged:!1}),h({...m,flg:!1}),f(0),C("")}),[Z,o,m]),V=(0,n.useCallback)(((e,t,a)=>{w({...b,flg:!0,category:e,id:t,content:a}),U(a.Comments)}),[b]),K=(0,n.useCallback)((()=>{w({category:0,id:0,flg:!1,loadComment:!1,content:null})}),[]),G=(0,n.useCallback)((async(t,n,i)=>{let r="",o={x:b.content?.x,y:b.content?.y,width:b.content?.width,height:b.content?.height,content:"",head:"",paragraph:"",background_img:"",url:""};if(1===b.category)r=`/api/board/${e}/text/${b.id}`,o={...o,content:t};else if(2===b.category)r=`/api/board/${e}/note/${b.id}`,o={...o,background_img:i,head:n,paragraph:t};else{if(3!==b.category)return await C("잘못된 접근입니다."),void await setTimeout((()=>{C("")}),2e3);if(""===i)return await C("이미지를 다시 업로드해주세요"),void await setTimeout((()=>{C("")}),2e3);r=`/api/board/${e}/image/${b.id}`,o={...o,url:i}}await E().patch(r,o).then((()=>{w({category:0,id:0,flg:!1,loadComment:!1,content:null}),y.Am.dark("게시물이 수정되었습니다."),a()})).catch((e=>{C(e.response.data.reason),setTimeout((()=>{C("")}),2e3)}))}),[b,e,a]),J=(0,n.useCallback)((()=>{b.content&&(h({...m,flg:!1,disp:!1}),w({...b,flg:!1}),Y(!0),g({x:b.content.x*Z,y:b.content.y*Z}),A({width:b.content.width*Z,height:b.content.height*Z}))}),[b,Z,m]);return(0,n.useEffect)((()=>{0!=x||_||(o.dragged?q():g({x:s.x-s.x%Z,y:s.y-s.y%Z}))}),[s,o,x,Z,_]),(0,n.useEffect)((()=>{0!==x&&h({...m,flg:!1})}),[x]),(0,n.useEffect)((()=>{let e;1===b.category?e=t?.TextContents.find((e=>e.id===b.id))?.Comments:2===b.category?e=t?.Notes?.find((e=>e.id===b.id))?.Comments:3===b.category&&(e=t?.Images?.find((e=>e.id===b.id))?.Comments),U(e)}),[t,b]),n.createElement(I,null,""!==v&&n.createElement(R,null,v),b.flg&&n.createElement(N,{onClick:K}),n.createElement(se,{openDetail:b,userData:i,board:e,toast:y.Am,onSubmitEdit:G,moveMode:J,dataReval:a,setOpenDetail:w,comments:T}),n.createElement(Ze,{board:e,BMID:i.id,addState:x,menuState:m,rectSize:$,rPos:c,offset:p,initStates:X,openAddComponent:O,toast:y.Am}),n.createElement(Le,{boardData:t,defaultRectSize:Z,openDetailWindow:V}),n.createElement(L,{url:W,op:_?.1:.8,height:F,style:{zIndex:_?20:1}},n.createElement(k.Stage,{style:{height:F,background:_?"rgba(0, 0, 0, .2)":""},width:z,height:F,onMouseMove:_?void 0:e=>{if(!m.flg){r.current.getAbsoluteTransform().copy().invert();const t=e.target.getStage()?.getPointerPosition();d({x:t?.x,y:t?.y})}},onMouseDown:_?void 0:()=>{0!==x||_||l({x:s.x,y:s.y,dragged:!0})},onMouseUp:_?void 0:()=>{if(!_)if(m.flg||0!=x)X();else{const e=s.x>window.innerWidth-140?s.x-140:s.x,t=s.y>window.innerHeight-140?s.y-140:s.y;h({x:e,y:t,flg:!0,disp:!0})}}},n.createElement(k.Layer,{ref:r},n.createElement(k.Group,null,n.createElement(S,{x:c.x,y:c.y,canMove:_,openDetail:b,rectSize:$,rectDE:e=>{g({x:e.target.x()-e.target.x()%Z,y:e.target.y()-e.target.y()%Z})}}))))),_&&n.createElement(Fe,{rectSize:$,defaultRectSize:Z,cancelChangeBlockStatus:()=>{Y(!1),X()},updatePosition:async()=>{if(!((e,t,a,n,i)=>!(!e||!B(e,t,a,n,i)||D(e.TextContents,t,a,n,i)&&D(e.Images,t,a,n,i)&&D(e.Notes,t,a,n,i)))(t,b,c,$,Z))return C("이동할 수 없는 위치입니다."),setTimeout((()=>{C("")}),2e3);let n="";const i=$.width/Z,r=$.height/Z;if(r*i<4)return C("최소 4칸의 영역을 선택해야합니다.");if(3===b.category&&r*i<6)return C("이미지는 최소 6칸의 영역을 선택해야합니다.");if(2===b.category&&r*i<20)return C("노트는 최소 20칸이상의 영역을 선택해야합니다.");if(2===b.category&&(r<3||i<4))return C("노트는 4x3이상의 영역을 선택해야합니다.");let o={x:c.x/Z,y:c.y/Z,width:$.width/Z,height:$.height/Z,content:b.content?.content,head:b.content?.head,paragraph:b.content?.paragraph,background_img:b.content?.background_img,url:b.content?.url};if(1===b.category)n=`/api/board/${e}/text/${b.id}`;else if(2===b.category)n=`/api/board/${e}/note/${b.id}`;else{if(3!==b.category)return await C("잘못된 접근입니다."),void await setTimeout((()=>{C("")}),2e3);n=`/api/board/${e}/image/${b.id}`}await E().patch(n,o).then((e=>{a(),K(),C(""),Y(!1),!1===e.data?y.Am.dark("게시물이 수정되었습니다."):y.Am.dark(`남은 칸은 ${e.data}칸 입니다.`),X()})).catch((e=>{C(e.response.data.reason),setTimeout((()=>{C("")}),2e3)})),E().patch},setRectSize:A}),n.createElement(de.Z,{className:"board"}),n.createElement(y.Ix,{position:"bottom-left",autoClose:5e3,hideProgressBar:!1,newestOnTop:!0,closeOnClick:!1,rtl:!1,pauseOnFocusLoss:!0,draggable:!0,pauseOnHover:!0}))},Te=(0,g.Z)("div",{target:"eszwe723",label:"UserMenu"})({name:"1lbhgn",styles:"position:fixed;height:100vh;width:300px;right:0;background:#000;transition:0.3s;z-index:11"}),Ue=(0,g.Z)("div",{target:"eszwe722",label:"MenuContainer"})({name:"84txof",styles:"position:relative;height:100%;div{color:#fff;}&>p{padding:3px;background:#444;font-size:10px;text-align:center;color:#fff;width:80%;margin:0 auto;border-radius:10px;}"}),_e=(0,g.Z)("div",{target:"eszwe721",label:"UserList"})({name:"90k1l",styles:"width:100%;height:20%;padding:1rem;&>ul{list-style-type:none;li{position:relative;padding-left:1rem;&:before{position:absolute;content:'';top:50%;left:0;width:5px;height:5px;border-radius:5px;background:#66dd66;transform:translateY(-50%);}}}"}),Ye=(0,g.Z)("div",{target:"eszwe720",label:"LogOutButton"})({name:"iw7g12",styles:"width:100%;height:40px;cursor:pointer;display:flex;align-items:center;justify-content:center;&:hover{background:#111;}"});var We=a(5480);const Pe=m.F4`
	from {
		opacity: 0;
		transform: translateX(-10%);
	}
	to {
		opacity: 1;
		transform: translateX(0%);
	}
`,qe=m.F4`
	from {
		opacity: 0;
		transform: translateX(10%);
	}
	to {
		opacity: 1;
		transform: translateX(0%);
	}
`,Oe=(0,g.Z)("div",{target:"e6ap02b3",label:"ChatRoom"})({name:"2fwxmc",styles:"height:calc(80% - 98px)"}),Xe=(0,g.Z)("form",{target:"e6ap02b2",label:"ChatForm"})({name:"14cfcr5",styles:"width:100%;display:flex;align-items:center;padding:3px 10px;&>input{width:100%;padding:0.5rem;font-size:14px;border-radius:5px;}"}),Ve=(0,g.Z)("li",{target:"e6ap02b1",label:"Chat"})("display:flex;flex-direction:column;align-items:flex-start;margin-bottom:0.5rem;margin-left:1rem;animation:",Pe," 0.3s ease-in-out 1;&>div{display:flex;align-items:flex-end;div{background:#fafafa;padding:0.5rem;border-radius:5px;color:#111;position:relative;&::before{content:'';transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{font-size:8px;color:#777;margin-left:5px;word-break:keep-all;}}&.myChat{align-items:flex-end;margin-right:1rem;margin-left:0;animation:",qe," 0.3s ease-in-out 1;&>div{flex-direction:row-reverse;div{background:#c7efdf;&::before{display:none;}&::after{content:'';transform:skewX(-30deg);width:15px;right:0;height:15px;background:#c7efdf;position:absolute;top:0;z-index:-1;}}&>p{margin-right:5px;}}}"),Ke=(0,g.Z)("div",{target:"e6ap02b0",label:"StickyHeader"})({name:"1jxjh8z",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;font-weight:bold;font-size:8px;height:20px;line-height:27px;padding:0 16px;--saf-0:rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0, 0, 0, 0.08);border-radius:24px"});f().extend(w());const Ge=({userData:e,board:t})=>{const[a]=c(t),{data:i,mutate:l,setSize:s}=(0,r.g_)((a=>e?`/api/board/${t}/chats?perPage=20&page=${a+1}`:null),o.Z),[d,g,m]=(0,$.Z)(""),h=new Date,p=(0,n.useRef)(null),u=function(e){const t={};return e.forEach((e=>{const a=f()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[a])?t[a].push(e):t[a]=[e]})),t}(i?[].concat(...i).reverse():[]),x=0===i?.[0]?.length,b=x||i&&i[0]?.length<20,w=(0,n.useCallback)((a=>{if(a.preventDefault(),d?.trim()&&i&&e){const a=d;l((t=>(t[0].unshift({id:(i[0][0]?.id||0)+1,userId:e.id,username:e.username,content:a,createdAt:new Date}),t)),!1).then((()=>{m(""),p.current&&p.current.scrollToBottom()})),E().post(`/api/board/${t}/chat`,{content:a,userId:e.id,username:e.username}).catch(console.error)}}),[e,d,i]),y=(0,n.useCallback)((e=>{"Enter"===e.key&&(e.shiftKey||(e.preventDefault(),w(e)))}),[w]),v=t=>{e&&t.userId!==e?.id&&l((e=>(e[0].unshift(t),e)),!1).then((()=>{console.log("get new Message")}))},k=(0,n.useCallback)((e=>{0!==e.scrollTop||b||x||s((e=>e+1)).then((()=>{p.current?.scrollTop(p.current?.getScrollHeight()-e.scrollHeight)}))}),[p,b,x]);return(0,n.useEffect)((()=>(a?.on("newChat",v),()=>{a?.off("newChat",v)})),[a,e]),(0,n.useEffect)((()=>{1===i?.length&&p.current?.scrollToBottom()}),[i,b,x]),n.createElement(n.Fragment,null,n.createElement("p",null,"현재 접속한 사람들과 채팅을 할 수 있습니다."),n.createElement(Oe,null,n.createElement(We.$B,{autoHide:!0,ref:p,onScrollFrame:k,style:{height:"100%",overflowX:"hidden"}},Object.entries(u).map((([t,a])=>n.createElement("section",{key:t},n.createElement(Ke,null,t),a.map((t=>n.createElement(Ve,{key:t.id,className:t.userId===e?.id?"myChat":""},n.createElement("p",null,t.username),n.createElement("div",null,n.createElement("div",null,t.content),n.createElement("p",null,f()(t.createdAt).format("YYYYMMDD")===f()(h).format("YYYYMMDD")?f()(t.createdAt).format("LT"):f()(t.createdAt).format("YYYY년 MM월 DD일"))))))))))),n.createElement(Xe,{onSubmit:w},n.createElement("input",{type:"text",value:d,onChange:g,onKeyPress:y,placeholder:"이곳에 채팅을 입력해주세요"})))},Je=({menuFlg:e,board:t,boardData:a,myDataInBoard:i,userList:r,history:o,toast:l})=>{const s=(0,n.useCallback)((()=>{"string"==typeof a||a.AdminId!==i.UserId?E().delete("/api/quitBoard/"+t).then((()=>{l.dark(t+" 보드에서 나갔습니다."),o.push("/main")})).catch((e=>{l.error(e.response.data)})):alert("현재 관리자는 보드에서 나갈 수 없습니다.")}),[a,t]);return n.createElement(Te,{style:{transform:`translateX(${e?"0":"100%"})`}},n.createElement(Ue,null,n.createElement(_e,null,n.createElement("p",null,"User List"),n.createElement("ul",null,r?.map(((e,t)=>n.createElement("li",{key:t},e.username===i?.username?e.username+" (me)":e.username))))),t&&i&&a&&n.createElement(Ge,{userData:i,board:t}),n.createElement(Ye,{onClick:s},"보드에서 나가기")))},Qe=({history:e})=>{const t=(0,i.UO)(),a=encodeURIComponent(t.board),[s,d]=c(a),{data:g}=(0,r.ZP)("/api/auth",o.Z),{data:m,revalidate:h}=(0,r.ZP)(g?"/api/board/"+a:null,o.Z),{data:x}=(0,r.ZP)(m&&g?`/api/board/${a}/me`:null,o.Z),[f,b]=(0,n.useState)(!1),[w,v]=(0,n.useState)();return(0,n.useEffect)((()=>()=>{console.info("disconnect socket",a),d()}),[a,d]),(0,n.useEffect)((()=>{m&&g&&x&&(console.info("로그인"),s?.emit("login",{id:x.id,username:x.username}))}),[s,g,m,x]),(0,n.useEffect)((()=>(s?.on("onlineList",(async e=>{const t=[];await e.forEach((e=>{t.find((t=>t.id===e.id))||t.push(e)})),v(t)})),s?.on("refresh",(()=>{console.log("refresh"),h()})),()=>{s?.off("refresh")})),[s,h]),g?m?"not assigned"!==m&&a?x?n.createElement(n.Fragment,null,f&&n.createElement(p,{style:{zIndex:8},onClick:()=>b(!1)}),n.createElement(Je,{menuFlg:f,board:a,boardData:m,myDataInBoard:x,userList:w,history:e,toast:y.Am}),"string"!=typeof m&&n.createElement("div",{style:{display:"flex",flexDirection:"column"}},n.createElement(u,null,n.createElement("a",{className:"logo",href:"/main"},n.createElement("img",{src:"/public/boardrag.svg"})),n.createElement("div",{className:"up",onClick:()=>b(!f)},f?n.createElement("img",{src:"/public/arrow.svg"}):n.createElement("img",{src:"/public/person.svg"}))),n.createElement(He,{boardData:m,dataReval:h,userData:x,board:a||""}))):n.createElement(l.Z,null):(alert("참여하지 않은 보드입니다."),n.createElement(i.l_,{to:"/main"})):n.createElement(l.Z,null):n.createElement(i.l_,{to:"/auth?prev=/board/"+a})},et=n.memo(Qe)},3564:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(3653),i=a.n(n);const r=e=>i().get(e,{withCredentials:!0}).then((e=>e.data))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,