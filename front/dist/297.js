(self.webpackChunk_42board_front=self.webpackChunk_42board_front||[]).push([[297],{2033:(e,t,a)=>{"use strict";a.d(t,{Z:()=>d});var n=a(7294),i=a(5366);const r=a(9911).F4`
    from {
        transform: rotate(0);
    }
    to {
        transform: rotate(359deg);
    }
`,o=(0,i.Z)("div",{target:"ekojj7n2",label:"LoadingCircleContainer"})({name:"8lbyj9",styles:"width:300px;height:300px;display:flex;justify-content:center;align-items:center;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)"}),l=(0,i.Z)("div",{target:"ekojj7n1",label:"LoadingCircleBox"})("width:150px;height:150px;padding:3px;display:flex;justify-content:center;align-items:center;border-radius:50%;background:rgb(63, 249, 200);background:linear-gradient(0deg, rgba(63, 249, 200, 0.1) 33%, rgba(63, 249, 220, 1) 100%);animation:",r," .8s linear 0s infinite;"),s=(0,i.Z)("div",{target:"ekojj7n0",label:"LoadingCircleCore"})({name:"1sudnkc",styles:"width:100%;height:100%;background:#001c29;border-radius:50%"}),d=()=>n.createElement(o,null,n.createElement(l,null,n.createElement(s,null)))},297:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>Ie});var n=a(7294),i=a(5977),r=a(8100),o=a(3564),l=a(2033),s=a(3653),d=a.n(s),c=a(5615);const g={},h=e=>{const t=(0,n.useCallback)((()=>{e&&g[e]&&(g[e].disconnect(),delete g[e])}),[e]);return e?(g[e]||(g[e]=(0,c.Z)("https://api.42board.com/board-"+e,{transports:["websocket"]}),console.info("create socket",e,g[e].id)),[g[e],t]):[void 0,t]};var m=a(5366),p=a(9911);const u=p.F4`
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
`,x=(0,m.Z)("div",{target:"e1jwxo3k5",label:"UserMenu"})({name:"hownqd",styles:"position:fixed;height:100vh;width:300px;right:0;background:#000;transition:.3s;z-index:9"}),f=(0,m.Z)("div",{target:"e1jwxo3k4",label:"MenuContainer"})({name:"u91ux",styles:"position:relative;height:100%;div{color:#fff;}&>p{padding:3px;background:#444;font-size:10px;text-align:center;color:#fff;width:80%;margin:0 auto;border-radius:10px;}.up{position:absolute;cursor:pointer;top:1rem;padding:.5rem;transform:translateX(-150%);width:30px;height:30px;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px;}"}),w=((0,m.Z)("div",{target:"e1jwxo3k3",label:"OpenMenu"})({name:"164x91j",styles:"position:fixed;top:1rem;right:1rem;width:30px;height:30px;z-index:9;cursor:pointer;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px"}),(0,m.Z)("div",{target:"e1jwxo3k2",label:"LogOutButton"})({name:"iw7g12",styles:"width:100%;height:40px;cursor:pointer;display:flex;align-items:center;justify-content:center;&:hover{background:#111;}"})),b=(0,m.Z)("div",{target:"e1jwxo3k1",label:"UserList"})({name:"1y18uyg",styles:'width:100%;height:20%;padding:1rem;&>ul{list-style-type:none;li{position:relative;padding-left:1rem;&:before{position:absolute;content:"";top:50%;left:0;width:5px;height:5px;border-radius:5px;background:#66DD66;transform:translateY(-50%);}}}'}),y=(0,m.Z)("div",{target:"e1jwxo3k0",label:"DetailBackground"})("width:100%;height:100vh;z-index:12;position:fixed;top:0;left:0;background:rgba(0, 0, 0, .4);animation:",u," .5s ease-in-out 1;");var v=a(7484),E=a.n(v),k=a(6176),z=a.n(k),C=a(1298);const Z=p.F4`
    from {
        opacity: 0;
        transform: translateX(-10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`,j=p.F4`
    from {
        opacity: 0;
        transform: translateX(10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`,S=(0,m.Z)("div",{target:"enrxnwv3",label:"ChatRoom"})({name:"2fwxmc",styles:"height:calc(80% - 98px)"}),M=(0,m.Z)("form",{target:"enrxnwv2",label:"ChatForm"})({name:"km7oic",styles:"width:100%;display:flex;align-items:center;padding:3px 10px;&>input{width:100%;padding:.5rem;font-size:14px;border-radius:5px;}"}),L=(0,m.Z)("li",{target:"enrxnwv1",label:"Chat"})("display:flex;flex-direction:column;align-items:flex-start;margin-bottom:.5rem;margin-left:1rem;animation:",Z,' .3s ease-in-out 1;&>div{display:flex;align-items:flex-end;div{background:#fafafa;padding:.5rem;border-radius:5px;color:#111;position:relative;&::before{content:"";transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{font-size:8px;color:#777;margin-left:5px;word-break:keep-all;}}&.myChat{align-items:flex-end;margin-right:1rem;margin-left:0;animation:',j,' .3s ease-in-out 1;&>div{flex-direction:row-reverse;div{background:#c7efdf;&::before{display:none;}&::after{content:"";transform:skewX(-30deg);width:15px;right:0;height:15px;background:#c7efdf;position:absolute;top:0;z-index:-1;}}&>p{margin-right:5px;}}}'),D=(0,m.Z)("div",{target:"enrxnwv0",label:"StickyHeader"})({name:"1jxjh8z",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;font-weight:bold;font-size:8px;height:20px;line-height:27px;padding:0 16px;--saf-0:rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0, 0, 0, 0.08);border-radius:24px"}),B=e=>{const[t,a]=(0,n.useState)(e);return[t,(0,n.useCallback)((e=>{a(e.target.value)}),[]),a]};E().extend(z());const I=({userData:e,board:t})=>{const[a,i]=h(t),{data:l,mutate:s,setSize:c}=(0,r.g_)((a=>e?`/api/board/${t}/chats?perPage=20&page=${a+1}`:null),o.Z),[g,m,p]=B(""),[u,x]=n.useState(!0),f=new Date,w=(0,n.useRef)(null),b=function(e){const t={};return e.forEach((e=>{const a=E()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[a])?t[a].push(e):t[a]=[e]})),t}(l?[].concat(...l).reverse():[]),y=0===l?.[0]?.length,v=y||l&&l[0]?.length<20,k=(0,n.useCallback)((a=>{if(a.preventDefault(),g?.trim()&&l&&e){const a=g;s((t=>(t[0].unshift({id:(l[0][0]?.id||0)+1,userId:e.id,username:e.username,content:a,createdAt:new Date}),t)),!1).then((()=>{p(""),w.current&&w.current.scrollToBottom()})),d().post(`/api/board/${t}/chat`,{content:a,userId:e.id,username:e.username}).catch(console.error)}}),[e,g]),z=(0,n.useCallback)((e=>{"Enter"===e.key&&(e.shiftKey||(e.preventDefault(),k(e)))}),[g]),Z=t=>{e&&t.userId!==e?.id&&s((e=>(e[0].unshift(t),e)),!1).then((()=>{console.log("get new Message")}))},j=(0,n.useCallback)((e=>{0!==e.scrollTop||v||y||c((e=>e+1)).then((()=>{w.current?.scrollTop(w.current?.getScrollHeight()-e.scrollHeight)}))}),[w,v,y]);return(0,n.useEffect)((()=>(a?.on("newChat",Z),()=>{a?.off("newChat",Z)})),[a,e]),(0,n.useEffect)((()=>{1===l?.length&&(w.current?.scrollToBottom(),x(!1))}),[l,v,y]),n.createElement(n.Fragment,null,n.createElement("p",null,"현재 접속한 사람들과 채팅을 할 수 있습니다."),n.createElement(S,null,n.createElement(C.$B,{autoHide:!0,ref:w,onScrollFrame:j,style:{height:"100%",overflow:"auto"}},Object.entries(b).map((([t,a])=>n.createElement("section",{key:t},n.createElement(D,null,t),a.map((t=>n.createElement(L,{key:t.id,className:t.userId===e?.id?"myChat":""},n.createElement("p",null,t.username),n.createElement("div",null,n.createElement("div",null,t.content),n.createElement("p",null,E()(t.createdAt).diff(f,"day")>-1?E()(t.createdAt).format("LT"):E()(t.createdAt).format("YYYY년 MM월 DD일"))))))))))),n.createElement(M,{onSubmit:k},n.createElement("input",{type:"text",value:g,onChange:m,onKeyPress:z,placeholder:"이곳에 채팅을 입력해주세요"})))};var R=a(1171),U=(a(5202),a(3286)),A=a(4420),$=a.n(A);const H=p.F4`
    from {
        max-width: 0;
        max-height: 0;
    }
    to {
        max-width: 200px;
        max-height: 200px;
    }
`,T=p.F4`
    from {
        max-width: 200px;
        max-height: 200px;
    }
    to {
        max-width: 0px;
        max-height: 0px
    }
`,F=p.F4`
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
`,N=p.F4`
    from {
        opacity: 0;
        transform: translateX(-10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`,_=p.F4`
    0% {
        width: 0%;
        height: 0%;
    }
    50% {
        width: 30%;
        height: 30%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,Y=(0,m.Z)("div",{target:"e7dz7326",label:"KonvaContainer"})({name:"r3bm38",styles:"position:relative;display:flex;flex-direction:column;min-height:100vh;transition:.3s"}),X=(0,m.Z)("div",{target:"e7dz7325",label:"WarnMessage"})({name:"15ept4m",styles:"position:absolute;background:rgba(0, 0, 0, .6);z-index:50;border-radius:5px;color:#ff5555;font-weight:500;font-size:14px;padding:1rem 2rem;top:50%;left:50%;transform:translate(-50%, -50%)"}),W=(0,m.Z)("div",{target:"e7dz7324",label:"DetailBackground"})("width:100%;height:100%;z-index:12;position:absolute;top:0;left:0;background:rgba(0, 0, 0, .4);animation:",F," .5s ease-in-out 1;"),O=(0,m.Z)("div",{target:"e7dz7323",label:"DetailWindow"})({name:"b8x90n",styles:"position:fixed;min-height:100vh;height:100%;width:400px;background:rgba(0, 0, 0, .85);top:0;left:0;z-index:13;transition:.3s;color:#fff"}),P=(0,m.Z)("div",{target:"e7dz7322",label:"DetailBox"})({name:"1b7ro16",styles:"position:relative;width:100%;height:100%;padding:1rem;padding-bottom:4rem;overflow:auto;&>div{margin:1rem 0;}"}),V=(0,m.Z)("div",{target:"e7dz7321",label:"TopFixContent"})({name:"1i7bcd8",styles:"position:relative;width:100%;overflow:hidden"}),q=(0,m.Z)("div",{target:"e7dz7320",label:"BottomFixContent"})({name:"14qk46b",styles:"position:fixed;bottom:0;display:flex;overflow:hidden;height:4rem;background:#000;padding:1rem .5rem;&>input{width:calc(400px - 4rem);padding:5px;border-radius:5px;box-shadow:0 0 4px 1px #ffffff;font-size:14px;margin-right:.5rem;}&>div{width:2rem;background:#radial-gradient(ellipse at bottom, #002534 0%, #090a0f 100%) no-repeat;cursor:pointer;color:#fff;transition:.3s;display:flex;justify-content:center;align-items:center;svg{fill:#fff;}}"}),K=(0,m.Z)("div",{target:"e7dz7319",label:"UserInfo"})({name:"11lxd0m",styles:"width:100%;height:6rem;display:flex;justify-content:flex-start;align-items:center;&>img{width:5rem;height:5rem;border-radius:100%;margin-right:1rem;}&>p{font-size:18px;font-weight:700;width:100%;}"}),G=(0,m.Z)("div",{target:"e7dz7318",label:"UDButtonBox"})({name:"tvvsuy",styles:"display:flex;align-items:center;justify-content:center;&>button{background:transparent!important;cursor:pointer;}"}),J=(0,m.Z)("div",{target:"e7dz7317",label:"MomentBox"})({name:"1ndgiad",styles:"margin-top:.5rem;margin-bottom:1rem;&>div{font-size:12px;display:flex;align-items:center;color:#d5d5d5;p{margin-left:.5rem;font-size:14px;color:#fff;}}"}),Q=(0,m.Z)("div",{target:"e7dz7316",label:"DetailContentBox"})({name:"biqufq",styles:"border-radius:5px;background:#fff;color:#000;margin-top:.5rem;overflow:hidden;&>pre{padding:1rem .5rem;white-space:break-spaces;}&>img{width:100%;}&>h2{margin:0 .5rem;padding:1rem 0 .5rem 0;border-bottom:1px solid #ddd;}&>div{padding:1rem;}"}),ee=(0,m.Z)("div",{target:"e7dz7315",label:"EditArea"})({name:"ph2pyk",styles:"position:relative;padding:0!important;overflow:hidden;&>textarea{width:calc(100% - 50px);resize:none;padding:.5rem;}&>input{width:calc(100% - 50px);font-size:24px;padding:.5rem;font-weight:600;margin-bottom:1rem;}"}),te=(0,m.Z)("div",{target:"e7dz7314",label:"EditButtonBox"})({name:"xp8khj",styles:"position:absolute;right:0;top:0;height:100%;width:50px;display:flex;flex-direction:column;align-items:center;justify-content:center;overflow:hidden;.button{height:50%;background:#777;color:#fff;width:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;&.edit{background:#01babc;color:#000;}}"}),ae=(0,m.Z)("div",{target:"e7dz7313",label:"ImageBox"})({name:"16hwasf",styles:"position:relative;width:calc(100% - 50px);height:fit-content;&>img{width:100%;}.temp{width:100%;height:6rem;background:#eee;}"}),ne=(0,m.Z)("div",{target:"e7dz7312",label:"CommentBox"})(""),ie=(0,m.Z)("div",{target:"e7dz7311",label:"Comment"})("display:flex;min-height:3rem;margin-bottom:.5rem;animation:",N,' .5s ease-in-out 1;&>img{width:3rem;height:3rem;border-radius:100%;margin-right:1rem;}.content{width:100%;&>div{display:flex;align-items:flex-end;width:100%;div{background:#f8f8f8;border-radius:5px;color:#000;padding:.5rem;min-height:100%;width:100%;position:relative;&::before{content:"";transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{color:#777;height:fit-content;font-size:10px;margin-left:.3rem;width:8rem;}}}'),re=(0,m.Z)("div",{target:"e7dz7310",label:"MenuBox"})("display:flex;flex-direction:column;position:absolute;background:rgba(0, 0, 0, .85);display:",(e=>e.disp?"block":"none"),";overflow:hidden;color:#efefef;border-radius:5px;box-shadow:0 0 8px 1px rgb(0, 0, 0);max-width:",(e=>e.clicked?"200px":"0px"),";max-height:",(e=>e.clicked?"200px":"0px"),";top:",(e=>e.y),";left:",(e=>e.x),";animation:",(e=>e.clicked?H:T)," .3s ease-in-out 1;z-index:10;"),oe=(0,m.Z)("div",{target:"e7dz739",label:"MenuAttr"})({name:"1jdih7z",styles:"width:120px;padding:1rem;cursor:pointer;position:relative;&:hover{background:rgba(20, 20, 20, .5);}@media screen and (max-width: 800px){font-size:12px;width:100px;padding:.5rem;}@media screen and (max-width: 500px){font-size:10px;width:80px;padding:.3rem;}"}),le=(0,m.Z)("div",{target:"e7dz738",label:"ComponentBox"})("position:absolute;width:",(e=>e.width),";height:",(e=>e.height),";left:",(e=>e.x),";top:",(e=>e.y),";display:flex;align-items:center;justify-content:center;background:transparent;z-index:4;padding:2px;"),se=(0,m.Z)("div",{target:"e7dz737",label:"AltBox"})({name:"tf3ob0",styles:"position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0, 0, 0, .8);display:none;justify-content:center;align-items:center;color:#fff;&>div{display:flex;}"}),de=(0,m.Z)("pre",{target:"e7dz736",label:"TextComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);background:rgba(0, 0, 0, .75);color:#fff;width:100%;height:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;animation:",_," .3s ease-in-out 1;overflow:hidden;padding:5px;white-space:break-spaces;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}"),ce=(0,m.Z)("div",{target:"e7dz735",label:"ImageComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);display:flex;align-items:center;justify-content:center;cursor:pointer;border-radius:5px;overflow:hidden;width:100%;height:100%;animation:",_," .3s ease-in-out 1;@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}&>img{width:100%;height:100%;}&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}"),ge=(0,m.Z)("div",{target:"e7dz734",label:"NoteComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);color:#fff;display:flex;flex-direction:column;align-items:center;justify-content:center;cursor:pointer;animation:",_," .3s ease-in-out 1;width:100%;height:100%;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"rgba(0, 0, 0, .75)"),";background-size:cover;overflow:hidden;padding:5px;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}.head{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;height:auto;font-size:20px;font-weight:600;padding-bottom:.5rem;white-space:break-spaces;}@media screen and (max-width: 800px){font-size:10px;div.head{font-size:14px;}}@media screen and (max-width: 500px){font-size:8px;div.head{font-size:12px;}}&>pre{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;overflow:hidden;text-overflow:ellipsis;padding:5px;white-space:break-spaces;}"),he=(0,m.Z)("div",{target:"e7dz733",label:"OnModeAlt"})({name:"1ew80oi",styles:"position:relative;background:#000;display:flex;justify-content:center;align-items:center;z-index:21;color:#fff;padding:.5rem;border-radius:3px;line-height:1.2;border:1px solid #999;transition:.3s;cursor:pointer;width:fit-content;margin-bottom:1rem;&.resize{flex-direction:column;}&>img{background:transparent;}&>span{width:0;height:1rem;overflow:hidden;}&:hover{&>img{margin-left:.5rem;}&>span{width:fit-content;}}"}),me=(0,m.Z)("div",{target:"e7dz732",label:"ResizeRemote"})({name:"1ej8yoa",styles:"display:flex;justify-content:center;align-items:center;&>span{width:4rem;}&>button{width:1.5rem;height:1.5rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;background:transparent;cursor:pointer;}button.decrease img{transform:rotate(180deg);}&>div{background:rgb(32, 178, 170);box-shadow:0 0 3px 1px rgb(32, 178, 170);width:1.5rem;height:1.5rem;border-radius:1rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;}&:nth-of-type(2){margin-top:.5rem;}"}),pe=(0,m.Z)("div",{target:"e7dz731",label:"BoardFooter"})({name:"uellsq",styles:"width:100%;align-items:center;justify-content:center;color:rgba(255, 255, 255, .6);font-weight:400;font-size:12px;text-align:center;display:flex;padding:1rem;height:100%;background:rgba(0, 0, 0, .1)"}),ue=(0,m.Z)("div",{target:"e7dz730",label:"EditImageInput"})({name:"9jsky2",styles:"position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:50%;padding:.5rem 1rem;background:rgba(0, 0, 0, 0.4);color:#fff;border-radius:3px;display:flex;align-items:center;justify-content:center;height:2rem;cursor:pointer;&>svg{fill:#fff;height:2rem;}"}),xe=p.F4`
    0% {
        width: 0;
        height: 0;
    }
    30% {
        width: 10%;
        height: 10%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,fe=(0,m.Z)("div",{target:"er682az9",label:"AddContainer"})("position:absolute;z-index:4;display:flex;align-items:center;justify-content:center;top:",(e=>e.y+5),";left:",(e=>e.x+5),";width:",(e=>e.width-10),";height:",(e=>e.height-10),";z-index:6;"),we=(0,m.Z)("div",{target:"er682az8",label:"AddBox"})("position:relative;display:flex;align-items:center;justify-content:center;border-radius:5px;background:#fff;box-shadow:0 0 4px 1px rgba(255, 255, 255, .5);color:#000;width:100%;animation:",xe," .3s ease-in-out 1;height:100%;&.note{padding:0;border-radius:5px;}&>img{width:100%;height:100%;border-radius:5px;}"),be=(0,m.Z)("div",{target:"er682az7",label:"SubmitButton"})("position:absolute;display:flex;align-items:center;justify-content:center;top:0;right:",(e=>e.right),";transform:translateX(100%);width:",(e=>e.size-10),";height:",(e=>e.size-10),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");border-radius:5px;background:#01babc;color:#fff;box-shadow:0 0 4px 1px rgba(1, 186, 188, .7);cursor:pointer;padding:2px;&>svg{height:20px;fill:#fff;}@media screen and (max-width: 800px){border-radius:2px;}"),ye=(0,m.Z)("div",{target:"er682az6",label:"ImageInputButton"})("position:absolute;display:flex;align-items:center;justify-content:center;right:",(e=>e.right),";top:",(e=>e.size),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");width:",(e=>e.size-10),";height:",(e=>e.size-10),";border-radius:5px;cursor:pointer;background:#34568B;box-shadow:0 0 4px 1px rgba(52, 86, 139, .7);padding:2px;&>svg{fill:#fff;height:20px;}@media screen and (max-width: 800px){border-radius:2px;}"),ve=(0,m.Z)("textarea",{target:"er682az5",label:"TextArea"})({name:"kf3szx",styles:"width:100%;max-height:100%;overflow:auto;border:none;border-radius:5px;padding:0;white-space:normal;text-align:center;resize:none;padding:5px"}),Ee=(0,m.Z)("div",{target:"er682az4",label:"ImageAddBox"})({name:"kh4re2",styles:"width:100%;height:100%;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:500;overflow:hidden;text-align:center;word-break:keep-all;&>img{width:100%;height:100%;}"}),ke=(0,m.Z)("div",{target:"er682az3",label:"NoteAddBox"})("width:100%;heigth:100%;display:flex;align-items:center;justify-content:center;flex-direction:column;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"#fff"),";background-size:cover;overflow:hidden;animation:",xe," .3s ease-in-out 1;padding:5px;border-radius:5px;color:",(e=>e.src?"#fff":"000"),'!important;&>div{background:transparent;font-weight:500;}textarea{font-size:12px;}input[type="text"],textarea{color:',(e=>e.src?"#fff":"#000"),"!important;text-shadow:",(e=>e.src?"0 3px 10px #000":"none"),";}@media screen and (max-width: 800px){textarea{font-size:10px;}input{font-size:142x;}}@media screen and (max-width: 500px){textarea{font-size:8px;}input{font-size:10px;}}"),ze=(0,m.Z)("div",{target:"er682az2",label:"InputBox"})("width:100%;height:",(e=>e.size),";overflow:hidden;&>textarea{background:none;}"),Ce=(0,m.Z)("input",{target:"er682az1",label:"InputArea"})({name:"16gi3ra",styles:"width:100%;height:100%;padding:5px;font-weight:600;background:inherit!important;color:inherit!important"}),Ze=(0,m.Z)("div",{target:"er682az0",label:"WarnBox"})({name:"1ubbc98",styles:"width:100%;height:100%;background:rgba(0, 0, 0, .8);color:red;font-size:12px;display:flex;align-items:center;justify-content:center"}),je=({toast:e,x:t,y:a,width:r,height:o,offset:l,initStates:s,board:c})=>{const g=(0,n.useRef)(),[h,m]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),p=(0,n.useCallback)((()=>{g.current.click()}),[g.current]),u=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await m({...h,loading:!0}),await d().post("/api/uploadImage",t).then((e=>{m({...h,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{m({...h,loading:!1,message:e.response.data})}))}),[]),x=(0,n.useCallback)((async()=>{m({...h,loading:!0}),await d().post(`/api/board/${c}/write/image`,{url:h.imageURL,x:l.x,y:l.y,width:l.width,height:l.height}).then((t=>{if(202===t.status)return m({...h,loading:!1,message:t.data.reason}),setTimeout((()=>{m({...h,message:""})}),2e3);m({...h,loading:!1,success:!0}),e.dark(`남은 칸은 ${t.data}칸 입니다.`),s()})).catch((e=>{401===e.response.status&&(alert("로그인을 해주세요."),i.l_),m({...h,loading:!1,message:e.response.data.reason})}))}),[h]);return n.createElement(fe,{y:a,x:t,width:r,height:o},""===h.message?n.createElement(we,null,""===h.imageURL?n.createElement(Ee,null,"오른쪽 버튼을 클릭해서 사진을 업로드해주세요."):n.createElement("img",{src:h.imageURL}),n.createElement(be,{size:r/l.width,onClick:x,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(ye,{onClick:p,size:r/l.width,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:g,onChange:u}))):n.createElement(Ze,null,h.message))},Se=({toast:e,x:t,y:a,width:i,height:r,offset:o,initStates:l,board:s})=>{const[c,g]=(0,n.useState)(""),[h,m]=(0,n.useState)({loading:!1,success:!1,warning:""}),p=(0,n.useRef)(),[u,x]=(0,n.useState)("auto"),f=(0,n.useCallback)((e=>{x(p.current.scrollHeight+"px"),g(e.target.value)}),[p]),w=(0,n.useCallback)((async t=>{t.preventDefault(),m({...h,loading:!0}),await d().post(`/api/board/${s}/write/text`,{content:c,x:o.x,y:o.y,width:o.width,height:o.height}).then((t=>{if(202===t.status)return m({...h,warning:t.data.reason}),setTimeout((()=>{m({...h,warning:""})}),2e3);m({...h,loading:!1,success:!0}),e.dark(`남은 칸은 ${t.data}칸 입니다.`),l()})).catch((e=>{m({...h,loading:!1,warning:e.response.data.reason}),setTimeout((()=>{m({...h,warning:""})}),2e3)}))}),[c,h]);return n.createElement(fe,{y:a,x:t,width:i,height:r},""===h.warning?n.createElement(we,null,h.loading?n.createElement("div",null,"loading..."):n.createElement(ve,{style:{height:u},value:c,onChange:f,autoFocus:!0,ref:p}),n.createElement(be,{size:i/o.width,onClick:w,right:o.x+o.width<32?-5:i},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"})))):n.createElement(Ze,null,h.warning))},Me=({toast:e,x:t,y:a,width:i,height:r,offset:o,initStates:l,board:s})=>{const[c,g]=B(""),[h,m]=B(""),p=(0,n.useRef)(),[u,x]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),f=(0,n.useCallback)((()=>{p.current.click()}),[p.current]),w=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await x({...u,loading:!0}),await d().post("/api/uploadImage",t).then((e=>{x({...u,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{x({...u,loading:!1,message:e.response.data})}))}),[u]),b=(0,n.useCallback)((async()=>{x({...u,loading:!0}),await d().post(`/api/board/${s}/write/note`,{background_img:u.imageURL,head:c,paragraph:h,x:o.x,y:o.y,width:o.width,height:o.height}).then((t=>{if(202===t.status)return x({...u,loading:!1,message:t.data.reason}),setTimeout((()=>{x({...u,message:""})}),2e3);x({...u,loading:!1,success:!0}),e.dark(`남은 칸은 ${t.data}칸 입니다.`),l()})).catch((e=>{x({...u,loading:!1,message:e.response.data.reason})}))}),[u,h,c]);return n.createElement(fe,{y:a,x:t,width:i,height:r},""===u.message?n.createElement(we,{className:"note"},n.createElement(ke,{src:""!==u.imageURL?u.imageURL:null},n.createElement(ze,{size:r/o.height},n.createElement(Ce,{key:"headerInput",type:"text",placeholder:"타이틀을 입력해주세요.",value:c,onChange:g})),n.createElement(ze,{size:r-r/o.height-20},n.createElement(ve,{value:h,onChange:m,autoFocus:!0,placeholder:"본문 내용을 입력해주세요.",style:{textAlign:"left"}}))),n.createElement(be,{size:i/o.width,onClick:b,right:o.x+o.width<32?-5:i},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(ye,{onClick:f,size:i/o.width,right:o.x+o.width<32?-5:i},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:p,onChange:w}))):n.createElement(Ze,null,u.message))};E().extend(z());const Le=({imageInput:e,onChangeImg:t,onClick:a})=>n.createElement(ue,{onClick:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("p",null,"이미지 변경하기"),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:e,onChange:t})),De=({board:e,boardData:t,dataReval:a,userData:i})=>{const r=n.useRef(),[o,l]=(0,n.useState)({x:0,y:0,dragged:!1}),[s,c]=(0,n.useState)({x:0,y:0}),[g,h]=(0,n.useState)({x:0,y:0}),[m,p]=(0,n.useState)({x:0,y:0,flg:!1,disp:!1}),[u,x]=(0,n.useState)({x:0,y:0,width:0,height:0}),[f,w]=(0,n.useState)(0),[b,y]=(0,n.useState)({category:0,id:0,flg:!1,loadComment:!1,content:null}),[v,k]=(0,n.useState)(""),[z,C]=(0,n.useState)(window.innerWidth),[Z,j]=(0,n.useState)(z/32),[S,M]=(0,n.useState)({width:Z,height:Z}),[L,D,I]=B(""),[A,H]=(0,n.useState)(20*Z),[T,F]=(0,n.useState)(),[N,_]=(0,n.useState)(!1),[ue,xe]=(0,n.useState)(""),[fe,we,be]=B(""),[ye,ve]=(0,n.useState)(""),[Ee,ke]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),[ze,Ce]=(0,n.useState)(!1),[Ze,De]=(0,n.useState)(!1),Be=(0,n.useRef)(),Ie=(0,n.useRef)(),Re=new Date,Ue={transform:b.flg?"translateX(0%)":"translateX(-100%)"};(0,n.useEffect)((()=>{h({x:g.x/Z*window.innerWidth/32,y:g.y/Z*window.innerWidth/32}),M({width:S.width/Z*window.innerWidth/32,height:S.height/Z*window.innerWidth/32}),C(window.innerWidth),j(window.innerWidth/32),H(window.innerWidth/32*20)}),[window.innerWidth,Z]);const Ae=(0,n.useCallback)((e=>{const t=S.width/Z,a=S.height/Z;a*t<4?k("최소 4칸의 영역을 선택해야합니다."):3===e&&a*t<6?k("이미지는 최소 6칸의 영역을 선택해야합니다."):2===e&&a*t<20?k("노트는 최소 20칸이상의 영역을 선택해야합니다."):2===e&&(a<3||t<4)?k("노트는 4x3이상의 영역을 선택해야합니다."):(x({x:g.x/Z,y:g.y/Z,width:S.width/Z,height:S.height/Z}),w(e))}),[S,Z]),$e=(0,n.useCallback)((()=>{if(o&&!ze){let e=Z*Math.floor(Math.abs(s.x-s.x%Z-o.x)/Z+1),t=Z*Math.floor(Math.abs(s.y-s.y%Z-o.y)/Z+1);const a=s.x-o.x,n=s.y-o.y;a<0&&n>0?h({...g,x:s.x-s.x%Z}):a>0&&n<0?h({...g,y:s.y-s.y%Z}):a<0&&n<0&&h({x:s.x-s.x%Z,y:s.y-s.y%Z}),a>Z&&(e+=Z),n>Z&&(t+=Z),M({width:e,height:t})}}),[s,o,g,Z]),He=e=>{h({x:e.target.x()-e.target.x()%Z,y:e.target.y()-e.target.y()%Z})},Te=({x:e=0,y:t=0})=>{const a=ze?"rgba(32, 178, 170, .5)":"rgba(255, 255, 255, 0.1)";if((3===b?.category||2===b?.category)&&ze){const i=3===b.category?b.content?.url:b.content?.background_img,[r]=$()(i||"");return n.createElement(U.Image,{opacity:.4,width:S.width,height:S.height,fill:a,x:e,y:t,cornerRadius:5,image:r,draggable:!0,onDragEnd:ze?He:void 0})}return n.createElement(U.Rect,{width:S.width,height:S.height,fill:a,x:e,y:t,cornerRadius:5,draggable:!0,onDragEnd:ze?He:void 0})},Fe=(0,n.useCallback)(((e,t,a)=>e>t&&e<a),[]),Ne=(0,n.useCallback)((()=>!(t?.TextContents&&t.TextContents.filter((e=>!(1===b.category&&e.id===b.id))).find((e=>(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))||(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(g.y,e.y*Z,(e.y+e.height)*Z)||Fe(g.y+S.height,e.y*Z,(e.y+e.height)*Z))||(Fe(g.x,e.x*Z,(e.x+e.width)*Z)||Fe(g.x+S.width,e.x*Z,(e.x+e.width)*Z))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))))||t?.Images&&t.Images.filter((e=>!(3===b.category&&e.id===b.id))).find((e=>(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))||(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(g.y,e.y*Z,(e.y+e.height)*Z)||Fe(g.y+S.height,e.y*Z,(e.y+e.height)*Z))||(Fe(g.x,e.x*Z,(e.x+e.width)*Z)||Fe(g.x+S.width,e.x*Z,(e.x+e.width)*Z))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))))||t?.Notes&&t.Notes.filter((e=>!(2===b.category&&e.id===b.id))).find((e=>(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))||(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(g.y,e.y*Z,(e.y+e.height)*Z)||Fe(g.y+S.height,e.y*Z,(e.y+e.height)*Z))||(Fe(g.x,e.x*Z,(e.x+e.width)*Z)||Fe(g.x+S.width,e.x*Z,(e.x+e.width)*Z))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height)))))),[t,g,Z,S,b]),_e=(e,t,a,n,i,r,o,l)=>!(i>=e&&r>=t&&i+o<=e+a&&r+l<=t+n),Ye=(0,n.useCallback)((()=>!(!Ne()||t?.TextContents?.filter((e=>!(1===b.category&&e.id===b.id))).find((e=>!_e(e.x*Z,e.y*Z,e.width*Z,e.height*Z,g.x,g.y,S.width,S.height)))||t?.Images?.filter((e=>!(3===b.category&&e.id===b.id))).find((e=>!_e(e.x*Z,e.y*Z,e.width*Z,e.height*Z,g.x,g.y,S.width,S.height)))||t?.Notes?.filter((e=>!(2===b.category&&e.id===b.id))).find((e=>!_e(e.x*Z,e.y*Z,e.width*Z,e.height*Z,g.x,g.y,S.width,S.height))))),[t,g,S,Z,b]),Xe=(0,n.useCallback)((e=>{Ne()?Ae(e):k("겹치는 영역이 존재합니다.")}),[S,g,Z,S]),We=(0,n.useCallback)((()=>{M({width:Z,height:Z}),l({...o,dragged:!1}),p({...m,flg:!1}),w(0),k("")}),[Z,o,m]),Oe=(0,n.useCallback)(((e,t,a)=>{y({...b,flg:!0,category:e,id:t,content:a}),F(a.Comments)}),[b]),Pe=(0,n.useCallback)((t=>{t.preventDefault(),""!==L&&d().post(`/api/board/${e}/comment/${b.category}/${b.content?.id}`,{content:L}).then((()=>{I(""),a()})).catch((e=>{console.error(e)}))}),[L,b]),Ve=(0,n.useCallback)((t=>{if(t.preventDefault(),!confirm("정말 삭제하시겠습니까?"))return;let n="";if(1===b.category)n="text";else if(2===b.category)n="note";else{if(3!==b.category)return;n="image"}d().delete(`api/board/${e}/delete/${n}/${b.content?.id}`).then((()=>{a(),y({category:0,id:0,flg:!1,loadComment:!1,content:null}),R.Am.dark("게시물이 삭제되었습니다.")})).catch((e=>{console.error(e)}))}),[b]),qe=(0,n.useCallback)((e=>{_(!N),N?(xe(""),be(""),ve("")):1===e?(xe("string"==typeof b.content?.content?b.content?.content:""),N&&Ge(Be.current.scrollHeight+"px")):2===e?(be("string"==typeof b.content?.head?b.content?.head:""),xe("string"==typeof b.content?.paragraph?b.content?.paragraph:""),ke({...Ee,imageURL:"string"==typeof b.content?.background_img?b.content?.background_img:""}),N&&Ge(Be.current.scrollHeight+"px")):3===e&&ke({...Ee,imageURL:"string"==typeof b.content?.url?b.content?.url:""})}),[N,b,Be]),[Ke,Ge]=(0,n.useState)("auto"),Je=(0,n.useCallback)((e=>{Ge(Be.current.scrollHeight+"px"),xe(e.target.value)}),[Be]),Qe=(0,n.useCallback)((()=>{y({category:0,id:0,flg:!1,loadComment:!1,content:null}),be(""),xe(""),ke({loading:!1,success:!1,message:"",imageURL:""}),_(!1)}),[]),et=(0,n.useCallback)((()=>{be(""),xe(""),ke({loading:!1,success:!1,message:"",imageURL:""}),_(!1)}),[]),tt=(0,n.useCallback)((()=>{Ie.current.click()}),[Ie.current]),at=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await ke({...Ee,loading:!0}),await d().post("/api/uploadImage",t,{headers:{"Access-Control-Allow-Origin":"*"}}).then((e=>{ke({...Ee,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{ke({...Ee,loading:!1,message:e.response.data})}))}),[]),nt=(0,n.useCallback)((async()=>{let t="",n={x:b.content?.x,y:b.content?.y,width:b.content?.width,height:b.content?.height,content:"",head:"",paragraph:"",background_img:"",url:""};if(1===b.category)t=`/api/board/${e}/text/${b.id}`,n={...n,content:ue};else if(2===b.category)t=`/api/board/${e}/note/${b.id}`,n={...n,background_img:Ee.imageURL,head:fe,paragraph:ue};else{if(3!==b.category)return await k("잘못된 접근입니다."),void await setTimeout((()=>{k("")}),2e3);if(""===Ee.imageURL)return await k("이미지를 다시 업로드해주세요"),void await setTimeout((()=>{k("")}),2e3);t=`/api/board/${e}/image/${b.id}`,n={...n,url:Ee.imageURL}}await d().patch(t,n).then((()=>{y({category:0,id:0,flg:!1,loadComment:!1,content:null}),R.Am.dark("게시물이 수정되었습니다."),a()})).catch((e=>{k(e.response.data.reason),setTimeout((()=>{k("")}),2e3)})),et()}),[ue,fe,b,Ee]),it=(0,n.useCallback)((()=>{b.content&&(p({...m,flg:!1,disp:!1}),y({...b,flg:!1}),Ce(!0),h({x:b.content.x*Z,y:b.content.y*Z}),M({width:b.content.width*Z,height:b.content.height*Z}))}),[b,Z]);return(0,n.useEffect)((()=>{0!=f||ze||(o.dragged?$e():h({x:s.x-s.x%Z,y:s.y-s.y%Z}))}),[s,o,f,Z,ze]),(0,n.useEffect)((()=>{0!==f&&p({...m,flg:!1})}),[f]),(0,n.useEffect)((()=>{let e;1===b.category?e=t?.TextContents.find((e=>e.id===b.id))?.Comments:2===b.category?e=t?.Notes?.find((e=>e.id===b.id))?.Comments:3===b.category&&(e=t?.Images?.find((e=>e.id===b.id))?.Comments),F(e)}),[t,b]),n.createElement(Y,null,""!==v&&n.createElement(X,null,v),b.flg&&n.createElement(W,{onClick:Qe}),n.createElement(O,{style:Ue},n.createElement(P,null,0!==b.id&&n.createElement(n.Fragment,null,n.createElement(V,null,n.createElement(K,null,n.createElement("img",{src:b.content?.User.profile_img}),n.createElement("p",null,b.content?.User.username),(i.is_admin||b.content&&b.content.UserId===i.id)&&n.createElement(G,null,n.createElement("button",{onClick:()=>qe(b.category)},n.createElement("img",{src:"/public/edit.svg"})),n.createElement("button",{onClick:Ve},n.createElement("img",{src:"/public/delete.svg"})),n.createElement("button",{onClick:it},n.createElement("img",{src:"/public/resize.svg"})))),n.createElement(J,null,n.createElement("div",null,"작성일 : ",n.createElement("p",null,E()(b.content?.createdAt).format("YYYY년 MM월 DD일"))),n.createElement("div",null,"만료일 : ",n.createElement("p",null,E()(b.content?.expiry_date).format("YYYY년 MM월 DD일")))),"Content :",n.createElement(Q,null,1===b.category&&(N?n.createElement(n.Fragment,null,n.createElement(ee,null,n.createElement("textarea",{value:ue,onChange:Je,ref:Be,style:{height:Ke}}),n.createElement(te,null,n.createElement("div",{className:"button edit",onClick:nt},"수정"),n.createElement("div",{className:"button",onClick:et},"취소")))):n.createElement("pre",null,b.content?.content)),2===b.category&&(N?n.createElement(n.Fragment,null,n.createElement(ee,null,n.createElement(ae,null,""!==Ee.imageURL?n.createElement("img",{src:Ee.imageURL}):n.createElement("div",{className:"temp"}),n.createElement(Le,{onClick:tt,imageInput:Ie,onChangeImg:at})),n.createElement("input",{value:fe,onChange:we}),n.createElement("textarea",{value:ue,onChange:Je,ref:Be,style:{height:Ke}}),n.createElement(te,null,n.createElement("div",{className:"button edit",onClick:nt},"수정"),n.createElement("div",{className:"button",onClick:et},"취소")))):n.createElement(n.Fragment,null,b.content?.background_img&&n.createElement("img",{src:b.content?.background_img}),n.createElement("h2",null,b.content?.head),n.createElement("pre",null,b.content?.paragraph))),3===b.category&&(N?n.createElement(n.Fragment,null,n.createElement(ee,null,n.createElement(ae,null,n.createElement("img",{src:Ee.imageURL}),n.createElement(Le,{onClick:tt,imageInput:Ie,onChangeImg:at})),n.createElement(te,null,n.createElement("div",{className:"button edit",onClick:nt},"수정"),n.createElement("div",{className:"button",onClick:et},"취소")))):n.createElement("img",{src:b.content?.url})))),n.createElement("div",{style:{borderBottom:"1px solid #444",padding:".5rem 0"}},"Comment:"),n.createElement(ne,null,T?.map(((e,t)=>n.createElement(ie,{key:t},n.createElement("img",{src:e.User.profile_img}),n.createElement("div",{className:"content"},n.createElement("p",null,e.User.username),n.createElement("div",null,n.createElement("div",null,e.content),n.createElement("p",null,E()(e.createdAt).diff(Re,"day")>-1?E()(e.createdAt).format("LT"):E()(e.createdAt).format("YYYY년 MM월 DD일")))))))))),n.createElement(q,{onClick:Pe},n.createElement("input",{type:"text",value:L,onChange:D,onKeyPress:e=>{"Enter"===e.key&&Pe(e)}}),n.createElement("div",null,n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))))),n.createElement(re,{clicked:m.flg,x:m.x,y:m.y,disp:m.disp},n.createElement(oe,{onClick:()=>Xe(1)},"Text"),n.createElement(oe,{onClick:()=>Xe(2)},"Note"),n.createElement(oe,{onClick:()=>Xe(3)},"Image")),1===f&&n.createElement(Se,{toast:R.Am,width:S.width,height:S.height,x:g.x,y:g.y,offset:u,initStates:We,board:e}),2===f&&n.createElement(Me,{toast:R.Am,width:S.width,height:S.height,x:g.x,y:g.y,offset:u,initStates:We,board:e}),3===f&&n.createElement(je,{toast:R.Am,width:S.width,height:S.height,x:g.x,y:g.y,offset:u,initStates:We,board:e}),t?.TextContents&&t?.TextContents.map(((e,t)=>n.createElement(le,{key:t,width:Z*e.width,height:Z*e.height,x:Z*e.x,y:Z*e.y},n.createElement(de,{onClick:()=>Oe(1,e.id,e)},e.content,n.createElement(se,{className:"alt"},e.User.username))))),t?.Images&&t?.Images.map(((e,t)=>n.createElement(le,{key:t,width:Z*e.width,height:Z*e.height,x:Z*e.x,y:Z*e.y},n.createElement(ce,{onClick:()=>Oe(3,e.id,e)},n.createElement(se,{className:"alt"},e.User.username),n.createElement("img",{src:e.url}))))),t?.Notes&&t?.Notes.map(((e,t)=>n.createElement(le,{key:t,width:Z*e.width,height:Z*e.height,x:Z*e.x,y:Z*e.y},n.createElement(ge,{onClick:()=>Oe(2,e.id,e),src:e.background_img?e.background_img:""},n.createElement(se,{className:"alt"},e.User.username),n.createElement("h3",{className:"head"},e.head),n.createElement("pre",{className:"para",style:{height:Z*e.height-10}},n.createElement("p",null,e.paragraph)))))),n.createElement(U.Stage,{style:{height:A,zIndex:ze?20:1,background:ze?"rgba(0, 0, 0, .2)":""},width:z,height:A,onMouseMove:ze?void 0:e=>{if(!m.flg){r.current.getAbsoluteTransform().copy().invert();const t=e.target.getStage()?.getPointerPosition();c({x:t?.x,y:t?.y})}},onMouseDown:ze?void 0:()=>{0!==f||ze||l({x:s.x,y:s.y,dragged:!0})},onMouseUp:ze?void 0:()=>{if(!ze)if(m.flg||0!=f)We();else{const e=s.x>window.innerWidth-140?s.x-140:s.x,t=s.y>window.innerHeight-140?s.y-140:s.y;p({x:e,y:t,flg:!0,disp:!0})}}},n.createElement(U.Layer,{ref:r},n.createElement(U.Group,null,n.createElement(Te,{x:g.x,y:g.y})))),ze&&n.createElement("div",{style:{position:"absolute",top:"10px",left:"10px"}},n.createElement(he,{onClick:()=>{Ce(!1),We()}},n.createElement("span",null,"돌아가기"),n.createElement("img",{src:"/public/close.svg"})),n.createElement(he,{onClick:async()=>{if(!Ye())return k("이동할 수 없는 위치입니다.");let t="";const n=S.width/Z,i=S.height/Z;if(i*n<4)return k("최소 4칸의 영역을 선택해야합니다.");if(3===b.category&&i*n<6)return k("이미지는 최소 6칸의 영역을 선택해야합니다.");if(2===b.category&&i*n<20)return k("노트는 최소 20칸이상의 영역을 선택해야합니다.");if(2===b.category&&(i<3||n<4))return k("노트는 4x3이상의 영역을 선택해야합니다.");let r={x:g.x/Z,y:g.y/Z,width:S.width/Z,height:S.height/Z,content:b.content?.content,head:b.content?.head,paragraph:b.content?.paragraph,background_img:b.content?.background_img,url:b.content?.url};if(1===b.category)t=`/api/board/${e}/text/${b.id}`;else if(2===b.category)t=`/api/board/${e}/note/${b.id}`;else{if(3!==b.category)return await k("잘못된 접근입니다."),void await setTimeout((()=>{k("")}),2e3);t=`/api/board/${e}/image/${b.id}`}await d().patch(t,r).then((e=>{a(),Qe(),k(""),Ce(!1),!1===e.data?R.Am.dark("게시물이 수정되었습니다."):R.Am.dark(`남은 칸은 ${e.data}칸 입니다.`),We()})).catch((e=>{k(e.response.data.reason),setTimeout((()=>{k("")}),2e3)})),d().patch}},n.createElement("span",null,"수정하기"),n.createElement("img",{src:"/public/check.svg"})),Ze?n.createElement(he,{className:"resize",style:{cursor:"none"}},n.createElement(me,null,n.createElement("span",null,"WIDTH -"),n.createElement("button",{className:"decrease",onClick:()=>M({...S,width:S.width-Z})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,S.width/Z),n.createElement("button",{onClick:()=>M({...S,width:S.width+Z})},n.createElement("img",{src:"/public/arrow.svg"}))),n.createElement(me,null,n.createElement("span",null,"HEIGHT -"),n.createElement("button",{className:"decrease",onClick:()=>M({...S,height:S.height-Z})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,S.height/Z),n.createElement("button",{onClick:()=>M({...S,height:S.height+Z})},n.createElement("img",{src:"/public/arrow.svg"})))):n.createElement(he,{onClick:()=>De(!0)},n.createElement("span",null,"크기 변경하기"),n.createElement("img",{src:"/public/resize.svg"}))),n.createElement(pe,null,"designed by @han"),n.createElement(R.Ix,{position:"bottom-left",autoClose:5e3,hideProgressBar:!1,newestOnTop:!0,closeOnClick:!1,rtl:!1,pauseOnFocusLoss:!0,draggable:!0,pauseOnHover:!0}))},Be=()=>{const e=(0,i.UO)(),{board:t}=e,[a,s]=h(t),{data:c,revalidate:g,error:m}=(0,r.ZP)("/api/auth",o.Z),{data:p,revalidate:u}=(0,r.ZP)(c?"/api/board/"+t:null,o.Z),[v,E]=(0,n.useState)(!1),[k,z]=(0,n.useState)(),C=(0,n.useCallback)((()=>{d().post("/api/logout").then((()=>{g(),window.location.reload(!1)})).catch((e=>{console.error(e)}))}),[]);return(0,n.useEffect)((()=>()=>{console.info("disconnect socket",42),s()}),[s]),(0,n.useEffect)((()=>{p&&c&&(console.info("로그인"),a?.emit("login",{id:c?.id,username:c?.username,boards:42}))}),[a,c,p]),(0,n.useEffect)((()=>(a?.on("onlineList",(async e=>{const t=[];await e.forEach((e=>{t.find((t=>t.id===e.id))||t.push(e)})),z(t)})),a?.on("refresh",(()=>{console.log("refresh"),u()})),()=>{a?.off("refresh")})),[a]),c?p?n.createElement(n.Fragment,null,v&&n.createElement(y,{style:{zIndex:8},onClick:()=>E(!1)}),n.createElement(x,{style:{transform:`translateX(${v?"0":"100%"})`}},n.createElement(f,null,n.createElement(b,null,n.createElement("p",null,"User List"),n.createElement("ul",null,k?.map(((e,t)=>n.createElement("li",{key:t},e.id===c.id?e.username+" (me)":e.username))))),t&&c&&p&&n.createElement(I,{userData:c,board:t}),n.createElement("div",{className:"up",onClick:()=>E(!v)},v?n.createElement("img",{src:"/public/arrow.svg"}):n.createElement("img",{src:"/public/person.svg"})),n.createElement(w,{onClick:C},"로그아웃"))),n.createElement(De,{boardData:p,dataReval:u,userData:c,board:t||""})):n.createElement(l.Z,null):n.createElement(i.l_,{to:"/auth"})},Ie=n.memo(Be)},3564:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(3653),i=a.n(n);const r=e=>i().get(e,{withCredentials:!0}).then((e=>e.data))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,