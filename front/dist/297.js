(self.webpackChunk_42board_front=self.webpackChunk_42board_front||[]).push([[297],{2033:(e,t,a)=>{"use strict";a.d(t,{Z:()=>d});var n=a(7294),i=a(5366);const r=a(9911).F4`
    from {
        transform: rotate(0);
    }
    to {
        transform: rotate(359deg);
    }
`,o=(0,i.Z)("div",{target:"ekojj7n2",label:"LoadingCircleContainer"})({name:"8lbyj9",styles:"width:300px;height:300px;display:flex;justify-content:center;align-items:center;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)"}),l=(0,i.Z)("div",{target:"ekojj7n1",label:"LoadingCircleBox"})("width:150px;height:150px;padding:3px;display:flex;justify-content:center;align-items:center;border-radius:50%;background:rgb(63, 249, 200);background:linear-gradient(0deg, rgba(63, 249, 200, 0.1) 33%, rgba(63, 249, 220, 1) 100%);animation:",r," .8s linear 0s infinite;"),s=(0,i.Z)("div",{target:"ekojj7n0",label:"LoadingCircleCore"})({name:"1sudnkc",styles:"width:100%;height:100%;background:#001c29;border-radius:50%"}),d=()=>n.createElement(o,null,n.createElement(l,null,n.createElement(s,null)))},297:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>De});var n=a(7294),i=a(5977),r=a(8100),o=a(3564),l=a(2033),s=a(3653),d=a.n(s),c=a(5615);const g={},h=e=>{const t=(0,n.useCallback)((()=>{e&&g[e]&&(g[e].disconnect(),delete g[e])}),[e]);return e?(g[e]||(g[e]=(0,c.Z)("https://api.42board.com/board-"+e,{transports:["websocket"]}),console.info("create socket",e,g[e].id)),[g[e],t]):[void 0,t]};var m=a(5366),p=a(9911);const u=p.F4`
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
`,x=(0,m.Z)("div",{target:"e1jwxo3k5",label:"UserMenu"})({name:"hownqd",styles:"position:fixed;height:100vh;width:300px;right:0;background:#000;transition:.3s;z-index:9"}),f=(0,m.Z)("div",{target:"e1jwxo3k4",label:"MenuContainer"})({name:"u91ux",styles:"position:relative;height:100%;div{color:#fff;}&>p{padding:3px;background:#444;font-size:10px;text-align:center;color:#fff;width:80%;margin:0 auto;border-radius:10px;}.up{position:absolute;cursor:pointer;top:1rem;padding:.5rem;transform:translateX(-150%);width:30px;height:30px;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px;}"}),w=((0,m.Z)("div",{target:"e1jwxo3k3",label:"OpenMenu"})({name:"164x91j",styles:"position:fixed;top:1rem;right:1rem;width:30px;height:30px;z-index:9;cursor:pointer;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px"}),(0,m.Z)("div",{target:"e1jwxo3k2",label:"LogOutButton"})({name:"iw7g12",styles:"width:100%;height:40px;cursor:pointer;display:flex;align-items:center;justify-content:center;&:hover{background:#111;}"})),b=(0,m.Z)("div",{target:"e1jwxo3k1",label:"UserList"})({name:"1y18uyg",styles:'width:100%;height:20%;padding:1rem;&>ul{list-style-type:none;li{position:relative;padding-left:1rem;&:before{position:absolute;content:"";top:50%;left:0;width:5px;height:5px;border-radius:5px;background:#66DD66;transform:translateY(-50%);}}}'}),y=(0,m.Z)("div",{target:"e1jwxo3k0",label:"DetailBackground"})("width:100%;height:100vh;z-index:12;position:fixed;top:0;left:0;background:rgba(0, 0, 0, .4);animation:",u," .5s ease-in-out 1;");var v=a(7484),E=a.n(v),k=a(6176),z=a.n(k),C=a(1298);const Z=p.F4`
    from {
        opacity: 0;
        transform: translateX(-10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`,j=p.F4`
    from {
        opacity: 0;
        transform: translateX(10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`,S=(0,m.Z)("div",{target:"enrxnwv3",label:"ChatRoom"})({name:"2fwxmc",styles:"height:calc(80% - 98px)"}),M=(0,m.Z)("form",{target:"enrxnwv2",label:"ChatForm"})({name:"km7oic",styles:"width:100%;display:flex;align-items:center;padding:3px 10px;&>input{width:100%;padding:.5rem;font-size:14px;border-radius:5px;}"}),L=(0,m.Z)("li",{target:"enrxnwv1",label:"Chat"})("display:flex;flex-direction:column;align-items:flex-start;margin-bottom:.5rem;margin-left:1rem;animation:",Z,' .3s ease-in-out 1;&>div{display:flex;align-items:flex-end;div{background:#fafafa;padding:.5rem;border-radius:5px;color:#111;position:relative;&::before{content:"";transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{font-size:8px;color:#777;margin-left:5px;word-break:keep-all;}}&.myChat{align-items:flex-end;margin-right:1rem;margin-left:0;animation:',j,' .3s ease-in-out 1;&>div{flex-direction:row-reverse;div{background:#c7efdf;&::before{display:none;}&::after{content:"";transform:skewX(-30deg);width:15px;right:0;height:15px;background:#c7efdf;position:absolute;top:0;z-index:-1;}}&>p{margin-right:5px;}}}'),B=(0,m.Z)("div",{target:"enrxnwv0",label:"StickyHeader"})({name:"1jxjh8z",styles:"display:flex;justify-content:center;flex:1;width:100%;position:sticky;top:14px;font-weight:bold;font-size:8px;height:20px;line-height:27px;padding:0 16px;--saf-0:rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);box-shadow:0 0 0 1px var(--saf-0),0 1px 3px 0 rgba(0, 0, 0, 0.08);border-radius:24px"}),I=e=>{const[t,a]=(0,n.useState)(e);return[t,(0,n.useCallback)((e=>{a(e.target.value)}),[]),a]};E().extend(z());const D=({userData:e,board:t})=>{const[a,i]=h(t),{data:l,mutate:s,setSize:c}=(0,r.g_)((a=>e?`/api/board/${t}/chats?perPage=20&page=${a+1}`:null),o.Z),[g,m,p]=I(""),[u,x]=n.useState(!0),f=new Date,w=(0,n.useRef)(null),b=function(e){const t={};return e.forEach((e=>{const a=E()(e.createdAt).format("YYYY-MM-DD");Array.isArray(t[a])?t[a].push(e):t[a]=[e]})),t}(l?[].concat(...l).reverse():[]),y=0===l?.[0]?.length,v=y||l&&l[0]?.length<20,k=(0,n.useCallback)((a=>{if(a.preventDefault(),g?.trim()&&l&&e){const a=g;s((t=>(t[0].unshift({id:(l[0][0]?.id||0)+1,userId:e.id,username:e.username,content:a,createdAt:new Date}),t)),!1).then((()=>{p(""),w.current&&w.current.scrollToBottom()})),d().post(`/api/board/${t}/chat`,{content:a,userId:e.id,username:e.username}).catch(console.error)}}),[e,g]),z=(0,n.useCallback)((e=>{"Enter"===e.key&&(e.shiftKey||(e.preventDefault(),k(e)))}),[g]),Z=t=>{e&&t.userId!==e?.id&&s((e=>(e[0].unshift(t),e)),!1).then((()=>{console.log("get new Message")}))},j=(0,n.useCallback)((e=>{0!==e.scrollTop||v||y||c((e=>e+1)).then((()=>{w.current?.scrollTop(w.current?.getScrollHeight()-e.scrollHeight)}))}),[w,v,y]);return(0,n.useEffect)((()=>(a?.on("newChat",Z),()=>{a?.off("newChat",Z)})),[a,e]),(0,n.useEffect)((()=>{1===l?.length&&(w.current?.scrollToBottom(),x(!1))}),[l,v,y]),n.createElement(n.Fragment,null,n.createElement("p",null,"현재 접속한 사람들과 채팅을 할 수 있습니다."),n.createElement(S,null,n.createElement(C.$B,{autoHide:!0,ref:w,onScrollFrame:j,style:{height:"100%",overflow:"auto"}},Object.entries(b).map((([t,a])=>n.createElement("section",{key:t},n.createElement(B,null,t),a.map((t=>n.createElement(L,{key:t.id,className:t.userId===e?.id?"myChat":""},n.createElement("p",null,t.username),n.createElement("div",null,n.createElement("div",null,t.content),n.createElement("p",null,E()(t.createdAt).diff(f,"day")>-1?E()(t.createdAt).format("LT"):E()(t.createdAt).format("YYYY년 MM월 DD일"))))))))))),n.createElement(M,{onSubmit:k},n.createElement("input",{type:"text",value:g,onChange:m,onKeyPress:z,placeholder:"이곳에 채팅을 입력해주세요"})))};var R=a(1171),U=(a(5202),a(3286)),A=a(4420),$=a.n(A);const H=p.F4`
    from {
        max-width: 0;
        max-height: 0;
    }
    to {
        max-width: 200px;
        max-height: 200px;
    }
`,T=p.F4`
    from {
        max-width: 200px;
        max-height: 200px;
    }
    to {
        max-width: 0px;
        max-height: 0px
    }
`,F=p.F4`
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
`,N=p.F4`
    from {
        opacity: 0;
        transform: translateX(-10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`,_=p.F4`
    0% {
        width: 0%;
        height: 0%;
    }
    50% {
        width: 30%;
        height: 30%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,Y=(0,m.Z)("div",{target:"e7dz7326",label:"KonvaContainer"})({name:"r3bm38",styles:"position:relative;display:flex;flex-direction:column;min-height:100vh;transition:.3s"}),X=(0,m.Z)("div",{target:"e7dz7325",label:"WarnMessage"})({name:"15ept4m",styles:"position:absolute;background:rgba(0, 0, 0, .6);z-index:50;border-radius:5px;color:#ff5555;font-weight:500;font-size:14px;padding:1rem 2rem;top:50%;left:50%;transform:translate(-50%, -50%)"}),W=(0,m.Z)("div",{target:"e7dz7324",label:"DetailBackground"})("width:100%;height:100%;z-index:12;position:absolute;top:0;left:0;background:rgba(0, 0, 0, .4);animation:",F," .5s ease-in-out 1;"),O=(0,m.Z)("div",{target:"e7dz7323",label:"DetailWindow"})({name:"b8x90n",styles:"position:fixed;min-height:100vh;height:100%;width:400px;background:rgba(0, 0, 0, .85);top:0;left:0;z-index:13;transition:.3s;color:#fff"}),P=(0,m.Z)("div",{target:"e7dz7322",label:"DetailBox"})({name:"1b7ro16",styles:"position:relative;width:100%;height:100%;padding:1rem;padding-bottom:4rem;overflow:auto;&>div{margin:1rem 0;}"}),V=(0,m.Z)("div",{target:"e7dz7321",label:"TopFixContent"})({name:"1i7bcd8",styles:"position:relative;width:100%;overflow:hidden"}),q=(0,m.Z)("div",{target:"e7dz7320",label:"BottomFixContent"})({name:"14qk46b",styles:"position:fixed;bottom:0;display:flex;overflow:hidden;height:4rem;background:#000;padding:1rem .5rem;&>input{width:calc(400px - 4rem);padding:5px;border-radius:5px;box-shadow:0 0 4px 1px #ffffff;font-size:14px;margin-right:.5rem;}&>div{width:2rem;background:#radial-gradient(ellipse at bottom, #002534 0%, #090a0f 100%) no-repeat;cursor:pointer;color:#fff;transition:.3s;display:flex;justify-content:center;align-items:center;svg{fill:#fff;}}"}),K=(0,m.Z)("div",{target:"e7dz7319",label:"UserInfo"})({name:"11lxd0m",styles:"width:100%;height:6rem;display:flex;justify-content:flex-start;align-items:center;&>img{width:5rem;height:5rem;border-radius:100%;margin-right:1rem;}&>p{font-size:18px;font-weight:700;width:100%;}"}),G=(0,m.Z)("div",{target:"e7dz7318",label:"UDButtonBox"})({name:"tvvsuy",styles:"display:flex;align-items:center;justify-content:center;&>button{background:transparent!important;cursor:pointer;}"}),J=(0,m.Z)("div",{target:"e7dz7317",label:"MomentBox"})({name:"1ndgiad",styles:"margin-top:.5rem;margin-bottom:1rem;&>div{font-size:12px;display:flex;align-items:center;color:#d5d5d5;p{margin-left:.5rem;font-size:14px;color:#fff;}}"}),Q=(0,m.Z)("div",{target:"e7dz7316",label:"DetailContentBox"})({name:"biqufq",styles:"border-radius:5px;background:#fff;color:#000;margin-top:.5rem;overflow:hidden;&>pre{padding:1rem .5rem;white-space:break-spaces;}&>img{width:100%;}&>h2{margin:0 .5rem;padding:1rem 0 .5rem 0;border-bottom:1px solid #ddd;}&>div{padding:1rem;}"}),ee=(0,m.Z)("div",{target:"e7dz7315",label:"EditArea"})({name:"ph2pyk",styles:"position:relative;padding:0!important;overflow:hidden;&>textarea{width:calc(100% - 50px);resize:none;padding:.5rem;}&>input{width:calc(100% - 50px);font-size:24px;padding:.5rem;font-weight:600;margin-bottom:1rem;}"}),te=(0,m.Z)("div",{target:"e7dz7314",label:"EditButtonBox"})({name:"xp8khj",styles:"position:absolute;right:0;top:0;height:100%;width:50px;display:flex;flex-direction:column;align-items:center;justify-content:center;overflow:hidden;.button{height:50%;background:#777;color:#fff;width:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;&.edit{background:#01babc;color:#000;}}"}),ae=(0,m.Z)("div",{target:"e7dz7313",label:"ImageBox"})({name:"16hwasf",styles:"position:relative;width:calc(100% - 50px);height:fit-content;&>img{width:100%;}.temp{width:100%;height:6rem;background:#eee;}"}),ne=(0,m.Z)("div",{target:"e7dz7312",label:"CommentBox"})(""),ie=(0,m.Z)("div",{target:"e7dz7311",label:"Comment"})("display:flex;min-height:3rem;margin-bottom:.5rem;animation:",N,' .5s ease-in-out 1;&>img{width:3rem;height:3rem;border-radius:100%;margin-right:1rem;}.content{width:100%;&>div{display:flex;align-items:flex-end;width:100%;div{background:#f8f8f8;border-radius:5px;color:#000;padding:.5rem;min-height:100%;width:100%;position:relative;&::before{content:"";transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{color:#777;height:fit-content;font-size:10px;margin-left:.3rem;width:8rem;}}}'),re=(0,m.Z)("div",{target:"e7dz7310",label:"MenuBox"})("display:flex;flex-direction:column;position:absolute;background:rgba(0, 0, 0, .85);display:",(e=>e.disp?"block":"none"),";overflow:hidden;color:#efefef;border-radius:5px;box-shadow:0 0 8px 1px rgb(0, 0, 0);max-width:",(e=>e.clicked?"200px":"0px"),";max-height:",(e=>e.clicked?"200px":"0px"),";top:",(e=>e.y),";left:",(e=>e.x),";animation:",(e=>e.clicked?H:T)," .3s ease-in-out 1;z-index:10;"),oe=(0,m.Z)("div",{target:"e7dz739",label:"MenuAttr"})({name:"1jdih7z",styles:"width:120px;padding:1rem;cursor:pointer;position:relative;&:hover{background:rgba(20, 20, 20, .5);}@media screen and (max-width: 800px){font-size:12px;width:100px;padding:.5rem;}@media screen and (max-width: 500px){font-size:10px;width:80px;padding:.3rem;}"}),le=(0,m.Z)("div",{target:"e7dz738",label:"ComponentBox"})("position:absolute;width:",(e=>e.width),";height:",(e=>e.height),";left:",(e=>e.x),";top:",(e=>e.y),";display:flex;align-items:center;justify-content:center;background:transparent;z-index:4;padding:2px;"),se=(0,m.Z)("div",{target:"e7dz737",label:"AltBox"})({name:"tf3ob0",styles:"position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0, 0, 0, .8);display:none;justify-content:center;align-items:center;color:#fff;&>div{display:flex;}"}),de=(0,m.Z)("pre",{target:"e7dz736",label:"TextComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);background:rgba(0, 0, 0, .75);color:#fff;width:100%;height:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;animation:",_," .3s ease-in-out 1;overflow:hidden;padding:5px;white-space:break-spaces;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}"),ce=(0,m.Z)("div",{target:"e7dz735",label:"ImageComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);display:flex;align-items:center;justify-content:center;cursor:pointer;border-radius:5px;overflow:hidden;width:100%;height:100%;animation:",_," .3s ease-in-out 1;@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}&>img{width:100%;height:100%;}&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}"),ge=(0,m.Z)("div",{target:"e7dz734",label:"NoteComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);color:#fff;display:flex;flex-direction:column;align-items:center;justify-content:center;cursor:pointer;animation:",_," .3s ease-in-out 1;width:100%;height:100%;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"rgba(0, 0, 0, .75)"),";background-size:cover;overflow:hidden;padding:5px;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}.head{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;height:auto;font-size:20px;font-weight:600;padding-bottom:.5rem;white-space:break-spaces;}@media screen and (max-width: 800px){font-size:10px;div.head{font-size:14px;}}@media screen and (max-width: 500px){font-size:8px;div.head{font-size:12px;}}&>pre{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;overflow:hidden;text-overflow:ellipsis;padding:5px;white-space:break-spaces;}"),he=(0,m.Z)("div",{target:"e7dz733",label:"OnModeAlt"})({name:"1ew80oi",styles:"position:relative;background:#000;display:flex;justify-content:center;align-items:center;z-index:21;color:#fff;padding:.5rem;border-radius:3px;line-height:1.2;border:1px solid #999;transition:.3s;cursor:pointer;width:fit-content;margin-bottom:1rem;&.resize{flex-direction:column;}&>img{background:transparent;}&>span{width:0;height:1rem;overflow:hidden;}&:hover{&>img{margin-left:.5rem;}&>span{width:fit-content;}}"}),me=(0,m.Z)("div",{target:"e7dz732",label:"ResizeRemote"})({name:"1ej8yoa",styles:"display:flex;justify-content:center;align-items:center;&>span{width:4rem;}&>button{width:1.5rem;height:1.5rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;background:transparent;cursor:pointer;}button.decrease img{transform:rotate(180deg);}&>div{background:rgb(32, 178, 170);box-shadow:0 0 3px 1px rgb(32, 178, 170);width:1.5rem;height:1.5rem;border-radius:1rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;}&:nth-of-type(2){margin-top:.5rem;}"}),pe=(0,m.Z)("div",{target:"e7dz731",label:"BoardFooter"})({name:"uellsq",styles:"width:100%;align-items:center;justify-content:center;color:rgba(255, 255, 255, .6);font-weight:400;font-size:12px;text-align:center;display:flex;padding:1rem;height:100%;background:rgba(0, 0, 0, .1)"}),ue=(0,m.Z)("div",{target:"e7dz730",label:"EditImageInput"})({name:"9jsky2",styles:"position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:50%;padding:.5rem 1rem;background:rgba(0, 0, 0, 0.4);color:#fff;border-radius:3px;display:flex;align-items:center;justify-content:center;height:2rem;cursor:pointer;&>svg{fill:#fff;height:2rem;}"}),xe=p.F4`
    0% {
        width: 0;
        height: 0;
    }
    30% {
        width: 10%;
        height: 10%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,fe=(0,m.Z)("div",{target:"er682az9",label:"AddContainer"})("position:absolute;z-index:4;display:flex;align-items:center;justify-content:center;top:",(e=>e.y+5),";left:",(e=>e.x+5),";width:",(e=>e.width-10),";height:",(e=>e.height-10),";z-index:6;"),we=(0,m.Z)("div",{target:"er682az8",label:"AddBox"})("position:relative;display:flex;align-items:center;justify-content:center;border-radius:5px;background:#fff;box-shadow:0 0 4px 1px rgba(255, 255, 255, .5);color:#000;width:100%;animation:",xe," .3s ease-in-out 1;height:100%;&.note{padding:0;border-radius:5px;}&>img{width:100%;height:100%;border-radius:5px;}"),be=(0,m.Z)("div",{target:"er682az7",label:"SubmitButton"})("position:absolute;display:flex;align-items:center;justify-content:center;top:0;right:",(e=>e.right),";transform:translateX(100%);width:",(e=>e.size-10),";height:",(e=>e.size-10),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");border-radius:5px;background:#01babc;color:#fff;box-shadow:0 0 4px 1px rgba(1, 186, 188, .7);cursor:pointer;padding:2px;&>svg{height:20px;fill:#fff;}@media screen and (max-width: 800px){border-radius:2px;}"),ye=(0,m.Z)("div",{target:"er682az6",label:"ImageInputButton"})("position:absolute;display:flex;align-items:center;justify-content:center;right:",(e=>e.right),";top:",(e=>e.size),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");width:",(e=>e.size-10),";height:",(e=>e.size-10),";border-radius:5px;cursor:pointer;background:#34568B;box-shadow:0 0 4px 1px rgba(52, 86, 139, .7);padding:2px;&>svg{fill:#fff;height:20px;}@media screen and (max-width: 800px){border-radius:2px;}"),ve=(0,m.Z)("textarea",{target:"er682az5",label:"TextArea"})({name:"kf3szx",styles:"width:100%;max-height:100%;overflow:auto;border:none;border-radius:5px;padding:0;white-space:normal;text-align:center;resize:none;padding:5px"}),Ee=(0,m.Z)("div",{target:"er682az4",label:"ImageAddBox"})({name:"kh4re2",styles:"width:100%;height:100%;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:500;overflow:hidden;text-align:center;word-break:keep-all;&>img{width:100%;height:100%;}"}),ke=(0,m.Z)("div",{target:"er682az3",label:"NoteAddBox"})("width:100%;heigth:100%;display:flex;align-items:center;justify-content:center;flex-direction:column;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"#fff"),";background-size:cover;overflow:hidden;animation:",xe," .3s ease-in-out 1;padding:5px;border-radius:5px;color:",(e=>e.src?"#fff":"000"),'!important;&>div{background:transparent;font-weight:500;}textarea{font-size:12px;}input[type="text"],textarea{color:',(e=>e.src?"#fff":"#000"),"!important;text-shadow:",(e=>e.src?"0 3px 10px #000":"none"),";}@media screen and (max-width: 800px){textarea{font-size:10px;}input{font-size:142x;}}@media screen and (max-width: 500px){textarea{font-size:8px;}input{font-size:10px;}}"),ze=(0,m.Z)("div",{target:"er682az2",label:"InputBox"})("width:100%;height:",(e=>e.size),";overflow:hidden;&>textarea{background:none;}"),Ce=(0,m.Z)("input",{target:"er682az1",label:"InputArea"})({name:"16gi3ra",styles:"width:100%;height:100%;padding:5px;font-weight:600;background:inherit!important;color:inherit!important"}),Ze=(0,m.Z)("div",{target:"er682az0",label:"WarnBox"})({name:"1ubbc98",styles:"width:100%;height:100%;background:rgba(0, 0, 0, .8);color:red;font-size:12px;display:flex;align-items:center;justify-content:center"}),je=({toast:e,x:t,y:a,width:r,height:o,offset:l,initStates:s,board:c})=>{const g=(0,n.useRef)(),[h,m]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),p=(0,n.useCallback)((()=>{g.current.click()}),[g.current]),u=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await m({...h,loading:!0}),await d().post("/api/uploadImage",t).then((e=>{m({...h,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{m({...h,loading:!1,message:e.response.data})}))}),[]),x=(0,n.useCallback)((async()=>{m({...h,loading:!0}),await d().post(`/api/board/${c}/write/image`,{url:h.imageURL,x:l.x,y:l.y,width:l.width,height:l.height}).then((t=>{if(202===t.status)return m({...h,loading:!1,message:t.data.reason}),setTimeout((()=>{m({...h,message:""})}),2e3);m({...h,loading:!1,success:!0}),e.dark(`남은 칸은 ${t.data}칸 입니다.`),s()})).catch((e=>{401===e.response.status&&(alert("로그인을 해주세요."),i.l_),m({...h,loading:!1,message:e.response.data.reason})}))}),[h]);return n.createElement(fe,{y:a,x:t,width:r,height:o},""===h.message?n.createElement(we,null,""===h.imageURL?n.createElement(Ee,null,"오른쪽 버튼을 클릭해서 사진을 업로드해주세요."):n.createElement("img",{src:h.imageURL}),n.createElement(be,{size:r/l.width,onClick:x,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(ye,{onClick:p,size:r/l.width,right:l.x+l.width<32?-5:r},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:g,onChange:u}))):n.createElement(Ze,null,h.message))},Se=({toast:e,x:t,y:a,width:i,height:r,offset:o,initStates:l,board:s})=>{const[c,g]=(0,n.useState)(""),[h,m]=(0,n.useState)({loading:!1,success:!1,warning:""}),p=(0,n.useRef)(),[u,x]=(0,n.useState)("auto"),f=(0,n.useCallback)((e=>{x(p.current.scrollHeight+"px"),g(e.target.value)}),[p]),w=(0,n.useCallback)((async t=>{t.preventDefault(),m({...h,loading:!0}),await d().post(`/api/board/${s}/write/text`,{content:c,x:o.x,y:o.y,width:o.width,height:o.height}).then((t=>{if(202===t.status)return m({...h,warning:t.data.reason}),setTimeout((()=>{m({...h,warning:""})}),2e3);m({...h,loading:!1,success:!0}),e.dark(`남은 칸은 ${t.data}칸 입니다.`),l()})).catch((e=>{m({...h,loading:!1,warning:e.response.data.reason}),setTimeout((()=>{m({...h,warning:""})}),2e3)}))}),[c,h]);return n.createElement(fe,{y:a,x:t,width:i,height:r},""===h.warning?n.createElement(we,null,h.loading?n.createElement("div",null,"loading..."):n.createElement(ve,{style:{height:u},value:c,onChange:f,autoFocus:!0,ref:p}),n.createElement(be,{size:i/o.width,onClick:w,right:o.x+o.width<32?-5:i},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"})))):n.createElement(Ze,null,h.warning))},Me=({toast:e,x:t,y:a,width:i,height:r,offset:o,initStates:l,board:s})=>{const[c,g]=I(""),[h,m]=I(""),p=(0,n.useRef)(),[u,x]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),f=(0,n.useCallback)((()=>{p.current.click()}),[p.current]),w=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await x({...u,loading:!0}),await d().post("/api/uploadImage",t).then((e=>{x({...u,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{x({...u,loading:!1,message:e.response.data})}))}),[u]),b=(0,n.useCallback)((async()=>{x({...u,loading:!0}),await d().post(`/api/board/${s}/write/note`,{background_img:u.imageURL,head:c,paragraph:h,x:o.x,y:o.y,width:o.width,height:o.height}).then((t=>{if(202===t.status)return x({...u,loading:!1,message:t.data.reason}),setTimeout((()=>{x({...u,message:""})}),2e3);x({...u,loading:!1,success:!0}),e.dark(`남은 칸은 ${t.data}칸 입니다.`),l()})).catch((e=>{x({...u,loading:!1,message:e.response.data.reason})}))}),[u,h,c]);return n.createElement(fe,{y:a,x:t,width:i,height:r},""===u.message?n.createElement(we,{className:"note"},n.createElement(ke,{src:""!==u.imageURL?u.imageURL:null},n.createElement(ze,{size:r/o.height},n.createElement(Ce,{key:"headerInput",type:"text",placeholder:"타이틀을 입력해주세요.",value:c,onChange:g})),n.createElement(ze,{size:r-r/o.height-20},n.createElement(ve,{value:h,onChange:m,autoFocus:!0,placeholder:"본문 내용을 입력해주세요.",style:{textAlign:"left"}}))),n.createElement(be,{size:i/o.width,onClick:b,right:o.x+o.width<32?-5:i},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(ye,{onClick:f,size:i/o.width,right:o.x+o.width<32?-5:i},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:p,onChange:w}))):n.createElement(Ze,null,u.message))};E().extend(z());const Le=({imageInput:e,onChangeImg:t,onClick:a})=>n.createElement(ue,{onClick:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("p",null,"이미지 변경하기"),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:e,onChange:t})),Be=({board:e,boardData:t,dataReval:a,userData:i})=>{const r=n.useRef(),[o,l]=(0,n.useState)({x:0,y:0,dragged:!1}),[s,c]=(0,n.useState)({x:0,y:0}),[g,h]=(0,n.useState)({x:0,y:0}),[m,p]=(0,n.useState)({x:0,y:0,flg:!1,disp:!1}),[u,x]=(0,n.useState)({x:0,y:0,width:0,height:0}),[f,w]=(0,n.useState)(0),[b,y]=(0,n.useState)({category:0,id:0,flg:!1,loadComment:!1,content:null}),[v,k]=(0,n.useState)(""),[z,C]=(0,n.useState)(window.innerWidth),[Z,j]=(0,n.useState)(z/32),[S,M]=(0,n.useState)({width:Z,height:Z}),[L,B,D]=I(""),[A,H]=(0,n.useState)(20*Z),[T,F]=(0,n.useState)(),[N,_]=(0,n.useState)(!1),[ue,xe]=(0,n.useState)(""),[fe,we,be]=I(""),[ye,ve]=(0,n.useState)(""),[Ee,ke]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),[ze,Ce]=(0,n.useState)(!1),[Ze,Be]=(0,n.useState)(!1),Ie=(0,n.useRef)(),De=(0,n.useRef)(),Re=new Date,Ue={transform:b.flg?"translateX(0%)":"translateX(-100%)"};(0,n.useEffect)((()=>{h({x:g.x/Z*window.innerWidth/32,y:g.y/Z*window.innerWidth/32}),M({width:S.width/Z*window.innerWidth/32,height:S.height/Z*window.innerWidth/32}),C(window.innerWidth),j(window.innerWidth/32),H(window.innerWidth/32*20)}),[window.innerWidth,Z]);const Ae=(0,n.useCallback)((e=>{const t=S.width/Z,a=S.height/Z;a*t<4?k("최소 4칸의 영역을 선택해야합니다."):3===e&&a*t<6?k("이미지는 최소 6칸의 영역을 선택해야합니다."):2===e&&a*t<20?k("노트는 최소 20칸이상의 영역을 선택해야합니다."):2===e&&(a<3||t<4)?k("노트는 4x3이상의 영역을 선택해야합니다."):(x({x:g.x/Z,y:g.y/Z,width:S.width/Z,height:S.height/Z}),w(e))}),[S,Z]),$e=(0,n.useCallback)((()=>{if(o&&!ze){let e=Z*Math.floor(Math.abs(s.x-s.x%Z-o.x)/Z+1),t=Z*Math.floor(Math.abs(s.y-s.y%Z-o.y)/Z+1);const a=s.x-o.x,n=s.y-o.y;a<0&&n>0?h({...g,x:s.x-s.x%Z}):a>0&&n<0?h({...g,y:s.y-s.y%Z}):a<0&&n<0&&h({x:s.x-s.x%Z,y:s.y-s.y%Z}),a>Z&&(e+=Z),n>Z&&(t+=Z),M({width:e,height:t})}}),[s,o,g,Z]),He=e=>{h({x:e.target.x()-e.target.x()%Z,y:e.target.y()-e.target.y()%Z})},Te=({x:e=0,y:t=0})=>{const a=ze?"rgba(32, 178, 170, .5)":"rgba(255, 255, 255, 0.1)";if((3===b?.category||2===b?.category)&&ze){const i=3===b.category?b.content?.url:b.content?.background_img,[r]=$()(i||"");return n.createElement(U.Image,{opacity:.4,width:S.width,height:S.height,fill:a,x:e,y:t,cornerRadius:5,image:r,draggable:!0,onDragEnd:ze?He:void 0})}return n.createElement(U.Rect,{width:S.width,height:S.height,fill:a,x:e,y:t,cornerRadius:5,draggable:!0,onDragEnd:ze?He:void 0})},Fe=(0,n.useCallback)(((e,t,a)=>e>t&&e<a),[]),Ne=(0,n.useCallback)((()=>!(t?.TextContents&&t.TextContents.filter((e=>!(1===b.category&&e.id===b.id))).find((e=>(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))||(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(g.y,e.y*Z,(e.y+e.height)*Z)||Fe(g.y+S.height,e.y*Z,(e.y+e.height)*Z))||(Fe(g.x,e.x*Z,(e.x+e.width)*Z)||Fe(g.x+S.width,e.x*Z,(e.x+e.width)*Z))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))))||t?.Images&&t.Images.filter((e=>!(3===b.category&&e.id===b.id))).find((e=>(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))||(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(g.y,e.y*Z,(e.y+e.height)*Z)||Fe(g.y+S.height,e.y*Z,(e.y+e.height)*Z))||(Fe(g.x,e.x*Z,(e.x+e.width)*Z)||Fe(g.x+S.width,e.x*Z,(e.x+e.width)*Z))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))))||t?.Notes&&t.Notes.filter((e=>!(2===b.category&&e.id===b.id))).find((e=>(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height))||(Fe(e.x*Z,g.x,g.x+S.width)||Fe((e.x+e.width)*Z,g.x,g.x+S.width))&&(Fe(g.y,e.y*Z,(e.y+e.height)*Z)||Fe(g.y+S.height,e.y*Z,(e.y+e.height)*Z))||(Fe(g.x,e.x*Z,(e.x+e.width)*Z)||Fe(g.x+S.width,e.x*Z,(e.x+e.width)*Z))&&(Fe(e.y*Z,g.y,g.y+S.height)||Fe((e.y+e.height)*Z,g.y,g.y+S.height)))))),[t,g,Z,S,b]),_e=(e,t,a,n,i,r,o,l)=>!(i>=e&&r>=t&&i+o<=e+a&&r+l<=t+n),Ye=(0,n.useCallback)((()=>!(!Ne()||t?.TextContents?.filter((e=>!(1===b.category&&e.id===b.id))).find((e=>!_e(e.x*Z,e.y*Z,e.width*Z,e.height*Z,g.x,g.y,S.width,S.height)))||t?.Images?.filter((e=>!(3===b.category&&e.id===b.id))).find((e=>!_e(e.x*Z,e.y*Z,e.width*Z,e.height*Z,g.x,g.y,S.width,S.height)))||t?.Notes?.filter((e=>!(2===b.category&&e.id===b.id))).find((e=>!_e(e.x*Z,e.y*Z,e.width*Z,e.height*Z,g.x,g.y,S.width,S.height))))),[t,g,S,Z,b]),Xe=(0,n.useCallback)((e=>{Ne()?Ae(e):k("겹치는 영역이 존재합니다.")}),[S,g,Z,S]),We=(0,n.useCallback)((()=>{M({width:Z,height:Z}),l({...o,dragged:!1}),p({...m,flg:!1}),w(0),k("")}),[Z,o,m]),Oe=(0,n.useCallback)(((e,t,a)=>{y({...b,flg:!0,category:e,id:t,content:a}),F(a.Comments)}),[b]),Pe=(0,n.useCallback)((t=>{t.preventDefault(),""!==L&&d().post(`/api/board/${e}/comment/${b.category}/${b.content?.id}`,{content:L}).then((()=>{D(""),a()})).catch((e=>{console.error(e)}))}),[L,b]),Ve=(0,n.useCallback)((t=>{if(t.preventDefault(),!confirm("정말 삭제하시겠습니까?"))return;let n="";if(1===b.category)n="text";else if(2===b.category)n="note";else{if(3!==b.category)return;n="image"}d().delete(`api/board/${e}/delete/${n}/${b.content?.id}`).then((()=>{a(),y({category:0,id:0,flg:!1,loadComment:!1,content:null}),R.Am.dark("게시물이 삭제되었습니다.")})).catch((e=>{console.error(e)}))}),[b]),qe=(0,n.useCallback)((e=>{_(!N),N?(xe(""),be(""),ve("")):1===e?(xe("string"==typeof b.content?.content?b.content?.content:""),N&&Ge(Ie.current.scrollHeight+"px")):2===e?(be("string"==typeof b.content?.head?b.content?.head:""),xe("string"==typeof b.content?.paragraph?b.content?.paragraph:""),ke({...Ee,imageURL:"string"==typeof b.content?.background_img?b.content?.background_img:""}),N&&Ge(Ie.current.scrollHeight+"px")):3===e&&ke({...Ee,imageURL:"string"==typeof b.content?.url?b.content?.url:""})}),[N,b,Ie]),[Ke,Ge]=(0,n.useState)("auto"),Je=(0,n.useCallback)((e=>{Ge(Ie.current.scrollHeight+"px"),xe(e.target.value)}),[Ie]),Qe=(0,n.useCallback)((()=>{y({category:0,id:0,flg:!1,loadComment:!1,content:null}),be(""),xe(""),ke({loading:!1,success:!1,message:"",imageURL:""}),_(!1)}),[]),et=(0,n.useCallback)((()=>{be(""),xe(""),ke({loading:!1,success:!1,message:"",imageURL:""}),_(!1)}),[]),tt=(0,n.useCallback)((()=>{De.current.click()}),[De.current]),at=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await ke({...Ee,loading:!0}),await d().post("/api/uploadImage",t,{headers:{"Access-Control-Allow-Origin":"*"}}).then((e=>{ke({...Ee,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{ke({...Ee,loading:!1,message:e.response.data})}))}),[]),nt=(0,n.useCallback)((async()=>{let t="",n={x:b.content?.x,y:b.content?.y,width:b.content?.width,height:b.content?.height,content:"",head:"",paragraph:"",background_img:"",url:""};if(1===b.category)t=`/api/board/${e}/text/${b.id}`,n={...n,content:ue};else if(2===b.category)t=`/api/board/${e}/note/${b.id}`,n={...n,background_img:Ee.imageURL,head:fe,paragraph:ue};else{if(3!==b.category)return await k("잘못된 접근입니다."),void await setTimeout((()=>{k("")}),2e3);if(""===Ee.imageURL)return await k("이미지를 다시 업로드해주세요"),void await setTimeout((()=>{k("")}),2e3);t=`/api/board/${e}/image/${b.id}`,n={...n,url:Ee.imageURL}}await d().patch(t,n).then((()=>{y({category:0,id:0,flg:!1,loadComment:!1,content:null}),R.Am.dark("게시물이 수정되었습니다."),a()})).catch((e=>{k(e.response.data.reason),setTimeout((()=>{k("")}),2e3)})),et()}),[ue,fe,b,Ee]),it=(0,n.useCallback)((()=>{b.content&&(p({...m,flg:!1,disp:!1}),y({...b,flg:!1}),Ce(!0),h({x:b.content.x*Z,y:b.content.y*Z}),M({width:b.content.width*Z,height:b.content.height*Z}))}),[b,Z]);return(0,n.useEffect)((()=>{0!=f||ze||(o.dragged?$e():h({x:s.x-s.x%Z,y:s.y-s.y%Z}))}),[s,o,f,Z,ze]),(0,n.useEffect)((()=>{0!==f&&p({...m,flg:!1})}),[f]),(0,n.useEffect)((()=>{let e;1===b.category?e=t?.TextContents.find((e=>e.id===b.id))?.Comments:2===b.category?e=t?.Notes?.find((e=>e.id===b.id))?.Comments:3===b.category&&(e=t?.Images?.find((e=>e.id===b.id))?.Comments),F(e)}),[t,b]),n.createElement(Y,null,""!==v&&n.createElement(X,null,v),b.flg&&n.createElement(W,{onClick:Qe}),n.createElement(O,{style:Ue},n.createElement(P,null,0!==b.id&&n.createElement(n.Fragment,null,n.createElement(V,null,n.createElement(K,null,n.createElement("img",{src:b.content?.User.profile_img}),n.createElement("p",null,b.content?.User.username),(i.is_admin||b.content&&b.content.UserId===i.id)&&n.createElement(G,null,n.createElement("button",{onClick:()=>qe(b.category)},n.createElement("img",{src:"/public/edit.svg"})),n.createElement("button",{onClick:Ve},n.createElement("img",{src:"/public/delete.svg"})),n.createElement("button",{onClick:it},n.createElement("img",{src:"/public/resize.svg"})))),n.createElement(J,null,n.createElement("div",null,"작성일 : ",n.createElement("p",null,E()(b.content?.createdAt).format("YYYY년 MM월 DD일")))),"Content :",n.createElement(Q,null,1===b.category&&(N?n.createElement(n.Fragment,null,n.createElement(ee,null,n.createElement("textarea",{value:ue,onChange:Je,ref:Ie,style:{height:Ke}}),n.createElement(te,null,n.createElement("div",{className:"button edit",onClick:nt},"수정"),n.createElement("div",{className:"button",onClick:et},"취소")))):n.createElement("pre",null,b.content?.content)),2===b.category&&(N?n.createElement(n.Fragment,null,n.createElement(ee,null,n.createElement(ae,null,""!==Ee.imageURL?n.createElement("img",{src:Ee.imageURL}):n.createElement("div",{className:"temp"}),n.createElement(Le,{onClick:tt,imageInput:De,onChangeImg:at})),n.createElement("input",{value:fe,onChange:we}),n.createElement("textarea",{value:ue,onChange:Je,ref:Ie,style:{height:Ke}}),n.createElement(te,null,n.createElement("div",{className:"button edit",onClick:nt},"수정"),n.createElement("div",{className:"button",onClick:et},"취소")))):n.createElement(n.Fragment,null,b.content?.background_img&&n.createElement("img",{src:b.content?.background_img}),n.createElement("h2",null,b.content?.head),n.createElement("pre",null,b.content?.paragraph))),3===b.category&&(N?n.createElement(n.Fragment,null,n.createElement(ee,null,n.createElement(ae,null,n.createElement("img",{src:Ee.imageURL}),n.createElement(Le,{onClick:tt,imageInput:De,onChangeImg:at})),n.createElement(te,null,n.createElement("div",{className:"button edit",onClick:nt},"수정"),n.createElement("div",{className:"button",onClick:et},"취소")))):n.createElement("img",{src:b.content?.url})))),n.createElement("div",{style:{borderBottom:"1px solid #444",padding:".5rem 0"}},"Comment:"),n.createElement(ne,null,T?.map(((e,t)=>n.createElement(ie,{key:t},n.createElement("img",{src:e.User.profile_img}),n.createElement("div",{className:"content"},n.createElement("p",null,e.User.username),n.createElement("div",null,n.createElement("div",null,e.content),n.createElement("p",null,E()(e.createdAt).diff(Re,"day")>-1?E()(e.createdAt).format("LT"):E()(e.createdAt).format("YYYY년 MM월 DD일")))))))))),n.createElement(q,{onClick:Pe},n.createElement("input",{type:"text",value:L,onChange:B,onKeyPress:e=>{"Enter"===e.key&&Pe(e)}}),n.createElement("div",null,n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))))),n.createElement(re,{clicked:m.flg,x:m.x,y:m.y,disp:m.disp},n.createElement(oe,{onClick:()=>Xe(1)},"Text"),n.createElement(oe,{onClick:()=>Xe(2)},"Note"),n.createElement(oe,{onClick:()=>Xe(3)},"Image")),1===f&&n.createElement(Se,{toast:R.Am,width:S.width,height:S.height,x:g.x,y:g.y,offset:u,initStates:We,board:e}),2===f&&n.createElement(Me,{toast:R.Am,width:S.width,height:S.height,x:g.x,y:g.y,offset:u,initStates:We,board:e}),3===f&&n.createElement(je,{toast:R.Am,width:S.width,height:S.height,x:g.x,y:g.y,offset:u,initStates:We,board:e}),t?.TextContents&&t?.TextContents.map(((e,t)=>n.createElement(le,{key:t,width:Z*e.width,height:Z*e.height,x:Z*e.x,y:Z*e.y},n.createElement(de,{onClick:()=>Oe(1,e.id,e)},e.content,n.createElement(se,{className:"alt"},e.User.username))))),t?.Images&&t?.Images.map(((e,t)=>n.createElement(le,{key:t,width:Z*e.width,height:Z*e.height,x:Z*e.x,y:Z*e.y},n.createElement(ce,{onClick:()=>Oe(3,e.id,e)},n.createElement(se,{className:"alt"},e.User.username),n.createElement("img",{src:e.url}))))),t?.Notes&&t?.Notes.map(((e,t)=>n.createElement(le,{key:t,width:Z*e.width,height:Z*e.height,x:Z*e.x,y:Z*e.y},n.createElement(ge,{onClick:()=>Oe(2,e.id,e),src:e.background_img?e.background_img:""},n.createElement(se,{className:"alt"},e.User.username),n.createElement("h3",{className:"head"},e.head),n.createElement("pre",{className:"para",style:{height:Z*e.height-10}},n.createElement("p",null,e.paragraph)))))),n.createElement(U.Stage,{style:{height:A,zIndex:ze?20:1,background:ze?"rgba(0, 0, 0, .2)":""},width:z,height:A,onMouseMove:ze?void 0:e=>{if(!m.flg){r.current.getAbsoluteTransform().copy().invert();const t=e.target.getStage()?.getPointerPosition();c({x:t?.x,y:t?.y})}},onMouseDown:ze?void 0:()=>{0!==f||ze||l({x:s.x,y:s.y,dragged:!0})},onMouseUp:ze?void 0:()=>{if(!ze)if(m.flg||0!=f)We();else{const e=s.x>window.innerWidth-140?s.x-140:s.x,t=s.y>window.innerHeight-140?s.y-140:s.y;p({x:e,y:t,flg:!0,disp:!0})}}},n.createElement(U.Layer,{ref:r},n.createElement(U.Group,null,n.createElement(Te,{x:g.x,y:g.y})))),ze&&n.createElement("div",{style:{position:"absolute",top:"10px",left:"10px"}},n.createElement(he,{onClick:()=>{Ce(!1),We()}},n.createElement("span",null,"돌아가기"),n.createElement("img",{src:"/public/close.svg"})),n.createElement(he,{onClick:async()=>{if(!Ye())return k("이동할 수 없는 위치입니다.");let t="";const n=S.width/Z,i=S.height/Z;if(i*n<4)return k("최소 4칸의 영역을 선택해야합니다.");if(3===b.category&&i*n<6)return k("이미지는 최소 6칸의 영역을 선택해야합니다.");if(2===b.category&&i*n<20)return k("노트는 최소 20칸이상의 영역을 선택해야합니다.");if(2===b.category&&(i<3||n<4))return k("노트는 4x3이상의 영역을 선택해야합니다.");let r={x:g.x/Z,y:g.y/Z,width:S.width/Z,height:S.height/Z,content:b.content?.content,head:b.content?.head,paragraph:b.content?.paragraph,background_img:b.content?.background_img,url:b.content?.url};if(1===b.category)t=`/api/board/${e}/text/${b.id}`;else if(2===b.category)t=`/api/board/${e}/note/${b.id}`;else{if(3!==b.category)return await k("잘못된 접근입니다."),void await setTimeout((()=>{k("")}),2e3);t=`/api/board/${e}/image/${b.id}`}await d().patch(t,r).then((e=>{a(),Qe(),k(""),Ce(!1),!1===e.data?R.Am.dark("게시물이 수정되었습니다."):R.Am.dark(`남은 칸은 ${e.data}칸 입니다.`),We()})).catch((e=>{k(e.response.data.reason),setTimeout((()=>{k("")}),2e3)})),d().patch}},n.createElement("span",null,"수정하기"),n.createElement("img",{src:"/public/check.svg"})),Ze?n.createElement(he,{className:"resize",style:{cursor:"none"}},n.createElement(me,null,n.createElement("span",null,"WIDTH -"),n.createElement("button",{className:"decrease",onClick:()=>M({...S,width:S.width-Z})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,S.width/Z),n.createElement("button",{onClick:()=>M({...S,width:S.width+Z})},n.createElement("img",{src:"/public/arrow.svg"}))),n.createElement(me,null,n.createElement("span",null,"HEIGHT -"),n.createElement("button",{className:"decrease",onClick:()=>M({...S,height:S.height-Z})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,S.height/Z),n.createElement("button",{onClick:()=>M({...S,height:S.height+Z})},n.createElement("img",{src:"/public/arrow.svg"})))):n.createElement(he,{onClick:()=>Be(!0)},n.createElement("span",null,"크기 변경하기"),n.createElement("img",{src:"/public/resize.svg"}))),n.createElement(pe,null,"designed by @han"),n.createElement(R.Ix,{position:"bottom-left",autoClose:5e3,hideProgressBar:!1,newestOnTop:!0,closeOnClick:!1,rtl:!1,pauseOnFocusLoss:!0,draggable:!0,pauseOnHover:!0}))},Ie=()=>{const e=(0,i.UO)(),{board:t}=e,[a,s]=h(t),{data:c,revalidate:g,error:m}=(0,r.ZP)("/api/auth",o.Z),{data:p,revalidate:u}=(0,r.ZP)(c?"/api/board/"+t:null,o.Z),[v,E]=(0,n.useState)(!1),[k,z]=(0,n.useState)(),C=(0,n.useCallback)((()=>{d().post("/api/logout").then((()=>{g(),window.location.reload(!1)})).catch((e=>{console.error(e)}))}),[]);return(0,n.useEffect)((()=>()=>{console.info("disconnect socket",42),s()}),[s]),(0,n.useEffect)((()=>{p&&c&&(console.info("로그인"),a?.emit("login",{id:c?.id,username:c?.username,boards:42}))}),[a,c,p]),(0,n.useEffect)((()=>(a?.on("onlineList",(async e=>{const t=[];await e.forEach((e=>{t.find((t=>t.id===e.id))||t.push(e)})),z(t)})),a?.on("refresh",(()=>{console.log("refresh"),u()})),()=>{a?.off("refresh")})),[a]),c?p?n.createElement(n.Fragment,null,v&&n.createElement(y,{style:{zIndex:8},onClick:()=>E(!1)}),n.createElement(x,{style:{transform:`translateX(${v?"0":"100%"})`}},n.createElement(f,null,n.createElement(b,null,n.createElement("p",null,"User List"),n.createElement("ul",null,k?.map(((e,t)=>n.createElement("li",{key:t},e.id===c.id?e.username+" (me)":e.username))))),t&&c&&p&&n.createElement(D,{userData:c,board:t}),n.createElement("div",{className:"up",onClick:()=>E(!v)},v?n.createElement("img",{src:"/public/arrow.svg"}):n.createElement("img",{src:"/public/person.svg"})),n.createElement(w,{onClick:C},"로그아웃"))),n.createElement(Be,{boardData:p,dataReval:u,userData:c,board:t||""})):n.createElement(l.Z,null):n.createElement(i.l_,{to:"/auth"})},De=n.memo(Ie)},3564:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(3653),i=a.n(n);const r=e=>i().get(e,{withCredentials:!0}).then((e=>e.data))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vY29tcG9uZW50cy9Mb2FkaW5nQ2lyY2xlL3N0eWxlLnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vY29tcG9uZW50cy9Mb2FkaW5nQ2lyY2xlL2luZGV4LnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vaG9va3MvdXNlU29ja2V0LnRzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9sYXlvdXRzL0JvYXJkL3N0eWxlLnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vY29tcG9uZW50cy9DaGF0Qm94L3N0eWxlLnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vaG9va3MvdXNlSW5wdXQudHMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL2NvbXBvbmVudHMvQ2hhdEJveC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL3V0aWxzL2NyZWF0ZVNlY3Rpb24udHMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL3BhZ2VzL1dvcmtTcGFjZS9zdHlsZS50c3giLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL2NvbXBvbmVudHMvYWRkU3R5bGUudHN4Iiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9jb21wb25lbnRzL0ltYWdlQWRkL2luZGV4LnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vY29tcG9uZW50cy9UZXh0QWRkL2luZGV4LnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vY29tcG9uZW50cy9Ob3RlQWRkL2luZGV4LnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vcGFnZXMvV29ya1NwYWNlL2luZGV4LnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbGF5b3V0cy9Cb2FyZC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL3V0aWxzL2ZldGNoZXIudHMiXSwibmFtZXMiOlsic3BpbiIsImtleWZyYW1lcyIsIkxvYWRpbmdDaXJjbGVDb250YWluZXIiLCJMb2FkaW5nQ2lyY2xlQm94IiwiTG9hZGluZ0NpcmNsZUNvcmUiLCJzb2NrZXRzIiwiYm9hcmQiLCJkaXNjb25uZWN0IiwidXNlQ2FsbGJhY2siLCJpbyIsInRyYW5zcG9ydHMiLCJjb25zb2xlIiwiaW5mbyIsImlkIiwidW5kZWZpbmVkIiwicGFkZUluIiwiVXNlck1lbnUiLCJNZW51Q29udGFpbmVyIiwiTG9nT3V0QnV0dG9uIiwiVXNlckxpc3QiLCJEZXRhaWxCYWNrZ3JvdW5kIiwicGFkZUxlZnRUb1JpZ2h0IiwicGFkZVJpZ2h0VG9MZWZ0IiwiQ2hhdFJvb20iLCJDaGF0Rm9ybSIsIkNoYXQiLCJTdGlja3lIZWFkZXIiLCJpbml0aWFsVmFsdWUiLCJ2YWx1ZSIsInNldFZhbHVlIiwidXNlU3RhdGUiLCJlIiwidGFyZ2V0IiwiZGF5anMiLCJsb2NhbGl6ZWRGb3JtYXQiLCJ1c2VyRGF0YSIsInNvY2tldCIsImRpc2Nvbm5lY3RTb2NrZXQiLCJ1c2VTb2NrZXQiLCJkYXRhIiwiY2hhdERhdGEiLCJtdXRhdGUiLCJtdXRhdGVDaGF0Iiwic2V0U2l6ZSIsInVzZVNXUkluZmluaXRlIiwiaW5kZXgiLCJmZXRjaGVyIiwiY2hhdCIsIk9DQ2hhdCIsInNldENoYXQiLCJ1c2VJbnB1dCIsImlzRmlyc3QiLCJzZXRJc0ZpcnN0IiwiUmVhY3QiLCJub3ciLCJEYXRlIiwic2Nyb2xsYmFyUmVmIiwidXNlUmVmIiwiY2hhdFNlY3Rpb25zIiwiY2hhdExpc3QiLCJzZWN0aW9ucyIsImZvckVhY2giLCJtb250aERhdGUiLCJjcmVhdGVkQXQiLCJmb3JtYXQiLCJBcnJheSIsImlzQXJyYXkiLCJwdXNoIiwiY3JlYXRlU2VjdGlvbiIsImNvbmNhdCIsInJldmVyc2UiLCJpc0VtcHR5IiwibGVuZ3RoIiwiaXNSZWFjaGluZ0VuZCIsInN1Ym1pdE1lc3NhZ2UiLCJwcmV2ZW50RGVmYXVsdCIsInRyaW0iLCJzYXZlZENoYXQiLCJwcmV2Q2hhdERhdGEiLCJ1bnNoaWZ0IiwidXNlcklkIiwidXNlcm5hbWUiLCJjb250ZW50IiwidGhlbiIsImN1cnJlbnQiLCJzY3JvbGxUb0JvdHRvbSIsImF4aW9zIiwiY2F0Y2giLCJlcnJvciIsIm9uS2V5ZG93bkNoYXQiLCJrZXkiLCJzaGlmdEtleSIsIm9uTWVzc2FnZSIsImxvZyIsIm9uU2Nyb2xsIiwidmFsdWVzIiwic2Nyb2xsVG9wIiwic2l6ZSIsImdldFNjcm9sbEhlaWdodCIsInNjcm9sbEhlaWdodCIsInVzZUVmZmVjdCIsIm9uIiwib2ZmIiwiYXV0b0hpZGUiLCJyZWYiLCJvblNjcm9sbEZyYW1lIiwic3R5bGUiLCJoZWlnaHQiLCJvdmVyZmxvdyIsIk9iamVjdCIsImVudHJpZXMiLCJtYXAiLCJkYXRlIiwiY2hhdHMiLCJjIiwiY2xhc3NOYW1lIiwiZGlmZiIsIm9uU3VibWl0IiwidHlwZSIsIm9uQ2hhbmdlIiwib25LZXlQcmVzcyIsInBsYWNlaG9sZGVyIiwiYXBwZXJNZW51IiwiZGlzYXBwZXJNZW51IiwiZW5sYXJnZSIsIktvbnZhQ29udGFpbmVyIiwiV2Fybk1lc3NhZ2UiLCJEZXRhaWxXaW5kb3ciLCJEZXRhaWxCb3giLCJUb3BGaXhDb250ZW50IiwiQm90dG9tRml4Q29udGVudCIsIlVzZXJJbmZvIiwiVURCdXR0b25Cb3giLCJNb21lbnRCb3giLCJEZXRhaWxDb250ZW50Qm94IiwiRWRpdEFyZWEiLCJFZGl0QnV0dG9uQm94IiwiSW1hZ2VCb3giLCJDb21tZW50Qm94IiwiQ29tbWVudCIsIk1lbnVCb3giLCJwcm9wcyIsImRpc3AiLCJjbGlja2VkIiwieSIsIngiLCJNZW51QXR0ciIsIkNvbXBvbmVudEJveCIsIndpZHRoIiwiQWx0Qm94IiwiVGV4dENvbXBvbmVudCIsIkltYWdlQ29tcG9uZW50IiwiTm90ZUNvbXBvbmVudCIsInNyYyIsIk9uTW9kZUFsdCIsIlJlc2l6ZVJlbW90ZSIsIkJvYXJkRm9vdGVyIiwiRWRpdEltYWdlSW5wdXQiLCJBZGRDb250YWluZXIiLCJBZGRCb3giLCJTdWJtaXRCdXR0b24iLCJyaWdodCIsIkltYWdlSW5wdXRCdXR0b24iLCJUZXh0QXJlYSIsIkltYWdlQWRkQm94IiwiTm90ZUFkZEJveCIsIklucHV0Qm94IiwiSW5wdXRBcmVhIiwiV2FybkJveCIsInRvYXN0Iiwib2Zmc2V0IiwiaW5pdFN0YXRlcyIsImltYWdlSW5wdXQiLCJ1cGxvYWRpbmciLCJzZXRVcGxvYWRpbmciLCJsb2FkaW5nIiwic3VjY2VzcyIsImltYWdlVVJMIiwibWVzc2FnZSIsIm9uQ2xpY2tJbWFnZVVwbG9hZCIsImNsaWNrIiwib25DaGFuZ2VJbWciLCJhc3luYyIsImltYWdlRm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImZpbGVzIiwicmVzIiwidXJsIiwicmVzcG9uc2UiLCJzdWJtaXRJbWFnZSIsInN0YXR1cyIsInJlYXNvbiIsInNldFRpbWVvdXQiLCJkYXJrIiwiYWxlcnQiLCJvbkNsaWNrIiwieG1sbnMiLCJ2aWV3Qm94IiwiZCIsImZpbGwiLCJhY2NlcHQiLCJwb3N0U3RhdGUiLCJzZXRQb3N0U3RhdGUiLCJ3YXJuaW5nIiwidGV4dFNjcm9sbFJlZiIsIlRBSCIsInNldFRBSCIsIk9DVmFsdWUiLCJ3cml0ZVRleHQiLCJhdXRvRm9jdXMiLCJoZWFkIiwiT0NIZWFkIiwicGFyYSIsIk9DUGFyYSIsInN1Ym1pdE5vdGUiLCJiYWNrZ3JvdW5kX2ltZyIsInBhcmFncmFwaCIsInRleHRBbGlnbiIsIkltYWdlRWRpdEJ1dHRvbiIsImJvYXJkRGF0YSIsImRhdGFSZXZhbCIsImxheWVyUmVmIiwiaXNEcmFnZ2VkIiwic2V0RHJhZ2dlZCIsImRyYWdnZWQiLCJtUG9zIiwic2V0TVBvcyIsInJQb3MiLCJzZXRSUG9zIiwibWVudVN0YXRlIiwic2V0TWVudSIsImZsZyIsInNldE9mZnNldCIsImFkZFN0YXRlIiwic2V0QWRkIiwib3BlbkRldGFpbCIsInNldE9wZW5EZXRhaWwiLCJjYXRlZ29yeSIsImxvYWRDb21tZW50Iiwic2V0V2FybmluZyIsInNldFdpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImRlZmF1bHRSZWN0U2l6ZSIsInNldERlZmF1bHRSZWN0U2l6ZSIsInJlY3RTaXplIiwic2V0UmVjdFNpemUiLCJjb21tZW50Q29udGVudCIsIk9DQ0MiLCJzZXRDQyIsInNldEhlaWdodCIsImNvbW1lbnRzIiwic2V0Q29tbWVudHMiLCJpc0VkaXQiLCJzZXRJc0VkaXQiLCJ0ZXh0Iiwic2V0VGV4dCIsInNldEhlYWQiLCJlZGl0VXJsIiwic2V0RWRpdFVybCIsImNhbk1vdmUiLCJzZXRDYW5Nb3ZlIiwiaXNFZGl0U2l6ZSIsInNldElzRWRpdFNpemUiLCJkZXRhaWxXaW5kb3dTdHlsZSIsInRyYW5zZm9ybSIsInZpZXdBZGRDb21wb25lbnQiLCJudW1iZXIiLCJzZWxlY3RXaWR0aCIsInNlbGVjdEhlaWdodCIsImdldFJlY3RTaXplIiwidyIsIk1hdGgiLCJmbG9vciIsImFicyIsImgiLCJ4ZGlmIiwieWRpZiIsInJlY3RERSIsIlJlY3RPbkNhbnZhcyIsImNvbG9yIiwiaW1hZ2VTcmMiLCJpbWFnZSIsInVzZUltYWdlIiwiSW1hZ2UiLCJvcGFjaXR5IiwiY29ybmVyUmFkaXVzIiwiZHJhZ2dhYmxlIiwib25EcmFnRW5kIiwiUmVjdCIsImNoZWNrVmVydGV4SW5SZWN0IiwidiIsImxlZnQiLCJjaGVja0FsbEJveCIsIlRleHRDb250ZW50cyIsImZpbHRlciIsImVsZW0iLCJmaW5kIiwiSW1hZ2VzIiwiTm90ZXMiLCJ0ZXN0RiIsInJ4IiwicnkiLCJydyIsInJoIiwiaXNBdmFpbFBvcyIsIm9wZW5BZGRDb21wb25lbnQiLCJvcGVuRGV0YWlsV2luZG93IiwiQ29tbWVudHMiLCJzdWJtaXRDb21tZW50IiwiZGVsZXRlQm94IiwiY29uZmlybSIsIm9uRWRpdCIsImNpZCIsIk9DVGV4dCIsIm9uSW5pdENvbnRlbnQiLCJjZW5jZWxFZGl0IiwiaGVhZGVycyIsIm9uU3VibWl0RWRpdCIsInJlcXVlc3RVUkwiLCJtb3ZlTW9kZSIsImVkaXRlZENvbnRlbnQiLCJVc2VyIiwicHJvZmlsZV9pbWciLCJpc19hZG1pbiIsIlVzZXJJZCIsImJvcmRlckJvdHRvbSIsInBhZGRpbmciLCJpIiwiTm90ZUFkZCIsIkltYWdlQWRkIiwiU3RhZ2UiLCJ6SW5kZXgiLCJiYWNrZ3JvdW5kIiwib25Nb3VzZU1vdmUiLCJnZXRBYnNvbHV0ZVRyYW5zZm9ybSIsImNvcHkiLCJpbnZlcnQiLCJwb3MiLCJnZXRTdGFnZSIsImdldFBvaW50ZXJQb3NpdGlvbiIsIm9uTW91c2VEb3duIiwib25Nb3VzZVVwIiwibVgiLCJtWSIsImlubmVySGVpZ2h0IiwiTGF5ZXIiLCJHcm91cCIsInBvc2l0aW9uIiwidG9wIiwiY3Vyc29yIiwiYXV0b0Nsb3NlIiwiaGlkZVByb2dyZXNzQmFyIiwibmV3ZXN0T25Ub3AiLCJjbG9zZU9uQ2xpY2siLCJydGwiLCJwYXVzZU9uRm9jdXNMb3NzIiwicGF1c2VPbkhvdmVyIiwiQm9hcmQiLCJwYXJhbXMiLCJ1c2VQYXJhbXMiLCJyZXZhbGlkYXRlIiwiVVNFUlJldmFsaWRhdGUiLCJVc2VyRXJyb3IiLCJ1c2VTV1IiLCJCT0FSRFJldmFsaWRhdGUiLCJtZW51RmxnIiwic2V0TUZsZyIsInVzZXJMaXN0Iiwic2V0VXNlckxpc3QiLCJsb2dvdXQiLCJsb2NhdGlvbiIsInJlbG9hZCIsImVtaXQiLCJib2FyZHMiLCJybUR1cERhdGEiLCJMb2FkaW5nQ2lyY2xlIiwidG8iLCJ3aXRoQ3JlZGVudGlhbHMiXSwibWFwcGluZ3MiOiJ3SkFHQSxNQUFNQSxFLFFBQU9DLEVBQVU7Ozs7Ozs7RUFTVkMsR0FBeUIsY0FBSCxrREFBRyxDQUFILDZLQVl0QkMsR0FBbUIsY0FBSCw0Q0FBRyxDQUFILGtQQVVaSCxFQVZZLDRCQWFoQkksR0FBb0IsY0FBSCw2Q0FBRyxDQUFILHVGQ3hCOUIsRUFWeUIsSUFFakIsZ0JBQUNGLEVBQUQsS0FDSSxnQkFBQ0MsRUFBRCxLQUNJLGdCQUFDQyxFQUFELFMsNklDSGhCLE1BRU1DLEVBQW9ELEdBd0IxRCxFQXRCbUJDLElBQ2YsTUFBTUMsR0FBYUMs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Q0lzRixNQUFPLENBQUNtTyxPQUFRLEdBQ2hCekksUUFBUyxJQUFNNEssR0FBUSxLQUcvQixnQkFBQ2hXLEVBQUQsQ0FDSTBGLE1BQU8sQ0FBQ2dLLFVBQVksY0FBYXFHLEVBQVUsSUFBTSxZQUVqRCxnQkFBQzlWLEVBQUQsS0FDSSxnQkFBQ0UsRUFBRCxLQUNJLHNDQUNBLDBCQUNLOFYsR0FBVWxRLEtBQUksQ0FBQ0csRUFBR3VOLElBRVgsc0JBQUkvTyxJQUFNK08sR0FDTHZOLEVBQUVyRyxLQUFPc0IsRUFBU3RCLEdBQVFxRyxFQUFFakMsU0FBSixRQUFzQmlDLEVBQUVqQyxjQU1uRTNFLEdBQVM2QixHQUFZeUwsR0FDbkIsZ0JBQUMsRUFBRCxDQUNJekwsU0FBVUEsRUFDVjdCLE1BQU9BLElBR2YsdUJBQUs2RyxVQUFVLEtBQ1hpRixRQUFTLElBQU00SyxHQUFTRCxJQUV2QkEsRUFDRyx1QkFBS3ROLElBQUksc0JBRVQsdUJBQUtBLElBQUksd0JBR2pCLGdCQUFDdkksRUFBRCxDQUNJa0wsUUFBUytLLEdBRGIsVUFPUixnQkFBQyxHQUFELENBQ0l2SixVQUFXQSxFQUNYQyxVQUFXaUosRUFDWDNVLFNBQVVBLEVBQ1Y3QixNQUFPQSxHQUFnQixNQXBEcEIsZ0JBQUNtWCxFQUFBLEVBQUQsTUFIQSxnQkFBQyxLQUFELENBQVVDLEdBQUcsV0E2RDVCLEdBQWVyVSxPQUFXa1QsSyxvRUNoSTFCLE1BT0EsRUFQaUIzSyxHQUFnQnRHLFFBQzdCc0csRUFDQSxDQUNJK0wsaUJBQWlCLElBRXZCeFMsTUFBTTBHLEdBQWFBLEVBQVN0SiIsImZpbGUiOiIyOTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmNvbnN0IHNwaW4gPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDM1OWRlZyk7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IExvYWRpbmdDaXJjbGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAzMDBweDtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuYDtcblxuZXhwb3J0IGNvbnN0IExvYWRpbmdDaXJjbGVCb3ggPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxNTBweDtcbiAgICBoZWlnaHQ6IDE1MHB4O1xuICAgIHBhZGRpbmc6IDNweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGJhY2tncm91bmQ6IHJnYig2MywgMjQ5LCAyMDApO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCByZ2JhKDYzLCAyNDksIDIwMCwgMC4xKSAzMyUsIHJnYmEoNjMsIDI0OSwgMjIwLCAxKSAxMDAlKTtcbiAgICBhbmltYXRpb246ICR7c3Bpbn0gLjhzIGxpbmVhciAwcyBpbmZpbml0ZTtcbmA7XG5cbmV4cG9ydCBjb25zdCBMb2FkaW5nQ2lyY2xlQ29yZSA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICMwMDFjMjk7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuYDtcblxuXG4iLCJpbXBvcnQgUmVhY3QsIHtGQ30gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtMb2FkaW5nQ2lyY2xlQ29udGFpbmVyLCBMb2FkaW5nQ2lyY2xlQm94LCBMb2FkaW5nQ2lyY2xlQ29yZX0gZnJvbSAnLi9zdHlsZSc7XG5cbmNvbnN0IExvYWRpbmdDaXJjbGU6RkMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPExvYWRpbmdDaXJjbGVDb250YWluZXI+XG4gICAgICAgICAgICA8TG9hZGluZ0NpcmNsZUJveD5cbiAgICAgICAgICAgICAgICA8TG9hZGluZ0NpcmNsZUNvcmU+PC9Mb2FkaW5nQ2lyY2xlQ29yZT5cbiAgICAgICAgICAgIDwvTG9hZGluZ0NpcmNsZUJveD5cbiAgICAgICAgPC9Mb2FkaW5nQ2lyY2xlQ29udGFpbmVyPlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IExvYWRpbmdDaXJjbGU7XG4iLCJcbmltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGlvIGZyb20gJ3NvY2tldC5pby1jbGllbnQnO1xuXG5jb25zdCBiYWNrVXJsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICdodHRwczovL2FwaS40MmJvYXJkLmNvbScgOiAnaHR0cDovL2xvY2FsaG9zdDozMDk1JztcblxuY29uc3Qgc29ja2V0czogeyBba2V5OiBzdHJpbmddOiBTb2NrZXRJT0NsaWVudC5Tb2NrZXQgfSA9IHt9O1xuXG5jb25zdCB1c2VTb2NrZXQgPSAoYm9hcmQ/OiBzdHJpbmcpOiBbU29ja2V0SU9DbGllbnQuU29ja2V0IHwgdW5kZWZpbmVkLCAoKSA9PiB2b2lkXSA9PiB7XG4gICAgY29uc3QgZGlzY29ubmVjdCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKGJvYXJkICYmIHNvY2tldHNbYm9hcmRdKSB7XG4gICAgICAgICAgICBzb2NrZXRzW2JvYXJkXS5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICBkZWxldGUgc29ja2V0c1tib2FyZF07XG4gICAgICAgIH1cbiAgICB9LCBbYm9hcmRdKTtcblxuICAgIGlmICghYm9hcmQpIHtcbiAgICAgICAgcmV0dXJuIFt1bmRlZmluZWQsIGRpc2Nvbm5lY3RdO1xuICAgIH1cblxuICAgIGlmICghc29ja2V0c1tib2FyZF0pIHtcbiAgICAgICAgc29ja2V0c1tib2FyZF0gPSBpbyhgJHtiYWNrVXJsfS9ib2FyZC0ke2JvYXJkfWAsIHtcbiAgICAgICAgICAgIHRyYW5zcG9ydHM6IFsnd2Vic29ja2V0J10sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zb2xlLmluZm8oJ2NyZWF0ZSBzb2NrZXQnLCBib2FyZCwgc29ja2V0c1tib2FyZF0uaWQpO1xuICAgIH1cblxuICAgIHJldHVybiBbc29ja2V0c1tib2FyZF0sIGRpc2Nvbm5lY3RdO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlU29ja2V0O1xuIiwiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuXG5jb25zdCBwYWRlSW4gPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5gXG5cbmV4cG9ydCBjb25zdCBVc2VyTWVudSA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIHJpZ2h0OiAwO1xuICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgdHJhbnNpdGlvbjogLjNzO1xuICAgIHotaW5kZXg6IDk7XG5gO1xuXG5leHBvcnQgY29uc3QgTWVudUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIGRpdiB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAmID4gcCB7XG4gICAgICAgIHBhZGRpbmc6IDNweDtcbiAgICAgICAgYmFja2dyb3VuZDogIzQ0NDtcbiAgICAgICAgZm9udC1zaXplOiAxMHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB9XG5cbiAgICAudXAge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgdG9wOiAxcmVtO1xuICAgICAgICBwYWRkaW5nOiAuNXJlbTsgMXJlbTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xNTAlKTtcbiAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICAgICAgYm94LXNoYWRvdzogMCAwIDRweCAxcHggI2RkZDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE9wZW5NZW51ID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAxcmVtO1xuICAgIHJpZ2h0OiAxcmVtO1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgICB6LWluZGV4OiA5O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgIGJveC1zaGFkb3c6IDAgMCA0cHggMXB4ICNkZGQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG5gO1xuXG5leHBvcnQgY29uc3QgTG9nT3V0QnV0dG9uID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMTExO1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBVc2VyTGlzdCA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMCU7XG4gICAgcGFkZGluZzogMXJlbTtcblxuICAgICYgPiB1bCB7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcblxuICAgICAgICBsaSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG5cbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICM2NkRENjY7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IERldGFpbEJhY2tncm91bmQgPSBzdHlsZWQoJ2RpdicpYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgei1pbmRleDogMTI7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjQpO1xuICAgIGFuaW1hdGlvbjogJHtwYWRlSW59IC41cyBlYXNlLWluLW91dCAxO1xuYDtcbiIsImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7a2V5ZnJhbWVzfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmNvbnN0IHBhZGVMZWZ0VG9SaWdodCA9IGtleWZyYW1lc2BcbiAgICBmcm9tIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMCUpO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgfVxuYFxuXG5jb25zdCBwYWRlUmlnaHRUb0xlZnQgPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMCUpO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgfVxuYFxuXG5cbmV4cG9ydCBjb25zdCBDaGF0Um9vbSA9IHN0eWxlZC5kaXZgXG4gICAgaGVpZ2h0OiBjYWxjKDgwJSAtIDk4cHgpO1xuYDtcblxuZXhwb3J0IGNvbnN0IENoYXRGb3JtID0gc3R5bGVkLmZvcm1gXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDNweCAxMHB4O1xuXG4gICAgJiA+IGlucHV0IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmc6IC41cmVtO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQ2hhdCA9IHN0eWxlZC5saWBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogLjVyZW07XG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgYW5pbWF0aW9uOiAke3BhZGVMZWZ0VG9SaWdodH0gLjNzIGVhc2UtaW4tb3V0IDE7XG5cbiAgICAmID4gZGl2e1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG5cbiAgICAgICAgZGl2IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmYWZhZmE7XG4gICAgICAgICAgICBwYWRkaW5nOiAuNXJlbTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgIGNvbG9yOiAjMTExO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgICAgICAmOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBza2V3WCgzMGRlZyk7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE1cHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2Y4ZjhmODtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJiA+IHAge1xuICAgICAgICAgICAgZm9udC1zaXplOiA4cHg7XG4gICAgICAgICAgICBjb2xvcjogIzc3NztcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgICAgICAgICB3b3JkLWJyZWFrOiBrZWVwLWFsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYubXlDaGF0IHtcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgICBhbmltYXRpb246ICR7cGFkZVJpZ2h0VG9MZWZ0fSAuM3MgZWFzZS1pbi1vdXQgMTtcblxuICAgICAgICAmID4gZGl2IHtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcblxuICAgICAgICAgICAgZGl2IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjYzdlZmRmO1xuXG4gICAgICAgICAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAmOjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2tld1goLTMwZGVnKTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNjN2VmZGY7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICYgPiBwIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBTdGlja3lIZWFkZXIgPSBzdHlsZWQuZGl2YFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZmxleDogMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIHRvcDogMTRweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDhweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICAgIC0tc2FmLTA6IHJnYmEodmFyKC0tc2tfZm9yZWdyb3VuZF9sb3csIDI5LCAyOCwgMjkpLCAwLjEzKTtcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggdmFyKC0tc2FmLTApLCAwIDFweCAzcHggMCByZ2JhKDAsIDAsIDAsIDAuMDgpO1xuICAgIGJvcmRlci1yYWRpdXM6IDI0cHg7XG5gO1xuIiwiaW1wb3J0IHsgRGlzcGF0Y2gsIFNldFN0YXRlQWN0aW9uLCB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgSGFuZGxlciA9IChlOiBhbnkpID0+IHZvaWQ7XG50eXBlIFJldHVyblR5cGVzPFQgPSBhbnk+ID0gW1QsIEhhbmRsZXIsIERpc3BhdGNoPFNldFN0YXRlQWN0aW9uPFQ+Pl07XG5jb25zdCB1c2VJbnB1dCA9IDxUID0gYW55Pihpbml0aWFsVmFsdWU6IFQpOiBSZXR1cm5UeXBlczxUPiA9PiB7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShpbml0aWFsVmFsdWUpO1xuICAgIGNvbnN0IGhhbmRsZXIgPSB1c2VDYWxsYmFjaygoZSkgPT4ge1xuICAgICAgICBzZXRWYWx1ZShlLnRhcmdldC52YWx1ZSk7XG4gICAgfSwgW10pO1xuICAgIHJldHVybiBbdmFsdWUsIGhhbmRsZXIsIHNldFZhbHVlXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUlucHV0O1xuIiwiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIFJlZk9iamVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNXUkluZmluaXRlIH0gZnJvbSAnc3dyJztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5pbXBvcnQgbG9jYWxpemVkRm9ybWF0IGZyb20gJ2RheWpzL3BsdWdpbi9sb2NhbGl6ZWRGb3JtYXQnO1xuZGF5anMuZXh0ZW5kKGxvY2FsaXplZEZvcm1hdCk7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgU2Nyb2xsYmFycyB9IGZyb20gJ3JlYWN0LWN1c3RvbS1zY3JvbGxiYXJzJztcbmltcG9ydCB7IElVc2VyIH0gZnJvbSAnQHR5cGluZ3MvZGF0YXMnO1xuaW1wb3J0IGZldGNoZXIgZnJvbSAnQHV0aWxzL2ZldGNoZXInO1xuaW1wb3J0IHsgQ2hhdCwgQ2hhdEZvcm0sIENoYXRSb29tLCBTdGlja3lIZWFkZXIgfSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBjcmVhdGVTZWN0aW9uIGZyb20gJ0B1dGlscy9jcmVhdGVTZWN0aW9uJztcbmltcG9ydCB1c2VTb2NrZXQgZnJvbSAnQGhvb2tzL3VzZVNvY2tldCc7XG5pbXBvcnQgdXNlSW5wdXQgZnJvbSAnQGhvb2tzL3VzZUlucHV0JztcblxuY29uc3QgUEFHRV9TSVpFID0gMjA7XG5cbmludGVyZmFjZSBJQ2hhdEJveCB7XG4gICAgdXNlckRhdGE6IElVc2VyLFxuICAgIGJvYXJkOiBzdHJpbmdcbn1cblxuaW50ZXJmYWNlIElDaGF0IHtcbiAgICBpZDogbnVtYmVyLFxuICAgIHVzZXJJZDogbnVtYmVyLFxuICAgIHVzZXJuYW1lOiBzdHJpbmcsXG4gICAgY29udGVudDogc3RyaW5nLFxuICAgIGNyZWF0ZWRBdDogRGF0ZSxcbn1cblxuY29uc3QgQ2hhdEJveDpGQzxJQ2hhdEJveD4gPSAoeyB1c2VyRGF0YSwgYm9hcmQgfSkgPT4ge1xuICAgIGNvbnN0IFtzb2NrZXQsIGRpc2Nvbm5lY3RTb2NrZXRdID0gdXNlU29ja2V0KGJvYXJkKTtcbiAgICBjb25zdCB7IGRhdGE6Y2hhdERhdGEsIG11dGF0ZTptdXRhdGVDaGF0LCBzZXRTaXplIH0gPSB1c2VTV1JJbmZpbml0ZTxJQ2hhdFtdPihcbiAgICAgICAgKGluZGV4KSA9PiB1c2VyRGF0YSA/IGAvYXBpL2JvYXJkLyR7Ym9hcmR9L2NoYXRzP3BlclBhZ2U9JHtQQUdFX1NJWkV9JnBhZ2U9JHtpbmRleCArIDF9YCA6IG51bGwsXG4gICAgICAgIGZldGNoZXJcbiAgICApO1xuICAgIGNvbnN0IFtjaGF0LCBPQ0NoYXQsIHNldENoYXRdID0gdXNlSW5wdXQoJycpO1xuICAgIGNvbnN0IFtpc0ZpcnN0LCBzZXRJc0ZpcnN0XSA9IFJlYWN0LnVzZVN0YXRlKHRydWUpO1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3Qgc2Nyb2xsYmFyUmVmID0gdXNlUmVmPFNjcm9sbGJhcnM+KG51bGwpO1xuXG4gICAgY29uc3QgY2hhdFNlY3Rpb25zID0gY3JlYXRlU2VjdGlvbihjaGF0RGF0YSA/IChbXSBhcyBJQ2hhdFtdKS5jb25jYXQoLi4uY2hhdERhdGEpLnJldmVyc2UoKSA6IFtdKTtcblxuICAgIGNvbnN0IGlzRW1wdHkgPSBjaGF0RGF0YT8uWzBdPy5sZW5ndGggPT09IDA7XG4gICAgY29uc3QgaXNSZWFjaGluZ0VuZCA9IGlzRW1wdHkgfHwgKGNoYXREYXRhICYmIGNoYXREYXRhWzBdPy5sZW5ndGggPCBQQUdFX1NJWkUpO1xuXG4gICAgY29uc3Qgc3VibWl0TWVzc2FnZSA9IHVzZUNhbGxiYWNrKChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYgKGNoYXQ/LnRyaW0oKSAmJiBjaGF0RGF0YSAmJiB1c2VyRGF0YSkge1xuICAgICAgICAgICAgY29uc3Qgc2F2ZWRDaGF0ID0gY2hhdDtcbiAgICAgICAgICAgIG11dGF0ZUNoYXQoKHByZXZDaGF0RGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIHByZXZDaGF0RGF0YVswXS51bnNoaWZ0KHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IChjaGF0RGF0YVswXVswXT8uaWQgfHwgMCkgKyAxLFxuICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJEYXRhLmlkLFxuICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlckRhdGEudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHNhdmVkQ2hhdCxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBwcmV2Q2hhdERhdGE7XG4gICAgICAgICAgICB9LCBmYWxzZSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgc2V0Q2hhdCgnJyk7XG4gICAgICAgICAgICAgICAgaWYgKHNjcm9sbGJhclJlZi5jdXJyZW50KVxuICAgICAgICAgICAgICAgICAgICBzY3JvbGxiYXJSZWYuY3VycmVudC5zY3JvbGxUb0JvdHRvbSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBheGlvcy5wb3N0KGAvYXBpL2JvYXJkLyR7Ym9hcmR9L2NoYXRgLCB7XG4gICAgICAgICAgICAgICAgY29udGVudDogc2F2ZWRDaGF0LFxuICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlckRhdGEuaWQsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJEYXRhLnVzZXJuYW1lXG4gICAgICAgICAgICB9KS5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgICAgICAgfVxuICAgIH0sIFt1c2VyRGF0YSwgY2hhdF0pO1xuXG4gICAgY29uc3Qgb25LZXlkb3duQ2hhdCA9IHVzZUNhbGxiYWNrKChlKSA9PiB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICAgICAgaWYgKCFlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHN1Ym1pdE1lc3NhZ2UoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBbY2hhdF0pO1xuXG4gICAgY29uc3Qgb25NZXNzYWdlID0gKGRhdGE6IElDaGF0KSA9PiB7XG4gICAgICAgIGlmICh1c2VyRGF0YSAmJiBkYXRhLnVzZXJJZCAhPT0gdXNlckRhdGE/LmlkKSB7XG4gICAgICAgICAgICBtdXRhdGVDaGF0KChjaGF0RGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIGNoYXREYXRhWzBdLnVuc2hpZnQoZGF0YSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoYXREYXRhO1xuICAgICAgICAgICAgfSwgZmFsc2UpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXQgbmV3IE1lc3NhZ2UnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IG9uU2Nyb2xsID0gdXNlQ2FsbGJhY2soXG4gICAgICAgICh2YWx1ZXMpID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZXMuc2Nyb2xsVG9wID09PSAwICYmICFpc1JlYWNoaW5nRW5kICYmICFpc0VtcHR5ICkge1xuICAgICAgICAgICAgICAgIHNldFNpemUoKHNpemUpID0+IHNpemUgKyAxKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsYmFyUmVmLmN1cnJlbnQ/LnNjcm9sbFRvcChzY3JvbGxiYXJSZWYuY3VycmVudD8uZ2V0U2Nyb2xsSGVpZ2h0KCkgLSB2YWx1ZXMuc2Nyb2xsSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgW3Njcm9sbGJhclJlZiwgaXNSZWFjaGluZ0VuZCwgaXNFbXB0eV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc29ja2V0Py5vbihcIm5ld0NoYXRcIiwgb25NZXNzYWdlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHNvY2tldD8ub2ZmKCduZXdDaGF0Jywgb25NZXNzYWdlKTtcbiAgICAgICAgfTtcbiAgICB9LCBbc29ja2V0LCB1c2VyRGF0YV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGNoYXREYXRhPy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIHNjcm9sbGJhclJlZi5jdXJyZW50Py5zY3JvbGxUb0JvdHRvbSgpO1xuICAgICAgICAgICAgc2V0SXNGaXJzdChmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9LCBbY2hhdERhdGEsIGlzUmVhY2hpbmdFbmQsIGlzRW1wdHldKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8cD7tmITsnqwg7KCR7IaN7ZWcIOyCrOuejOuTpOqzvCDssYTtjIXsnYQg7ZWgIOyImCDsnojsirXri4jri6QuPC9wPlxuICAgICAgICAgICAgPENoYXRSb29tPlxuICAgICAgICAgICAgICAgIDxTY3JvbGxiYXJzXG4gICAgICAgICAgICAgICAgICAgIGF1dG9IaWRlXG4gICAgICAgICAgICAgICAgICAgIHJlZj17c2Nyb2xsYmFyUmVmfVxuICAgICAgICAgICAgICAgICAgICBvblNjcm9sbEZyYW1lPXtvblNjcm9sbH1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3toZWlnaHQ6IFwiMTAwJVwiLCBvdmVyZmxvdzogJ2F1dG8nfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtPYmplY3QuZW50cmllcyhjaGF0U2VjdGlvbnMpLm1hcCgoW2RhdGUsIGNoYXRzXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBrZXk9e2RhdGV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3RpY2t5SGVhZGVyPntkYXRlfTwvU3RpY2t5SGVhZGVyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNoYXRzLm1hcChjID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDaGF0IGtleT17KGMuaWQpfSBjbGFzc05hbWU9e2Ake2MudXNlcklkID09PSB1c2VyRGF0YT8uaWQgPyAnbXlDaGF0JyA6ICcnIH1gfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD57Yy51c2VybmFtZX08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj57Yy5jb250ZW50fTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD57ZGF5anMoYy5jcmVhdGVkQXQpLmRpZmYobm93LCAnZGF5JykgPiAtMSA/IGRheWpzKGMuY3JlYXRlZEF0KS5mb3JtYXQoJ0xUJykgOiBkYXlqcyhjLmNyZWF0ZWRBdCkuZm9ybWF0KCdZWVlZ64WEIE1N7JuUIERE7J28Jyl9PC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9DaGF0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgIDwvU2Nyb2xsYmFycz5cbiAgICAgICAgICAgIDwvQ2hhdFJvb20+XG4gICAgICAgICAgICA8Q2hhdEZvcm1cbiAgICAgICAgICAgICAgICBvblN1Ym1pdD17c3VibWl0TWVzc2FnZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y2hhdH1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e09DQ2hhdH1cbiAgICAgICAgICAgICAgICAgICAgb25LZXlQcmVzcz17b25LZXlkb3duQ2hhdH1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCLsnbTqs7Psl5Ag7LGE7YyF7J2EIOyeheugpe2VtOyjvOyEuOyalFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvQ2hhdEZvcm0+XG4gICAgICAgIDwvPlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoYXRCb3g7XG4iLCJpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnO1xuXG5pbnRlcmZhY2UgUHJvcHMge1xuICAgIGlkOiBudW1iZXIsXG4gICAgdXNlcklkOiBudW1iZXIsXG4gICAgdXNlcm5hbWU6IHN0cmluZyxcbiAgICBjb250ZW50OiBzdHJpbmcsXG4gICAgY3JlYXRlZEF0OiBEYXRlLFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtYWtlU2VjdGlvbjxUIGV4dGVuZHMgUHJvcHM+KGNoYXRMaXN0OiBUW10pIHtcbiAgICBjb25zdCBzZWN0aW9uczogeyBba2V5OiBzdHJpbmddOiBUW10gfSA9IHt9O1xuICAgIGNoYXRMaXN0LmZvckVhY2goKGNoYXQpID0+IHtcbiAgICAgICAgY29uc3QgbW9udGhEYXRlID0gZGF5anMoY2hhdC5jcmVhdGVkQXQpLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzZWN0aW9uc1ttb250aERhdGVdKSkge1xuICAgICAgICAgICAgc2VjdGlvbnNbbW9udGhEYXRlXS5wdXNoKGNoYXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VjdGlvbnNbbW9udGhEYXRlXSA9IFtjaGF0XTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzZWN0aW9ucztcbn1cbiIsImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGtleWZyYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcblxudHlwZSBNZW51UG9zaXRpb24gPSB7XG4gICAgeDogbnVtYmVyLFxuICAgIHk6IG51bWJlcixcbiAgICBjbGlja2VkOiBib29sZWFuLFxuICAgIGRpc3A6IGJvb2xlYW5cbn1cblxudHlwZSBCb3hQb3NpdGlvbiA9IHtcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXIsXG59XG5cbnR5cGUgTm90ZVByb3BzID0ge1xuICAgIHNyYzogc3RyaW5nXG59XG5cbmNvbnN0IGFwcGVyTWVudSA9IGtleWZyYW1lc2BcbiAgICBmcm9tIHtcbiAgICAgICAgbWF4LXdpZHRoOiAwO1xuICAgICAgICBtYXgtaGVpZ2h0OiAwO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuICAgIH1cbmBcblxuY29uc3QgZGlzYXBwZXJNZW51ID0ga2V5ZnJhbWVzYFxuICAgIGZyb20ge1xuICAgICAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgICAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICBtYXgtd2lkdGg6IDBweDtcbiAgICAgICAgbWF4LWhlaWdodDogMHB4XG4gICAgfVxuYFxuXG5jb25zdCBwYWRlSW4gPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG5gXG5cbmNvbnN0IHBhZGVMZWZ0VG9SaWdodCA9IGtleWZyYW1lc2BcbiAgICBmcm9tIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMCUpO1xuICAgIH1cbiAgICB0byB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgfVxuYFxuXG5jb25zdCBlbmxhcmdlID0ga2V5ZnJhbWVzYFxuICAgIDAlIHtcbiAgICAgICAgd2lkdGg6IDAlO1xuICAgICAgICBoZWlnaHQ6IDAlO1xuICAgIH1cbiAgICA1MCUge1xuICAgICAgICB3aWR0aDogMzAlO1xuICAgICAgICBoZWlnaHQ6IDMwJTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuYFxuXG5leHBvcnQgY29uc3QgS29udmFDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgdHJhbnNpdGlvbjogLjNzO1xuYDtcblxuZXhwb3J0IGNvbnN0IFdhcm5NZXNzYWdlID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuNik7XG4gICAgei1pbmRleDogNTA7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGNvbG9yOiAjZmY1NTU1O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG5gO1xuXG5leHBvcnQgY29uc3QgRGV0YWlsQmFja2dyb3VuZCA9IHN0eWxlZCgnZGl2JylgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHotaW5kZXg6IDEyO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC40KTtcbiAgICBhbmltYXRpb246ICR7cGFkZUlufSAuNXMgZWFzZS1pbi1vdXQgMTtcbmA7XG5cblxuZXhwb3J0IGNvbnN0IERldGFpbFdpbmRvdyA9IHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogNDAwcHg7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuODUpO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IDEzO1xuICAgIHRyYW5zaXRpb246IC4zcztcbiAgICBjb2xvcjogI2ZmZjtcbmA7XG5cbmV4cG9ydCBjb25zdCBEZXRhaWxCb3ggPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogNHJlbTtcbiAgICBvdmVyZmxvdzogYXV0bztcblxuICAgICYgPiBkaXYge1xuICAgICAgICBtYXJnaW46IDFyZW0gMDtcbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9wRml4Q29udGVudCA9IHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5gO1xuXG5leHBvcnQgY29uc3QgQm90dG9tRml4Q29udGVudCA9IHN0eWxlZCgnZGl2JylgXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGJvdHRvbTogMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgaGVpZ2h0OiA0cmVtO1xuICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgcGFkZGluZzogMXJlbSAuNXJlbTtcblxuICAgICYgPiBpbnB1dCB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDQwMHB4IC0gNHJlbSk7XG4gICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCAjZmZmZmZmO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLjVyZW07XG4gICAgfVxuXG4gICAgJiA+IGRpdiB7XG4gICAgICAgIHdpZHRoOiAycmVtO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjcmFkaWFsLWdyYWRpZW50KGVsbGlwc2UgYXQgYm90dG9tLCAjMDAyNTM0IDAlLCAjMDkwYTBmIDEwMCUpIG5vLXJlcGVhdDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgdHJhbnNpdGlvbjogLjNzO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgIGZpbGw6ICNmZmY7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVXNlckluZm8gPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNnJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgJiA+IGltZyB7XG4gICAgICAgIHdpZHRoOiA1cmVtO1xuICAgICAgICBoZWlnaHQ6IDVyZW07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICB9XG5cbiAgICAmID4gcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFVEQnV0dG9uQm94ID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgICAmID4gYnV0dG9uIHtcbiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbmA7XG5cblxuZXhwb3J0IGNvbnN0IE1vbWVudEJveCA9IHN0eWxlZC5kaXZgXG4gICAgbWFyZ2luLXRvcDogLjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcblxuICAgICYgPiBkaXYge1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiAjZDVkNWQ1O1xuXG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC41cmVtO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgRGV0YWlsQ29udGVudEJveCA9IHN0eWxlZC5kaXZgXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgbWFyZ2luLXRvcDogLjVyZW07XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICYgPiBwcmUge1xuICAgICAgICBwYWRkaW5nOiAxcmVtIC41cmVtO1xuICAgICAgICB3aGl0ZS1zcGFjZTogYnJlYWstc3BhY2VzO1xuICAgIH1cblxuICAgICYgPiBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAmID4gaDIge1xuICAgICAgICBtYXJnaW46IDAgLjVyZW07XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMCAuNXJlbSAwO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgICB9XG5cbiAgICAmID4gZGl2IHtcbiAgICAgICAgcGFkZGluZzogMXJlbTtcbiAgICB9XG5gO1xuXG5cbmV4cG9ydCBjb25zdCBFZGl0QXJlYSA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgJiA+IHRleHRhcmVhIHtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDUwcHgpO1xuICAgICAgICByZXNpemU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IC41cmVtO1xuICAgIH1cblxuICAgICYgPiBpbnB1dCB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA1MHB4KTtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICBwYWRkaW5nOiAuNXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgRWRpdEJ1dHRvbkJveCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLy8gYm9yZGVyLXJhZGl1czogMCA1cHggNXB4IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgIC5idXR0b24ge1xuICAgICAgICBoZWlnaHQ6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZDogIzc3NztcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgICYuZWRpdCB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDFiYWJjO1xuICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgSW1hZ2VCb3ggPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNTBweCk7XG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcblxuICAgICYgPiBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAudGVtcCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDZyZW07XG4gICAgICAgIGJhY2tncm91bmQ6ICNlZWU7XG4gICAgfVxuYDtcblxuXG5leHBvcnQgY29uc3QgQ29tbWVudEJveCA9IHN0eWxlZC5kaXZgXG5gO1xuXG5leHBvcnQgY29uc3QgQ29tbWVudCA9IHN0eWxlZC5kaXZgXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtaW4taGVpZ2h0OiAzcmVtO1xuICAgIG1hcmdpbi1ib3R0b206IC41cmVtO1xuICAgIGFuaW1hdGlvbjogJHtwYWRlTGVmdFRvUmlnaHR9IC41cyBlYXNlLWluLW91dCAxO1xuXG4gICAgJiA+IGltZyB7XG4gICAgICAgIHdpZHRoOiAzcmVtO1xuICAgICAgICBoZWlnaHQ6IDNyZW07XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICB9XG5cbiAgICAuY29udGVudCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAmID4gZGl2XG4gICAgICAgIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcblxuICAgICAgICAgICAgZGl2IHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjhmOGY4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNXJlbTtcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICAgICAgICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2tld1goMzBkZWcpO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTVweDtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjhmOGY4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmID4gcCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICM3Nzc7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC4zcmVtO1xuICAgICAgICAgICAgICAgIHdpZHRoOiA4cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE1lbnVCb3ggPSBzdHlsZWQoJ2RpdicpPE1lbnVQb3NpdGlvbj5gXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC44NSk7XG4gICAgZGlzcGxheTogJHtwcm9wcyA9PiBwcm9wcy5kaXNwID8gJ2Jsb2NrJyA6ICdub25lJ307XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBjb2xvcjogI2VmZWZlZjtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDhweCAxcHggcmdiKDAsIDAsIDApO1xuICAgIG1heC13aWR0aDogJHtwcm9wcyA9PiBwcm9wcy5jbGlja2VkID8gJzIwMHB4JyA6ICcwcHgnfTtcbiAgICBtYXgtaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmNsaWNrZWQgPyAnMjAwcHgnIDogJzBweCd9O1xuICAgIHRvcDogJHsgcHJvcHMgPT4gcHJvcHMueSB9O1xuICAgIGxlZnQ6ICR7IHByb3BzID0+IHByb3BzLnggfTtcbiAgICBhbmltYXRpb246ICR7IHByb3BzID0+IHByb3BzLmNsaWNrZWQgPyBhcHBlck1lbnUgOiBkaXNhcHBlck1lbnUgfSAuM3MgZWFzZS1pbi1vdXQgMTtcbiAgICB6LWluZGV4OiAxMDtcbilgXG5cbmV4cG9ydCBjb25zdCBNZW51QXR0ciA9IHN0eWxlZC5kaXZgXG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDIwLCAyMCwgMjAsIC41KTtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgcGFkZGluZzogLjVyZW07XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICAgIHBhZGRpbmc6IC4zcmVtO1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBDb21wb25lbnRCb3ggPSBzdHlsZWQoJ2RpdicpPEJveFBvc2l0aW9uPmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMud2lkdGh9O1xuICAgIGhlaWdodDogJHtwcm9wcyA9PiBwcm9wcy5oZWlnaHR9O1xuICAgIGxlZnQ6ICR7cHJvcHMgPT4gcHJvcHMueH07XG4gICAgdG9wOiAke3Byb3BzID0+IHByb3BzLnl9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICB6LWluZGV4OiA0O1xuICAgIHBhZGRpbmc6IDJweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBBbHRCb3ggPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuOCk7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGNvbG9yOiAjZmZmO1xuXG4gICAgJiA+IGRpdiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRleHRDb21wb25lbnQgPSBzdHlsZWQoJ3ByZScpYFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDRweCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAuMyk7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuNzUpO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGFuaW1hdGlvbjogJHtlbmxhcmdlfSAuM3MgZWFzZS1pbi1vdXQgMTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICB3aGl0ZS1zcGFjZTogYnJlYWstc3BhY2VzO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAyMHB4IDNweCByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zKTtcbiAgICAgICAgei1pbmRleDogNTtcblxuICAgICAgICAuYWx0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAgICAgZm9udC1zaXplOiA4cHg7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEltYWdlQ29tcG9uZW50ID0gc3R5bGVkKCdkaXYnKWBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJveC1zaGFkb3c6IDAgMCA0cHggMXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjMpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGFuaW1hdGlvbjogJHtlbmxhcmdlfSAuM3MgZWFzZS1pbi1vdXQgMTtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogOHB4O1xuICAgIH1cbiAgICAmID4gaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAyMHB4IDNweCByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zKTtcbiAgICAgICAgei1pbmRleDogNTtcbiAgICAgICAgLmFsdCB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICB9XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE5vdGVDb21wb25lbnQgPSBzdHlsZWQoJ2RpdicpPE5vdGVQcm9wcz5gXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIC4zKTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYW5pbWF0aW9uOiAke2VubGFyZ2V9IC4zcyBlYXNlLWluLW91dCAxO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAke3Byb3BzID0+IHByb3BzLnNyYyA/ICd1cmwoXFwnJytwcm9wcy5zcmMrJ1xcJykgbm8tcmVwZWF0IGNlbnRlcicgOiAncmdiYSgwLCAwLCAwLCAuNzUpJ307XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYm94LXNoYWRvdzogMCAwIDIwcHggM3B4IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjMpO1xuICAgICAgICB6LWluZGV4OiA1O1xuICAgICAgICAuYWx0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmhlYWQge1xuICAgICAgICB0ZXh0LXNoYWRvdzogJHtwcm9wcyA9PiBwcm9wcy5zcmMgPyAnMCAxcHggNXB4ICMwMDAnIDogJ25vbmUnfTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogLjVyZW07XG4gICAgICAgIHdoaXRlLXNwYWNlOiBicmVhay1zcGFjZXM7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgZGl2LmhlYWQge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogOHB4O1xuICAgICAgICBkaXYuaGVhZCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJiA+IHByZSB7XG4gICAgICAgIHRleHQtc2hhZG93OiAke3Byb3BzID0+IHByb3BzLnNyYyA/ICcwIDFweCA1cHggIzAwMCcgOiAnbm9uZSd9O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgd2hpdGUtc3BhY2U6IGJyZWFrLXNwYWNlcztcbiAgICB9XG5gO1xuXG5cbmV4cG9ydCBjb25zdCBPbk1vZGVBbHQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB6LWluZGV4OiAyMTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwYWRkaW5nOiAuNXJlbTsgMXJlbTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHRyYW5zaXRpb246IC4zcztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG5cbiAgICAmLnJlc2l6ZSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuXG4gICAgJiA+IGltZyB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIH1cblxuICAgICYgPiBzcGFuIHtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMXJlbTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgJiA+IGltZyB7IG1hcmdpbi1sZWZ0OiAuNXJlbTsgfVxuICAgICAgICAmID4gc3BhbiB7XG4gICAgICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgUmVzaXplUmVtb3RlID0gc3R5bGVkLmRpdmBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAmID4gc3BhbiB7XG4gICAgICAgIHdpZHRoOiA0cmVtO1xuICAgIH1cblxuICAgICYgPiBidXR0b24ge1xuICAgICAgICB3aWR0aDogMS41cmVtO1xuICAgICAgICBoZWlnaHQ6IDEuNXJlbTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyXG4gICAgfVxuXG4gICAgYnV0dG9uLmRlY3JlYXNlIGltZ3tcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICB9XG5cbiAgICAmID4gZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiKDMyLCAxNzgsIDE3MCk7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAzcHggMXB4IHJnYigzMiwgMTc4LCAxNzApO1xuICAgICAgICB3aWR0aDogMS41cmVtO1xuICAgICAgICBoZWlnaHQ6IDEuNXJlbTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgIH1cblxuICAgICY6bnRoLW9mLXR5cGUoMikge1xuICAgICAgICBtYXJnaW4tdG9wOiAuNXJlbTtcbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgQm9hcmRGb290ZXIgPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjYpO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjEpO1xuYDtcblxuXG5leHBvcnQgY29uc3QgRWRpdEltYWdlSW5wdXQgPSBzdHlsZWQuZGl2YFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwYWRkaW5nOiAuNXJlbSAxcmVtO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGhlaWdodDogMnJlbTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAmID4gc3ZnIHtcbiAgICAgICAgZmlsbDogI2ZmZjtcbiAgICAgICAgaGVpZ2h0OiAycmVtO1xuICAgIH1cbmA7XG4iLCJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5cbmV4cG9ydCB0eXBlIG9mZnNldCA9IHtcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXJcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgYm94UHJvcHMge1xuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXIsXG4gICAgd2lkdGg6IG51bWJlcixcbiAgICBoZWlnaHQ6IG51bWJlcixcbiAgICBvZmZzZXQ6IG9mZnNldCxcbiAgICBib2FyZDogc3RyaW5nLFxuICAgIGluaXRTdGF0ZXM6ICgpID0+IHZvaWQsXG4gICAgdG9hc3Q6IGFueVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN3aXRjaFByb3BzIHtcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIGNhdGVnb3J5OiBudW1iZXIsXG4gICAgb2Zmc2V0OiBvZmZzZXRcbn1cblxudHlwZSBDb250YWluZXIgPSB7XG4gICAgd2lkdGg6IG51bWJlcixcbiAgICBoZWlnaHQ6IG51bWJlcixcbiAgICB4OiBudW1iZXIsXG4gICAgeTogbnVtYmVyLFxufVxuXG50eXBlIEJveCA9IHtcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxufVxuXG50eXBlIFJlY3RTaXplID0ge1xuICAgIHNpemU6IG51bWJlclxufVxuXG50eXBlIEJ1dHRvbkJveCA9IHtcbiAgICBzaXplOiBudW1iZXIsXG4gICAgcmlnaHQ6IG51bWJlcixcbn1cblxudHlwZSBJbWFnZVByb3BzID0ge1xuICAgIHNyYzogc3RyaW5nIHwgbnVsbCxcbn1cblxuY29uc3QgZW5sYXJnZSA9IGtleWZyYW1lc2BcbiAgICAwJSB7XG4gICAgICAgIHdpZHRoOiAwO1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgfVxuICAgIDMwJSB7XG4gICAgICAgIHdpZHRoOiAxMCU7XG4gICAgICAgIGhlaWdodDogMTAlO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG5gXG5cbmV4cG9ydCBjb25zdCBBZGRDb250YWluZXIgPSBzdHlsZWQoJ2RpdicpPENvbnRhaW5lcj5gXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHRvcDogJHtwcm9wcyA9PiBwcm9wcy55ICsgNX07XG4gICAgbGVmdDogJHtwcm9wcyA9PiBwcm9wcy54ICsgNX07XG4gICAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMud2lkdGggLSAxMH07XG4gICAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLmhlaWdodCAtIDEwfTtcbiAgICB6LWluZGV4OiA2O1xuYDtcblxuZXhwb3J0IGNvbnN0IEFkZEJveCA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIC41KTtcbiAgICBjb2xvcjogIzAwMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBhbmltYXRpb246ICR7ZW5sYXJnZX0gLjNzIGVhc2UtaW4tb3V0IDE7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgJi5ub3RlIHtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIH1cbiAgICAmID4gaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBTdWJtaXRCdXR0b24gPSBzdHlsZWQoJ2RpdicpPEJ1dHRvbkJveD5gXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMucmlnaHR9O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICB3aWR0aDogJHtwcm9wcyA9PiBwcm9wcy5zaXplIC0gMTB9O1xuICAgIGhlaWdodDogJHtwcm9wcyA9PiBwcm9wcy5zaXplIC0gMTB9O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgke3Byb3BzID0+IHByb3BzLnJpZ2h0ID09PSAtNSA/ICcxMDAlJyA6ICcwJ30pO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjMDFiYWJjO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJveC1zaGFkb3c6IDAgMCA0cHggMXB4IHJnYmEoMSwgMTg2LCAxODgsIC43KTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcGFkZGluZzogMnB4O1xuXG4gICAgJiA+IHN2ZyB7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgZmlsbDogI2ZmZjtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEltYWdlSW5wdXRCdXR0b24gPSBzdHlsZWQoJ2RpdicpPEJ1dHRvbkJveD5gXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICByaWdodDogJHtwcm9wcyA9PiBwcm9wcy5yaWdodH07XG4gICAgdG9wOiAke3Byb3BzID0+IHByb3BzLnNpemUgfTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHtwcm9wcyA9PiBwcm9wcy5yaWdodCA9PT0gLTUgPyAnMTAwJScgOiAnMCd9KTtcbiAgICB3aWR0aDogJHtwcm9wcyA9PiBwcm9wcy5zaXplIC0gMTB9O1xuICAgIGhlaWdodDogJHtwcm9wcyA9PiBwcm9wcy5zaXplIC0gMTB9O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZDogIzM0NTY4QjtcbiAgICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCByZ2JhKDUyLCA4NiwgMTM5LCAuNyk7XG4gICAgcGFkZGluZzogMnB4O1xuXG4gICAgJiA+IHN2ZyB7XG4gICAgICAgIGZpbGw6ICNmZmY7XG4gICAgICAgIGhlaWdodDogMjBweDtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRleHRBcmVhID0gc3R5bGVkLnRleHRhcmVhYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8vIGhlaWdodDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICAvLyBib3JkZXItcmFkaXVzOiAwIDAgNXB4IDVweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgcGFkZGluZzogMDtcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICByZXNpemU6IG5vbmU7XG4gICAgcGFkZGluZzogNXB4O1xuYDtcblxuZXhwb3J0IGNvbnN0IEltYWdlQWRkQm94ID0gc3R5bGVkLmRpdmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdvcmQtYnJlYWs6IGtlZXAtYWxsO1xuXG4gICAgJiA+IGltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IE5vdGVBZGRCb3ggPSBzdHlsZWQoJ2RpdicpPEltYWdlUHJvcHM+YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWd0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBiYWNrZ3JvdW5kOiAke3Byb3BzID0+IHByb3BzLnNyYyA/ICd1cmwoXFwnJytwcm9wcy5zcmMrJ1xcJykgbm8tcmVwZWF0IGNlbnRlcicgOiAnI2ZmZid9O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBhbmltYXRpb246ICR7ZW5sYXJnZX0gLjNzIGVhc2UtaW4tb3V0IDE7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5zcmMgPyAnI2ZmZicgOiAnMDAwJ30gIWltcG9ydGFudDtcblxuICAgICYgPiBkaXYge1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICB9XG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG5cbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSwgdGV4dGFyZWEge1xuICAgICAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy5zcmMgPyAnI2ZmZicgOiAnIzAwMCd9ICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtc2hhZG93OiAke3Byb3BzID0+IHByb3BzLnNyYyA/ICcwIDNweCAxMHB4ICMwMDAnIDogJ25vbmUnfTtcbiAgICB9XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgICB0ZXh0YXJlYSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxNDJ4O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgZm9udC1zaXplOiA4cHg7XG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgICAgIH1cbiAgICB9XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRCb3ggPSBzdHlsZWQoJ2RpdicpPFJlY3RTaXplPmBcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMuc2l6ZX07XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAmID4gdGV4dGFyZWEge1xuICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBJbnB1dEFyZWEgPSBzdHlsZWQuaW5wdXRgXG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGJhY2tncm91bmQ6IGluaGVyaXQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogaW5oZXJpdCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFdhcm5Cb3ggPSBzdHlsZWQuZGl2YFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC44KTtcbiAgICBjb2xvcjogcmVkO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VSZWYsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VTb2NrZXQgZnJvbSAnQGhvb2tzL3VzZVNvY2tldCc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHtcbiAgICBib3hQcm9wcyxcbiAgICBTdWJtaXRCdXR0b24sXG4gICAgSW1hZ2VJbnB1dEJ1dHRvbixcbiAgICBJbWFnZUFkZEJveCxcbiAgICBBZGRDb250YWluZXIsXG4gICAgQWRkQm94LFxuICAgIFdhcm5Cb3hcbn0gZnJvbSAnLi4vYWRkU3R5bGUnO1xuaW1wb3J0IHsgUmVkaXJlY3QgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW50ZXJmYWNlIFVwbG9hZFByb3BzIHtcbiAgICBsb2FkaW5nOiBib29sZWFuLFxuICAgIHN1Y2Nlc3M6IGJvb2xlYW4sXG4gICAgaW1hZ2VVUkw6IHN0cmluZyxcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG59XG5cbmNvbnN0IFRleHRBZGQ6IEZDPGJveFByb3BzPiA9ICh7IHRvYXN0LCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCBvZmZzZXQsIGluaXRTdGF0ZXMsIGJvYXJkIH0pID0+IHtcbiAgICBjb25zdCBpbWFnZUlucHV0ID0gdXNlUmVmKCkgYXMgUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MSW5wdXRFbGVtZW50PjtcbiAgICBjb25zdCBbdXBsb2FkaW5nLCBzZXRVcGxvYWRpbmddID0gdXNlU3RhdGU8VXBsb2FkUHJvcHM+KHtcbiAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBpbWFnZVVSTDogJycsXG4gICAgICAgIG1lc3NhZ2U6ICcnLFxuICAgIH0pO1xuXG5cdGNvbnN0IG9uQ2xpY2tJbWFnZVVwbG9hZCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcblx0XHRpbWFnZUlucHV0LmN1cnJlbnQuY2xpY2soKTtcbiAgICB9LCBbaW1hZ2VJbnB1dC5jdXJyZW50XSk7XG5cbiAgICBjb25zdCBvbkNoYW5nZUltZyA9IHVzZUNhbGxiYWNrKCBhc3luYyAoZSkgPT4ge1xuXHRcdGNvbnN0IGltYWdlRm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgaW1hZ2VGb3JtRGF0YS5hcHBlbmQoJ2ltYWdlJywgZS50YXJnZXQuZmlsZXNbMF0pO1xuICAgICAgICBhd2FpdCBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgLi4udXBsb2FkaW5nLFxuICAgICAgICAgICAgbG9hZGluZzogdHJ1ZVxuICAgICAgICB9KTtcblx0XHRhd2FpdCBheGlvcy5wb3N0KCcvYXBpL3VwbG9hZEltYWdlJywgaW1hZ2VGb3JtRGF0YSkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgICAgICAuLi51cGxvYWRpbmcsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpbWFnZVVSTDogcmVzLmRhdGEudXJsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLnJlc3BvbnNlLmRhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuXHR9LCBbXSk7XG5cbiAgICBjb25zdCBzdWJtaXRJbWFnZSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICAgIH0pXG4gICAgICAgIGF3YWl0IGF4aW9zLnBvc3QoYC9hcGkvYm9hcmQvJHtib2FyZH0vd3JpdGUvaW1hZ2VgLCB7XG4gICAgICAgICAgICB1cmw6IHVwbG9hZGluZy5pbWFnZVVSTCxcbiAgICAgICAgICAgIHg6IG9mZnNldC54LFxuICAgICAgICAgICAgeTogb2Zmc2V0LnksXG4gICAgICAgICAgICB3aWR0aDogb2Zmc2V0LndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBvZmZzZXQuaGVpZ2h0LFxuICAgICAgICB9KS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAyKSB7XG4gICAgICAgICAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgICAgICAgICAgLi4udXBsb2FkaW5nLFxuICAgICAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzLmRhdGEucmVhc29uXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXRVcGxvYWRpbmcoeyAuLi51cGxvYWRpbmcsIG1lc3NhZ2U6ICcnfSk7XG4gICAgICAgICAgICAgICAgfSwgMjAwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRvYXN0LmRhcmsoYOuCqOydgCDsubjsnYAgJHtyZXMuZGF0YX3subgg7J6F64uI64ukLmApO1xuICAgICAgICAgICAgaW5pdFN0YXRlcygpO1xuICAgICAgICB9KS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYWxlcnQoJ+uhnOq3uOyduOydhCDtlbTso7zshLjsmpQuJyk7XG4gICAgICAgICAgICAgICAgPFJlZGlyZWN0IHRvPVwiL2F1dGhcIiAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgICAgICAuLi51cGxvYWRpbmcsXG4gICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZS5yZXNwb25zZS5kYXRhLnJlYXNvblxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgfSwgW3VwbG9hZGluZ10pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEFkZENvbnRhaW5lciB5PXt5fSB4PXt4fSB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fT5cbiAgICAgICAgICAgIHsgdXBsb2FkaW5nLm1lc3NhZ2UgPT09ICcnID9cbiAgICAgICAgICAgICAgICA8QWRkQm94PlxuICAgICAgICAgICAgICAgICAgICB7IHVwbG9hZGluZy5pbWFnZVVSTCA9PT0gJycgP1xuICAgICAgICAgICAgICAgICAgICAgICAgPEltYWdlQWRkQm94PuyYpOuluOyqvSDrsoTtirzsnYQg7YG066at7ZW07IScIOyCrOynhOydhCDsl4XroZzrk5ztlbTso7zshLjsmpQuPC9JbWFnZUFkZEJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt1cGxvYWRpbmcuaW1hZ2VVUkx9IC8+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPFN1Ym1pdEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT17d2lkdGggLyBvZmZzZXQud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtzdWJtaXRJbWFnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0PXtvZmZzZXQueCArIG9mZnNldC53aWR0aCA8IDMyID8gLTUgOiB3aWR0aH1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgd2lkdGg9XCIyNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMCAwaDI0djI0SDB6XCIgZmlsbD1cIm5vbmVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMi4wMSAyMUwyMyAxMiAyLjAxIDMgMiAxMGwxNSAyLTE1IDJ6XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICA8L1N1Ym1pdEJ1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPEltYWdlSW5wdXRCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tJbWFnZVVwbG9hZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9e3dpZHRoIC8gb2Zmc2V0LndpZHRofVxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ9e29mZnNldC54ICsgb2Zmc2V0LndpZHRoIDwgMzIgPyAtNSA6IHdpZHRofVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3ZnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsbD1cImJsYWNrXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjE4cHhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD1cIjE4cHhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMCAwaDI0djI0SDB6XCIgZmlsbD1cIm5vbmVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMCAwaDI0djI0SDBWMHpcIiBmaWxsPVwibm9uZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xOCAxM3Y3SDRWNmg1LjAyYy4wNS0uNzEuMjItMS4zOC40OC0ySDRjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJ2LTVsLTItMnptLTEuNSA1aC0xMWwyLjc1LTMuNTMgMS45NiAyLjM2IDIuNzUtMy41NHptMi44LTkuMTFjLjQ0LS43LjctMS41MS43LTIuMzlDMjAgNC4wMSAxNy45OSAyIDE1LjUgMlMxMSA0LjAxIDExIDYuNXMyLjAxIDQuNSA0LjQ5IDQuNWMuODggMCAxLjctLjI2IDIuMzktLjdMMjEgMTMuNDIgMjIuNDIgMTIgMTkuMyA4Ljg5ek0xNS41IDlDMTQuMTIgOSAxMyA3Ljg4IDEzIDYuNVMxNC4xMiA0IDE1LjUgNCAxOCA1LjEyIDE4IDYuNSAxNi44OCA5IDE1LjUgOXpcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2VwdD1cIi5naWYsIC5qcGcsIC5wbmdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17aW1hZ2VJbnB1dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VJbWd9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L0ltYWdlSW5wdXRCdXR0b24+XG4gICAgICAgICAgICAgICAgPC9BZGRCb3g+XG4gICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgPFdhcm5Cb3g+XG4gICAgICAgICAgICAgICAgICAgIHt1cGxvYWRpbmcubWVzc2FnZX1cbiAgICAgICAgICAgICAgICA8L1dhcm5Cb3g+XG4gICAgICAgICAgICB9XG4gICAgICAgIDwvQWRkQ29udGFpbmVyPlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRleHRBZGQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgRkMsIHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuLy8gaW1wb3J0IHRvYXN0IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JztcbmltcG9ydCB7XG4gICAgYm94UHJvcHMsXG4gICAgU3VibWl0QnV0dG9uLFxuICAgIFRleHRBcmVhLFxuICAgIEFkZENvbnRhaW5lcixcbiAgICBBZGRCb3gsXG4gICAgV2FybkJveFxufSBmcm9tICcuLi9hZGRTdHlsZSc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG50eXBlIFBvc3RTdGF0ZSA9IHtcbiAgICBsb2FkaW5nOiBib29sZWFuLFxuICAgIHN1Y2Nlc3M6IGJvb2xlYW4sXG4gICAgd2FybmluZzogc3RyaW5nLFxufVxuXG5jb25zdCBUZXh0QWRkOiBGQzxib3hQcm9wcz4gPSAoeyB0b2FzdCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgb2Zmc2V0LCBpbml0U3RhdGVzLCBib2FyZCB9KSA9PiB7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZSgnJyk7XG4gICAgY29uc3QgW3Bvc3RTdGF0ZSwgc2V0UG9zdFN0YXRlXSA9IHVzZVN0YXRlPFBvc3RTdGF0ZT4oe1xuICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIHdhcm5pbmc6ICcnLFxuICAgIH0pXG4gICAgY29uc3QgdGV4dFNjcm9sbFJlZiA9IHVzZVJlZigpIGFzIFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8SFRNTFRleHRBcmVhRWxlbWVudD47XG4gICAgY29uc3QgW1RBSCwgc2V0VEFIXSA9IHVzZVN0YXRlKCdhdXRvJyk7XG5cbiAgICBjb25zdCBPQ1ZhbHVlID0gdXNlQ2FsbGJhY2soKGUpID0+IHtcbiAgICAgICAgc2V0VEFIKGAke3RleHRTY3JvbGxSZWYuY3VycmVudC5zY3JvbGxIZWlnaHR9cHhgKTtcbiAgICAgICAgc2V0VmFsdWUoZS50YXJnZXQudmFsdWUpO1xuICAgIH0sIFt0ZXh0U2Nyb2xsUmVmXSk7XG5cbiAgICBjb25zdCB3cml0ZVRleHQgPSB1c2VDYWxsYmFjayhhc3luYyAoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNldFBvc3RTdGF0ZSh7IC4uLnBvc3RTdGF0ZSwgbG9hZGluZzogdHJ1ZX0pO1xuICAgICAgICBhd2FpdCBheGlvcy5wb3N0KGAvYXBpL2JvYXJkLyR7Ym9hcmR9L3dyaXRlL3RleHRgLCB7XG4gICAgICAgICAgICBjb250ZW50OiB2YWx1ZSxcbiAgICAgICAgICAgIHg6IG9mZnNldC54LFxuICAgICAgICAgICAgeTogb2Zmc2V0LnksXG4gICAgICAgICAgICB3aWR0aDogb2Zmc2V0LndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBvZmZzZXQuaGVpZ2h0LFxuICAgICAgICB9KS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAyKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNldFBvc3RTdGF0ZSh7IC4uLnBvc3RTdGF0ZSwgd2FybmluZzogcmVzLmRhdGEucmVhc29ufSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXRQb3N0U3RhdGUoeyAuLi5wb3N0U3RhdGUsIHdhcm5pbmc6ICcnfSk7XG4gICAgICAgICAgICAgICAgfSwgMjAwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZXRQb3N0U3RhdGUoey4uLnBvc3RTdGF0ZSwgbG9hZGluZzogZmFsc2UsIHN1Y2Nlc3M6IHRydWV9KTtcbiAgICAgICAgICAgIHRvYXN0LmRhcmsoYOuCqOydgCDsubjsnYAgJHtyZXMuZGF0YX3subgg7J6F64uI64ukLmApO1xuICAgICAgICAgICAgaW5pdFN0YXRlcygpO1xuICAgICAgICB9KS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgc2V0UG9zdFN0YXRlKHsuLi5wb3N0U3RhdGUsIGxvYWRpbmc6IGZhbHNlLCB3YXJuaW5nOiBlLnJlc3BvbnNlLmRhdGEucmVhc29ufSk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBzZXRQb3N0U3RhdGUoeyAuLi5wb3N0U3RhdGUsIHdhcm5pbmc6ICcnfSk7XG4gICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgfSk7XG4gICAgfSwgW3ZhbHVlLCBwb3N0U3RhdGVdKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxBZGRDb250YWluZXIgeT17eX0geD17eH0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XG4gICAgICAgICAgICB7IHBvc3RTdGF0ZS53YXJuaW5nID09PSAnJyA/XG4gICAgICAgICAgICAgICAgPEFkZEJveD5cbiAgICAgICAgICAgICAgICAgICAgeyAhcG9zdFN0YXRlLmxvYWRpbmcgP1xuICAgICAgICAgICAgICAgICAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBUQUhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17T0NWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvRm9jdXM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmPXt0ZXh0U2Nyb2xsUmVmfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGluZy4uLlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPFN1Ym1pdEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT17d2lkdGggLyBvZmZzZXQud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt3cml0ZVRleHR9XG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodD17b2Zmc2V0LnggKyBvZmZzZXQud2lkdGggPCAzMiA/IC01IDogd2lkdGh9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHdpZHRoPVwiMjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTAgMGgyNHYyNEgwelwiIGZpbGw9XCJub25lXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTIuMDEgMjFMMjMgMTIgMi4wMSAzIDIgMTBsMTUgMi0xNSAyelwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPC9TdWJtaXRCdXR0b24+XG4gICAgICAgICAgICAgICAgPC9BZGRCb3g+XG4gICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgIDxXYXJuQm94PlxuICAgICAgICAgICAgICAgICAgICB7cG9zdFN0YXRlLndhcm5pbmd9XG4gICAgICAgICAgICAgICAgPC9XYXJuQm94PlxuICAgICAgICAgICAgfVxuICAgICAgICA8L0FkZENvbnRhaW5lcj5cbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUZXh0QWRkO1xuIiwiaW1wb3J0IFJlYWN0LCB7IEZDLCB1c2VSZWYsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQge1xuICAgIGJveFByb3BzLFxuICAgIFN1Ym1pdEJ1dHRvbixcbiAgICBUZXh0QXJlYSxcbiAgICBBZGRDb250YWluZXIsXG4gICAgQWRkQm94LFxuICAgIE5vdGVBZGRCb3gsXG4gICAgSW5wdXRCb3gsXG4gICAgSW5wdXRBcmVhLFxuICAgIEltYWdlSW5wdXRCdXR0b24sXG4gICAgV2FybkJveFxufSBmcm9tICcuLi9hZGRTdHlsZSc7XG5pbXBvcnQgdXNlSW5wdXQgZnJvbSAnQGhvb2tzL3VzZUlucHV0JztcblxuaW50ZXJmYWNlIFVwbG9hZFByb3BzIHtcbiAgICBsb2FkaW5nOiBib29sZWFuLFxuICAgIHN1Y2Nlc3M6IGJvb2xlYW4sXG4gICAgaW1hZ2VVUkw6IHN0cmluZyxcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG59XG5cbmNvbnN0IFRleHRBZGQ6IEZDPGJveFByb3BzPiA9ICh7IHRvYXN0LCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCBvZmZzZXQsIGluaXRTdGF0ZXMsIGJvYXJkIH0pID0+IHtcbiAgICBjb25zdCBbaGVhZCwgT0NIZWFkXSA9IHVzZUlucHV0KCcnKTtcbiAgICBjb25zdCBbcGFyYSwgT0NQYXJhXSA9IHVzZUlucHV0KCcnKTtcbiAgICBjb25zdCBpbWFnZUlucHV0ID0gdXNlUmVmKCkgYXMgUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MSW5wdXRFbGVtZW50PjtcbiAgICBjb25zdCBbdXBsb2FkaW5nLCBzZXRVcGxvYWRpbmddID0gdXNlU3RhdGU8VXBsb2FkUHJvcHM+KHtcbiAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBpbWFnZVVSTDogJycsXG4gICAgICAgIG1lc3NhZ2U6ICcnLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgb25DbGlja0ltYWdlVXBsb2FkID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuXHRcdGltYWdlSW5wdXQuY3VycmVudC5jbGljaygpO1xuICAgIH0sIFtpbWFnZUlucHV0LmN1cnJlbnRdKTtcblxuICAgIGNvbnN0IG9uQ2hhbmdlSW1nID0gdXNlQ2FsbGJhY2soIGFzeW5jIChlKSA9PiB7XG5cdFx0Y29uc3QgaW1hZ2VGb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBpbWFnZUZvcm1EYXRhLmFwcGVuZCgnaW1hZ2UnLCBlLnRhcmdldC5maWxlc1swXSk7XG4gICAgICAgIGF3YWl0IHNldFVwbG9hZGluZyh7XG4gICAgICAgICAgICAuLi51cGxvYWRpbmcsXG4gICAgICAgICAgICBsb2FkaW5nOiB0cnVlXG4gICAgICAgIH0pO1xuXHRcdGF3YWl0IGF4aW9zLnBvc3QoJy9hcGkvdXBsb2FkSW1hZ2UnLCBpbWFnZUZvcm1EYXRhKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGltYWdlVVJMOiByZXMuZGF0YS51cmxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KS5jYXRjaChlID0+IHtcbiAgICAgICAgICAgIHNldFVwbG9hZGluZyh7XG4gICAgICAgICAgICAgICAgLi4udXBsb2FkaW5nLFxuICAgICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGUucmVzcG9uc2UuZGF0YVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgfSwgW3VwbG9hZGluZ10pO1xuXG4gICAgY29uc3Qgc3VibWl0Tm90ZSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICAgIH0pXG4gICAgICAgIGF3YWl0IGF4aW9zLnBvc3QoYC9hcGkvYm9hcmQvJHtib2FyZH0vd3JpdGUvbm90ZWAsIHtcbiAgICAgICAgICAgIGJhY2tncm91bmRfaW1nOiB1cGxvYWRpbmcuaW1hZ2VVUkwsXG4gICAgICAgICAgICBoZWFkOiBoZWFkLFxuICAgICAgICAgICAgcGFyYWdyYXBoOiBwYXJhLFxuICAgICAgICAgICAgeDogb2Zmc2V0LngsXG4gICAgICAgICAgICB5OiBvZmZzZXQueSxcbiAgICAgICAgICAgIHdpZHRoOiBvZmZzZXQud2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IG9mZnNldC5oZWlnaHQsXG4gICAgICAgIH0pLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDIpIHtcbiAgICAgICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgICAgICAuLi51cGxvYWRpbmcsXG4gICAgICAgICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXMuZGF0YS5yZWFzb25cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldFVwbG9hZGluZyh7IC4uLnVwbG9hZGluZywgbWVzc2FnZTogJyd9KTtcbiAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldFVwbG9hZGluZyh7XG4gICAgICAgICAgICAgICAgLi4udXBsb2FkaW5nLFxuICAgICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdG9hc3QuZGFyayhg64Ko7J2AIOy5uOydgCAke3Jlcy5kYXRhfey5uCDsnoXri4jri6QuYCk7XG4gICAgICAgICAgICBpbml0U3RhdGVzKCk7XG4gICAgICAgIH0pLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLnJlc3BvbnNlLmRhdGEucmVhc29uXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICB9LCBbdXBsb2FkaW5nLCBwYXJhLCBoZWFkXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8QWRkQ29udGFpbmVyIHk9e3l9IHg9e3h9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9PlxuICAgICAgICAgICAgeyB1cGxvYWRpbmcubWVzc2FnZSA9PT0gJycgP1xuICAgICAgICAgICAgICAgIDxBZGRCb3ggY2xhc3NOYW1lPVwibm90ZVwiPlxuICAgICAgICAgICAgICAgICAgICA8Tm90ZUFkZEJveCBzcmM9e1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBsb2FkaW5nLmltYWdlVVJMICE9PSAnJyA/IHVwbG9hZGluZy5pbWFnZVVSTCA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dEJveFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9e2hlaWdodCAvIG9mZnNldC5oZWlnaHR9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0QXJlYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9XCJoZWFkZXJJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCLtg4DsnbTti4DsnYQg7J6F66Cl7ZW07KO87IS47JqULlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtoZWFkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17T0NIZWFkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0lucHV0Qm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0Qm94XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT17aGVpZ2h0IC0gKGhlaWdodCAvIG9mZnNldC5oZWlnaHQpIC0gMjB9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHRBcmVhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtwYXJhfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17T0NQYXJhfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvRm9jdXM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwi67O466y4IOuCtOyaqeydhCDsnoXroKXtlbTso7zshLjsmpQuXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbjogJ2xlZnQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvSW5wdXRCb3g+XG4gICAgICAgICAgICAgICAgICAgIDwvTm90ZUFkZEJveD5cbiAgICAgICAgICAgICAgICAgICAgPFN1Ym1pdEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT17d2lkdGggLyBvZmZzZXQud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtzdWJtaXROb3RlfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ9e29mZnNldC54ICsgb2Zmc2V0LndpZHRoIDwgMzIgPyAtNSA6IHdpZHRofVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB3aWR0aD1cIjI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wIDBoMjR2MjRIMHpcIiBmaWxsPVwibm9uZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0yLjAxIDIxTDIzIDEyIDIuMDEgMyAyIDEwbDE1IDItMTUgMnpcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDwvU3VibWl0QnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8SW1hZ2VJbnB1dEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17b25DbGlja0ltYWdlVXBsb2FkfVxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT17d2lkdGggLyBvZmZzZXQud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodD17b2Zmc2V0LnggKyBvZmZzZXQud2lkdGggPCAzMiA/IC01IDogd2lkdGh9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsPVwiYmxhY2tcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiMThweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PVwiMThweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wIDBoMjR2MjRIMHpcIiBmaWxsPVwibm9uZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wIDBoMjR2MjRIMFYwelwiIGZpbGw9XCJub25lXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4IDEzdjdINFY2aDUuMDJjLjA1LS43MS4yMi0xLjM4LjQ4LTJINGMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMnYtNWwtMi0yem0tMS41IDVoLTExbDIuNzUtMy41MyAxLjk2IDIuMzYgMi43NS0zLjU0em0yLjgtOS4xMWMuNDQtLjcuNy0xLjUxLjctMi4zOUMyMCA0LjAxIDE3Ljk5IDIgMTUuNSAyUzExIDQuMDEgMTEgNi41czIuMDEgNC41IDQuNDkgNC41Yy44OCAwIDEuNy0uMjYgMi4zOS0uN0wyMSAxMy40MiAyMi40MiAxMiAxOS4zIDguODl6TTE1LjUgOUMxNC4xMiA5IDEzIDcuODggMTMgNi41UzE0LjEyIDQgMTUuNSA0IDE4IDUuMTIgMTggNi41IDE2Ljg4IDkgMTUuNSA5elwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZmlsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ9XCIuZ2lmLCAuanBnLCAucG5nXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17aW1hZ2VJbnB1dH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUltZ31cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9JbWFnZUlucHV0QnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvQWRkQm94PlxuICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgIDxXYXJuQm94PlxuICAgICAgICAgICAgICAgICAgICB7dXBsb2FkaW5nLm1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgPC9XYXJuQm94PlxuICAgICAgICAgICAgfVxuICAgICAgICA8L0FkZENvbnRhaW5lcj5cbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUZXh0QWRkO1xuIiwiaW1wb3J0IFJlYWN0LCB7RkMsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlLCB1c2VSZWYsIE11dGFibGVSZWZPYmplY3QsIENoYW5nZUV2ZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnO1xuaW1wb3J0IGxvY2FsaXplZEZvcm1hdCBmcm9tICdkYXlqcy9wbHVnaW4vbG9jYWxpemVkRm9ybWF0JztcbmRheWpzLmV4dGVuZChsb2NhbGl6ZWRGb3JtYXQpO1xuaW1wb3J0IHsgdG9hc3QsIFRvYXN0Q29udGFpbmVyIH0gZnJvbSAncmVhY3QtdG9hc3RpZnknO1xuaW1wb3J0ICdyZWFjdC10b2FzdGlmeS9kaXN0L1JlYWN0VG9hc3RpZnkuY3NzJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQge1N0YWdlLCBMYXllciwgUmVjdCwgR3JvdXAsIEltYWdlfSBmcm9tICdyZWFjdC1rb252YSc7XG5pbXBvcnQgS29udmEgZnJvbSAna29udmEnO1xuaW1wb3J0IHVzZUltYWdlIGZyb20gJ3VzZS1pbWFnZSdcbmltcG9ydCB7IElVc2VyLCBJQm9hcmQsIElDb21tZW50IH0gZnJvbSAnQHR5cGluZ3MvZGF0YXMnO1xuXG5pbXBvcnQge1xuICAgIFVEQnV0dG9uQm94LFxuICAgIFVzZXJJbmZvLFxuICAgIERldGFpbEJveCxcbiAgICBUb3BGaXhDb250ZW50LFxuICAgIEJvdHRvbUZpeENvbnRlbnQsXG4gICAgRGV0YWlsQmFja2dyb3VuZCxcbiAgICBEZXRhaWxXaW5kb3csXG4gICAgS29udmFDb250YWluZXIsXG4gICAgQm9hcmRGb290ZXIsXG4gICAgV2Fybk1lc3NhZ2UsXG4gICAgTW9tZW50Qm94LFxuICAgIERldGFpbENvbnRlbnRCb3gsXG4gICAgRWRpdEFyZWEsXG4gICAgRWRpdEJ1dHRvbkJveCxcbiAgICBJbWFnZUJveCxcbiAgICBDb21tZW50LFxuICAgIENvbW1lbnRCb3gsXG4gICAgTWVudUJveCxcbiAgICBNZW51QXR0cixcbiAgICBDb21wb25lbnRCb3gsXG4gICAgQWx0Qm94LFxuICAgIFRleHRDb21wb25lbnQsXG4gICAgSW1hZ2VDb21wb25lbnQsXG4gICAgTm90ZUNvbXBvbmVudCxcbiAgICBPbk1vZGVBbHQsXG4gICAgUmVzaXplUmVtb3RlLFxuICAgIEVkaXRJbWFnZUlucHV0LFxufSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBJbWFnZUFkZCBmcm9tICdAY29tcG9uZW50cy9JbWFnZUFkZCc7XG5pbXBvcnQgVGV4dEFkZCBmcm9tICdAY29tcG9uZW50cy9UZXh0QWRkJztcbmltcG9ydCBOb3RlQWRkIGZyb20gJ0Bjb21wb25lbnRzL05vdGVBZGQnO1xuaW1wb3J0IHVzZUlucHV0IGZyb20gJ0Bob29rcy91c2VJbnB1dCc7XG5cbnR5cGUgUG9zaXRpb24gPSB7XG4gICAgeDogbnVtYmVyLFxuICAgIHk6IG51bWJlclxufTtcblxudHlwZSBNZW51UG9zaXRpb24gPSB7XG4gICAgeDogbnVtYmVyLFxuICAgIHk6IG51bWJlcixcbiAgICBmbGc6IGJvb2xlYW4sXG4gICAgZGlzcDogYm9vbGVhbixcbn1cblxudHlwZSBEcmFnZ2VkUmVjdCA9IHtcbiAgICB4OiBudW1iZXIsXG4gICAgeTogbnVtYmVyLFxuICAgIGRyYWdnZWQ6IGJvb2xlYW5cbn1cblxudHlwZSBSZWN0U2l6ZSA9IHtcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxufVxuXG50eXBlIG9mZnNldCA9IHtcbiAgICB3aWR0aDogbnVtYmVyLFxuICAgIGhlaWdodDogbnVtYmVyLFxuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXJcbn1cblxuaW50ZXJmYWNlIElCb2FyZFByb3BzIHtcbiAgICBib2FyZERhdGE6IElCb2FyZCB8IHVuZGVmaW5lZCxcbiAgICB1c2VyRGF0YTogSVVzZXIsXG4gICAgZGF0YVJldmFsOiAoKSA9PiB2b2lkLFxuICAgIGJvYXJkOiBzdHJpbmcsXG59XG5cbmludGVyZmFjZSBVcGxvYWRQcm9wcyB7XG4gICAgbG9hZGluZzogYm9vbGVhbixcbiAgICBzdWNjZXNzOiBib29sZWFuLFxuICAgIGltYWdlVVJMOiBzdHJpbmcsXG4gICAgbWVzc2FnZTogc3RyaW5nLFxufVxuXG5pbnRlcmZhY2UgSURldGFpbCB7XG4gICAgY2F0ZWdvcnk6IG51bWJlcixcbiAgICBpZDogbnVtYmVyLFxuICAgIGZsZzogYm9vbGVhbixcbiAgICBsb2FkQ29tbWVudDogYm9vbGVhbixcbiAgICBjb250ZW50OiBEZXRhaWxQcm9wcyB8IG51bGxcbn1cblxuaW50ZXJmYWNlIERldGFpbFByb3BzIHtcbiAgICBpZDogbnVtYmVyLFxuICAgIHg6IG51bWJlcixcbiAgICB5OiBudW1iZXIsXG4gICAgd2lkdGg6IG51bWJlcixcbiAgICBoZWlnaHQ6IG51bWJlcixcbiAgICBjcmVhdGVkQXQ6IERhdGUsXG4gICAgdXBkYXRlZEF0OiBEYXRlLFxuICAgIGV4cGlyeV9kYXRlOiBEYXRlLFxuICAgIFVzZXJJZDogbnVtYmVyLFxuICAgIGNvbnRlbnQ6IG51bGwgfCBzdHJpbmcsXG4gICAgaGVhZDogbnVsbCB8IHN0cmluZyxcbiAgICBwYXJhZ3JhcGg6IG51bGwgfCBzdHJpbmcsXG4gICAgdXJsOiBzdHJpbmcsXG4gICAgYmFja2dyb3VuZF9pbWc6IHN0cmluZyxcbiAgICBDb21tZW50czogSUNvbW1lbnRbXSxcbiAgICBVc2VyOiBJVXNlcixcbn1cblxuaW50ZXJmYWNlIElJRUIge1xuICAgIGltYWdlSW5wdXQ6IE11dGFibGVSZWZPYmplY3Q8SFRNTElucHV0RWxlbWVudD4sXG4gICAgb25DaGFuZ2VJbWc6ICggZTpDaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4gdm9pZCxcbiAgICBvbkNsaWNrOiAoKSA9PiB2b2lkLFxufVxuXG5jb25zdCBJbWFnZUVkaXRCdXR0b246RkM8SUlFQj4gPSAoeyBpbWFnZUlucHV0LCBvbkNoYW5nZUltZywgb25DbGlja30pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8RWRpdEltYWdlSW5wdXRcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgID5cbiAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgICAgICAgICBmaWxsPVwiYmxhY2tcIlxuICAgICAgICAgICAgICAgIHdpZHRoPVwiMThweFwiXG4gICAgICAgICAgICAgICAgaGVpZ2h0PVwiMThweFwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wIDBoMjR2MjRIMHpcIiBmaWxsPVwibm9uZVwiIC8+XG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0wIDBoMjR2MjRIMFYwelwiIGZpbGw9XCJub25lXCIgLz5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4IDEzdjdINFY2aDUuMDJjLjA1LS43MS4yMi0xLjM4LjQ4LTJINGMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMnYtNWwtMi0yem0tMS41IDVoLTExbDIuNzUtMy41MyAxLjk2IDIuMzYgMi43NS0zLjU0em0yLjgtOS4xMWMuNDQtLjcuNy0xLjUxLjctMi4zOUMyMCA0LjAxIDE3Ljk5IDIgMTUuNSAyUzExIDQuMDEgMTEgNi41czIuMDEgNC41IDQuNDkgNC41Yy44OCAwIDEuNy0uMjYgMi4zOS0uN0wyMSAxMy40MiAyMi40MiAxMiAxOS4zIDguODl6TTE1LjUgOUMxNC4xMiA5IDEzIDcuODggMTMgNi41UzE0LjEyIDQgMTUuNSA0IDE4IDUuMTIgMTggNi41IDE2Ljg4IDkgMTUuNSA5elwiIC8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDxwPuydtOuvuOyngCDrs4Dqsr3tlZjquLA8L3A+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICAgICAgICAgIGFjY2VwdD1cIi5naWYsIC5qcGcsIC5wbmdcIlxuICAgICAgICAgICAgICAgIHJlZj17aW1hZ2VJbnB1dH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VJbWd9XG4gICAgICAgICAgICAvPlxuICAgICAgICA8L0VkaXRJbWFnZUlucHV0PlxuICAgIClcbn1cblxuY29uc3QgV29ya1NwYWNlOkZDPElCb2FyZFByb3BzPiA9ICh7IGJvYXJkLCBib2FyZERhdGEsIGRhdGFSZXZhbCwgdXNlckRhdGEgfSkgPT4ge1xuICAgIGNvbnN0IGxheWVyUmVmID0gUmVhY3QudXNlUmVmKCkgYXMgUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxLb252YS5MYXllcj47XG4gICAgY29uc3QgW2lzRHJhZ2dlZCwgc2V0RHJhZ2dlZF0gPSB1c2VTdGF0ZTxEcmFnZ2VkUmVjdD4oe1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgICBkcmFnZ2VkOiBmYWxzZSxcbiAgICB9KTtcblxuICAgIGNvbnN0IFttUG9zLCBzZXRNUG9zXSA9IHVzZVN0YXRlPFBvc2l0aW9uPih7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgfSk7XG5cbiAgICBjb25zdCBbclBvcywgc2V0UlBvc10gPSB1c2VTdGF0ZTxQb3NpdGlvbj4oe1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwXG4gICAgfSk7XG5cbiAgICBjb25zdCBbbWVudVN0YXRlLCBzZXRNZW51XSA9IHVzZVN0YXRlPE1lbnVQb3NpdGlvbj4oe1xuICAgICAgICB4OiAwLFxuICAgICAgICB5OiAwLFxuICAgICAgICBmbGc6IGZhbHNlLFxuICAgICAgICBkaXNwOiBmYWxzZSxcbiAgICB9KTtcbiAgICBjb25zdCBbb2Zmc2V0LCBzZXRPZmZzZXRdID0gdXNlU3RhdGU8b2Zmc2V0Pih7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIHdpZHRoOiAwLFxuICAgICAgICBoZWlnaHQ6IDBcbiAgICB9KTtcbiAgICBjb25zdCBbYWRkU3RhdGUsIHNldEFkZF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICAgIGNvbnN0IFtvcGVuRGV0YWlsLCBzZXRPcGVuRGV0YWlsXSA9IHVzZVN0YXRlPElEZXRhaWw+KHtcbiAgICAgICAgY2F0ZWdvcnk6IDAsXG4gICAgICAgIGlkOiAwLFxuICAgICAgICBmbGc6IGZhbHNlLFxuICAgICAgICBsb2FkQ29tbWVudDogZmFsc2UsXG4gICAgICAgIGNvbnRlbnQ6IG51bGwsXG4gICAgfSlcbiAgICBjb25zdCBbd2FybmluZywgc2V0V2FybmluZ10gPSB1c2VTdGF0ZTxzdHJpbmc+KCcnKTtcbiAgICBjb25zdCBbd2lkdGgsIHNldFdpZHRoXSA9IHVzZVN0YXRlPG51bWJlcj4od2luZG93LmlubmVyV2lkdGgpO1xuICAgIGNvbnN0IFtkZWZhdWx0UmVjdFNpemUsIHNldERlZmF1bHRSZWN0U2l6ZV0gPSB1c2VTdGF0ZTxudW1iZXI+KHdpZHRoIC8gMzIpO1xuICAgIGNvbnN0IFtyZWN0U2l6ZSwgc2V0UmVjdFNpemVdID0gdXNlU3RhdGU8UmVjdFNpemU+KHtcbiAgICAgICAgd2lkdGg6IGRlZmF1bHRSZWN0U2l6ZSxcbiAgICAgICAgaGVpZ2h0OiBkZWZhdWx0UmVjdFNpemUsXG4gICAgfSk7XG4gICAgY29uc3QgW2NvbW1lbnRDb250ZW50LCBPQ0NDLCBzZXRDQ10gPSB1c2VJbnB1dCgnJyk7XG4gICAgY29uc3QgW2hlaWdodCwgc2V0SGVpZ2h0XSA9IHVzZVN0YXRlKGRlZmF1bHRSZWN0U2l6ZSAqIDIwKTtcbiAgICBjb25zdCBbY29tbWVudHMsIHNldENvbW1lbnRzXSA9IHVzZVN0YXRlPElDb21tZW50W10+KCk7XG4gICAgY29uc3QgW2lzRWRpdCwgc2V0SXNFZGl0XSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZSgnJyk7XG4gICAgY29uc3QgW2hlYWQsIE9DSGVhZCwgc2V0SGVhZF0gPSB1c2VJbnB1dCgnJyk7XG4gICAgY29uc3QgW2VkaXRVcmwsIHNldEVkaXRVcmxdID0gdXNlU3RhdGU8c3RyaW5nPignJyk7XG4gICAgY29uc3QgW3VwbG9hZGluZywgc2V0VXBsb2FkaW5nXSA9IHVzZVN0YXRlPFVwbG9hZFByb3BzPih7XG4gICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgaW1hZ2VVUkw6ICcnLFxuICAgICAgICBtZXNzYWdlOiAnJyxcbiAgICB9KTtcbiAgICBjb25zdCBbY2FuTW92ZSwgc2V0Q2FuTW92ZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2lzRWRpdFNpemUsIHNldElzRWRpdFNpemVdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gICAgY29uc3QgdGV4dFNjcm9sbFJlZiA9IHVzZVJlZigpIGFzIFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8SFRNTFRleHRBcmVhRWxlbWVudD47XG4gICAgY29uc3QgaW1hZ2VJbnB1dCA9IHVzZVJlZigpIGFzIFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8SFRNTElucHV0RWxlbWVudD47XG5cbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuXG4gICAgY29uc3QgZGV0YWlsV2luZG93U3R5bGUgPSB7XG4gICAgICAgIHRyYW5zZm9ybTogb3BlbkRldGFpbC5mbGcgPyAndHJhbnNsYXRlWCgwJSknIDogJ3RyYW5zbGF0ZVgoLTEwMCUpJyxcbiAgICB9XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRSUG9zKHtcbiAgICAgICAgICAgIHg6IHJQb3MueCAvIGRlZmF1bHRSZWN0U2l6ZSAqIHdpbmRvdy5pbm5lcldpZHRoIC8gMzIsXG4gICAgICAgICAgICB5OiByUG9zLnkgLyBkZWZhdWx0UmVjdFNpemUgKiB3aW5kb3cuaW5uZXJXaWR0aCAvIDMyXG4gICAgICAgIH0pO1xuICAgICAgICBzZXRSZWN0U2l6ZSh7XG4gICAgICAgICAgICB3aWR0aDogcmVjdFNpemUud2lkdGggLyBkZWZhdWx0UmVjdFNpemUgKiB3aW5kb3cuaW5uZXJXaWR0aCAvIDMyLFxuICAgICAgICAgICAgaGVpZ2h0OiByZWN0U2l6ZS5oZWlnaHQgLyBkZWZhdWx0UmVjdFNpemUgKiB3aW5kb3cuaW5uZXJXaWR0aCAvIDMyLFxuICAgICAgICB9KVxuICAgICAgICBzZXRXaWR0aCh3aW5kb3cuaW5uZXJXaWR0aCk7XG4gICAgICAgIHNldERlZmF1bHRSZWN0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aC8zMik7XG4gICAgICAgIHNldEhlaWdodCh3aW5kb3cuaW5uZXJXaWR0aC8zMioyMCk7XG4gICAgfSwgW3dpbmRvdy5pbm5lcldpZHRoLCBkZWZhdWx0UmVjdFNpemVdKTtcblxuICAgIGNvbnN0IHZpZXdBZGRDb21wb25lbnQgPSB1c2VDYWxsYmFjaygobnVtYmVyOm51bWJlcikgPT4ge1xuICAgICAgICBjb25zdCBzZWxlY3RXaWR0aCA9IHJlY3RTaXplLndpZHRoIC8gZGVmYXVsdFJlY3RTaXplO1xuICAgICAgICBjb25zdCBzZWxlY3RIZWlnaHQgPSByZWN0U2l6ZS5oZWlnaHQgLyBkZWZhdWx0UmVjdFNpemU7XG4gICAgICAgIGlmICgoc2VsZWN0SGVpZ2h0ICogc2VsZWN0V2lkdGgpIDwgNClcbiAgICAgICAgICAgIHNldFdhcm5pbmcoJ+y1nOyGjCA07Lm47J2YIOyYgeyXreydhCDshKDtg53tlbTslbztlanri4jri6QuJyk7XG4gICAgICAgIGVsc2UgaWYgKG51bWJlciA9PT0gMyAmJiAoc2VsZWN0SGVpZ2h0ICogc2VsZWN0V2lkdGgpIDwgNilcbiAgICAgICAgICAgIHNldFdhcm5pbmcoJ+ydtOuvuOyngOuKlCDstZzshowgNuy5uOydmCDsmIHsl63snYQg7ISg7YOd7ZW07JW87ZWp64uI64ukLicpO1xuICAgICAgICBlbHNlIGlmIChudW1iZXIgPT09IDIgJiYgKHNlbGVjdEhlaWdodCAqIHNlbGVjdFdpZHRoKSA8IDIwKVxuICAgICAgICAgICAgc2V0V2FybmluZygn64W47Yq464qUIOy1nOyGjCAyMOy5uOydtOyDgeydmCDsmIHsl63snYQg7ISg7YOd7ZW07JW87ZWp64uI64ukLicpO1xuICAgICAgICBlbHNlIGlmIChudW1iZXIgPT09IDIgJiYgKHNlbGVjdEhlaWdodCA8IDMgfHwgc2VsZWN0V2lkdGggPCA0KSlcbiAgICAgICAgICAgIHNldFdhcm5pbmcoJ+uFuO2KuOuKlCA0eDPsnbTsg4HsnZgg7JiB7Jet7J2EIOyEoO2Dne2VtOyVvO2VqeuLiOuLpC4nKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXRPZmZzZXQoe1xuICAgICAgICAgICAgICAgIHg6IHJQb3MueCAvIGRlZmF1bHRSZWN0U2l6ZSxcbiAgICAgICAgICAgICAgICB5OiByUG9zLnkgLyBkZWZhdWx0UmVjdFNpemUsXG4gICAgICAgICAgICAgICAgd2lkdGg6IHJlY3RTaXplLndpZHRoIC8gZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgICAgIGhlaWdodDogcmVjdFNpemUuaGVpZ2h0IC8gZGVmYXVsdFJlY3RTaXplXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0QWRkKG51bWJlcik7XG4gICAgICAgIH1cbiAgICB9LCBbcmVjdFNpemUsIGRlZmF1bHRSZWN0U2l6ZV0pO1xuXG4gICAgY29uc3QgZ2V0UmVjdFNpemUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmIChpc0RyYWdnZWQgJiYgIWNhbk1vdmUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGxldCB3ID0gZGVmYXVsdFJlY3RTaXplICogTWF0aC5mbG9vcigoTWF0aC5hYnMoIG1Qb3MueCAtIG1Qb3MueCAlIGRlZmF1bHRSZWN0U2l6ZSAtIGlzRHJhZ2dlZC54KSAvIGRlZmF1bHRSZWN0U2l6ZSApICsgMSk7XG4gICAgICAgICAgICBsZXQgaCA9IGRlZmF1bHRSZWN0U2l6ZSAqIE1hdGguZmxvb3IoKE1hdGguYWJzKCBtUG9zLnkgLSBtUG9zLnkgJSBkZWZhdWx0UmVjdFNpemUgLSBpc0RyYWdnZWQueSkgLyBkZWZhdWx0UmVjdFNpemUgKSArIDEpO1xuXG4gICAgICAgICAgICBjb25zdCB4ZGlmID0gbVBvcy54IC0gaXNEcmFnZ2VkLng7XG4gICAgICAgICAgICBjb25zdCB5ZGlmID0gbVBvcy55IC0gaXNEcmFnZ2VkLnk7XG5cbiAgICAgICAgICAgIGlmICh4ZGlmIDwgMCAmJiB5ZGlmID4gMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXRSUG9zKHtcbiAgICAgICAgICAgICAgICAgICAgLi4uclBvcyxcbiAgICAgICAgICAgICAgICAgICAgeDogbVBvcy54IC0gbVBvcy54ICUgZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh4ZGlmID4gMCAmJiB5ZGlmIDwgMClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXRSUG9zKHtcbiAgICAgICAgICAgICAgICAgICAgLi4uclBvcyxcbiAgICAgICAgICAgICAgICAgICAgeTogbVBvcy55IC0gbVBvcy55ICUgZGVmYXVsdFJlY3RTaXplXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHhkaWYgPCAwICYmIHlkaWYgPCAwKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNldFJQb3Moe1xuICAgICAgICAgICAgICAgICAgICB4OiBtUG9zLnggLSBtUG9zLnggJSBkZWZhdWx0UmVjdFNpemUsXG4gICAgICAgICAgICAgICAgICAgIHk6IG1Qb3MueSAtIG1Qb3MueSAlIGRlZmF1bHRSZWN0U2l6ZVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh4ZGlmID4gZGVmYXVsdFJlY3RTaXplKSB7XG4gICAgICAgICAgICAgICAgdyArPSBkZWZhdWx0UmVjdFNpemU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoeWRpZiA+IGRlZmF1bHRSZWN0U2l6ZSkge1xuICAgICAgICAgICAgICAgIGggKz0gZGVmYXVsdFJlY3RTaXplO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzZXRSZWN0U2l6ZSh7XG4gICAgICAgICAgICAgICAgd2lkdGg6IHcsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBoXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSwgW21Qb3MsIGlzRHJhZ2dlZCwgclBvcywgZGVmYXVsdFJlY3RTaXplXSk7XG5cbiAgICBjb25zdCByZWN0REUgPSAoZTphbnkpID0+IHtcbiAgICAgICAgc2V0UlBvcyh7XG4gICAgICAgICAgICB4OiBlLnRhcmdldC54KCkgLSBlLnRhcmdldC54KCkgJSBkZWZhdWx0UmVjdFNpemUsXG4gICAgICAgICAgICB5OiBlLnRhcmdldC55KCkgLSBlLnRhcmdldC55KCkgJSBkZWZhdWx0UmVjdFNpemUsXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBSZWN0T25DYW52YXMgPSAoe3ggPSAwLCB5ID0gMH0pID0+IHtcbiAgICAgICAgY29uc3QgY29sb3IgPSBjYW5Nb3ZlID8gYHJnYmEoMzIsIDE3OCwgMTcwLCAuNSlgIDogYHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKWA7XG5cbiAgICAgICAgaWYgKChvcGVuRGV0YWlsPy5jYXRlZ29yeSA9PT0gMyAgfHwgb3BlbkRldGFpbD8uY2F0ZWdvcnkgPT09IDIpICYmIGNhbk1vdmUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IGltYWdlU3JjID0gb3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMyA/IG9wZW5EZXRhaWwuY29udGVudD8udXJsIDogb3BlbkRldGFpbC5jb250ZW50Py5iYWNrZ3JvdW5kX2ltZztcbiAgICAgICAgICAgIGNvbnN0IFtpbWFnZV0gPSB1c2VJbWFnZShpbWFnZVNyYyA/IGltYWdlU3JjIDogJycpO1xuXG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5PXswLjR9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoPXtyZWN0U2l6ZS53aWR0aH1cbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PXtyZWN0U2l6ZS5oZWlnaHR9XG4gICAgICAgICAgICAgICAgICAgIGZpbGw9eyBjb2xvciB9XG4gICAgICAgICAgICAgICAgICAgIHg9e3h9XG4gICAgICAgICAgICAgICAgICAgIHk9e3l9XG4gICAgICAgICAgICAgICAgICAgIGNvcm5lclJhZGl1cz17NX1cbiAgICAgICAgICAgICAgICAgICAgaW1hZ2U9e2ltYWdlfVxuICAgICAgICAgICAgICAgICAgICBkcmFnZ2FibGVcbiAgICAgICAgICAgICAgICAgICAgb25EcmFnRW5kPXtjYW5Nb3ZlID8gcmVjdERFIDogdW5kZWZpbmVkfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDxSZWN0XG4gICAgICAgICAgICB3aWR0aD17cmVjdFNpemUud2lkdGh9XG4gICAgICAgICAgICBoZWlnaHQ9e3JlY3RTaXplLmhlaWdodH1cbiAgICAgICAgICAgIGZpbGw9eyBjb2xvciB9XG4gICAgICAgICAgICB4PXt4fVxuICAgICAgICAgICAgeT17eX1cbiAgICAgICAgICAgIGNvcm5lclJhZGl1cz17NX1cbiAgICAgICAgICAgIGRyYWdnYWJsZVxuICAgICAgICAgICAgb25EcmFnRW5kPXtjYW5Nb3ZlID8gcmVjdERFIDogdW5kZWZpbmVkfVxuICAgICAgICAvPlxuICAgIH1cblxuICAgIGNvbnN0IGNoZWNrVmVydGV4SW5SZWN0ID0gdXNlQ2FsbGJhY2soKHY6bnVtYmVyLCBsZWZ0Om51bWJlciwgcmlnaHQ6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAodiA+IGxlZnQgJiYgdiA8IHJpZ2h0KVxuICAgICAgICAgICAgcmV0dXJuICh0cnVlKTtcbiAgICAgICAgcmV0dXJuIChmYWxzZSk7XG4gICAgfSwgW10pO1xuXG4gICAgY29uc3QgY2hlY2tBbGxCb3ggPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmIChib2FyZERhdGE/LlRleHRDb250ZW50cyAmJiBib2FyZERhdGEuVGV4dENvbnRlbnRzLmZpbHRlcihlbGVtID0+ICEob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMSAmJiBlbGVtLmlkID09PSBvcGVuRGV0YWlsLmlkKSkuZmluZChlID0+XG4gICAgICAgICAgICAoKFxuICAgICAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdChlLnggKiBkZWZhdWx0UmVjdFNpemUsIHJQb3MueCwgclBvcy54ICsgcmVjdFNpemUud2lkdGgpXG4gICAgICAgICAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KChlLnggKyBlLndpZHRoKSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy54LCByUG9zLnggKyByZWN0U2l6ZS53aWR0aClcbiAgICAgICAgICAgICAgICApICYmIChcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoZS55ICogZGVmYXVsdFJlY3RTaXplLCByUG9zLnksIHJQb3MueSArIHJlY3RTaXplLmhlaWdodClcbiAgICAgICAgICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoKGUueSArIGUuaGVpZ2h0KSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy55LCByUG9zLnkgKyByZWN0U2l6ZS5oZWlnaHQpXG4gICAgICAgICAgICApKVxuICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICgoXG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoZS54ICogZGVmYXVsdFJlY3RTaXplLCByUG9zLngsIHJQb3MueCArIHJlY3RTaXplLndpZHRoKVxuICAgICAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoKGUueCArIGUud2lkdGgpICogZGVmYXVsdFJlY3RTaXplLCByUG9zLngsIHJQb3MueCArIHJlY3RTaXplLndpZHRoKVxuICAgICAgICAgICAgICAgICkgJiYgKFxuICAgICAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdChyUG9zLnksIGUueSAqIGRlZmF1bHRSZWN0U2l6ZSwgKGUueSArIGUuaGVpZ2h0KSAqIGRlZmF1bHRSZWN0U2l6ZSlcbiAgICAgICAgICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoclBvcy55ICsgcmVjdFNpemUuaGVpZ2h0LCBlLnkgKiBkZWZhdWx0UmVjdFNpemUsIChlLnkgKyBlLmhlaWdodCkgKiBkZWZhdWx0UmVjdFNpemUpXG4gICAgICAgICAgICApKVxuICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICgoXG4gICAgICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KHJQb3MueCwgZS54ICogZGVmYXVsdFJlY3RTaXplLCAoZS54ICsgZS53aWR0aCkgKiBkZWZhdWx0UmVjdFNpemUpXG4gICAgICAgICAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KHJQb3MueCArIHJlY3RTaXplLndpZHRoLCBlLnggKiBkZWZhdWx0UmVjdFNpemUsIChlLnggKyBlLndpZHRoKSAqIGRlZmF1bHRSZWN0U2l6ZSlcbiAgICAgICAgICAgICAgICApICYmIChcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoZS55ICogZGVmYXVsdFJlY3RTaXplLCByUG9zLnksIHJQb3MueSArIHJlY3RTaXplLmhlaWdodClcbiAgICAgICAgICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoKGUueSArIGUuaGVpZ2h0KSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy55LCByUG9zLnkgKyByZWN0U2l6ZS5oZWlnaHQpXG4gICAgICAgICAgICApKVxuICAgICAgICApKVxuICAgICAgICAgICAgcmV0dXJuIChmYWxzZSk7XG4gICAgICAgIGlmIChib2FyZERhdGE/LkltYWdlcyAmJiBib2FyZERhdGEuSW1hZ2VzLmZpbHRlcihlbGVtID0+ICEob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMyAmJiBlbGVtLmlkID09PSBvcGVuRGV0YWlsLmlkKSkuZmluZChlID0+XG4gICAgICAgICAgICAoKFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KGUueCAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy54LCByUG9zLnggKyByZWN0U2l6ZS53aWR0aClcbiAgICAgICAgICAgICAgICB8fFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KChlLnggKyBlLndpZHRoKSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy54LCByUG9zLnggKyByZWN0U2l6ZS53aWR0aClcbiAgICAgICAgICAgICkgJiYgKFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KGUueSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy55LCByUG9zLnkgKyByZWN0U2l6ZS5oZWlnaHQpXG4gICAgICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdCgoZS55ICsgZS5oZWlnaHQpICogZGVmYXVsdFJlY3RTaXplLCByUG9zLnksIHJQb3MueSArIHJlY3RTaXplLmhlaWdodClcbiAgICAgICAgKSlcbiAgICAgICAgfHxcbiAgICAgICAgKChcbiAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KGUueCAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy54LCByUG9zLnggKyByZWN0U2l6ZS53aWR0aClcbiAgICAgICAgICAgIHx8XG4gICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdCgoZS54ICsgZS53aWR0aCkgKiBkZWZhdWx0UmVjdFNpemUsIHJQb3MueCwgclBvcy54ICsgcmVjdFNpemUud2lkdGgpXG4gICAgICAgICAgICApICYmIChcbiAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdChyUG9zLnksIGUueSAqIGRlZmF1bHRSZWN0U2l6ZSwgKGUueSArIGUuaGVpZ2h0KSAqIGRlZmF1bHRSZWN0U2l6ZSlcbiAgICAgICAgICAgICAgICB8fFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KHJQb3MueSArIHJlY3RTaXplLmhlaWdodCwgZS55ICogZGVmYXVsdFJlY3RTaXplLCAoZS55ICsgZS5oZWlnaHQpICogZGVmYXVsdFJlY3RTaXplKVxuICAgICAgICApKVxuICAgICAgICB8fFxuICAgICAgICAoKFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KHJQb3MueCwgZS54ICogZGVmYXVsdFJlY3RTaXplLCAoZS54ICsgZS53aWR0aCkgKiBkZWZhdWx0UmVjdFNpemUpXG4gICAgICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdChyUG9zLnggKyByZWN0U2l6ZS53aWR0aCwgZS54ICogZGVmYXVsdFJlY3RTaXplLCAoZS54ICsgZS53aWR0aCkgKiBkZWZhdWx0UmVjdFNpemUpXG4gICAgICAgICAgICApICYmIChcbiAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdChlLnkgKiBkZWZhdWx0UmVjdFNpemUsIHJQb3MueSwgclBvcy55ICsgcmVjdFNpemUuaGVpZ2h0KVxuICAgICAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoKGUueSArIGUuaGVpZ2h0KSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy55LCByUG9zLnkgKyByZWN0U2l6ZS5oZWlnaHQpXG4gICAgICAgICkpXG4gICAgKSlcbiAgICAgICAgICAgIHJldHVybiAoZmFsc2UpO1xuICAgICAgICBpZiAoYm9hcmREYXRhPy5Ob3RlcyAmJiBib2FyZERhdGEuTm90ZXMuZmlsdGVyKGVsZW0gPT4gIShvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAyICYmIGVsZW0uaWQgPT09IG9wZW5EZXRhaWwuaWQpKS5maW5kKGUgPT5cbiAgICAgICAgICAgICgoXG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoZS54ICogZGVmYXVsdFJlY3RTaXplLCByUG9zLngsIHJQb3MueCArIHJlY3RTaXplLndpZHRoKVxuICAgICAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoKGUueCArIGUud2lkdGgpICogZGVmYXVsdFJlY3RTaXplLCByUG9zLngsIHJQb3MueCArIHJlY3RTaXplLndpZHRoKVxuICAgICAgICAgICAgKSAmJiAoXG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoZS55ICogZGVmYXVsdFJlY3RTaXplLCByUG9zLnksIHJQb3MueSArIHJlY3RTaXplLmhlaWdodClcbiAgICAgICAgICAgICAgICB8fFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KChlLnkgKyBlLmhlaWdodCkgKiBkZWZhdWx0UmVjdFNpemUsIHJQb3MueSwgclBvcy55ICsgcmVjdFNpemUuaGVpZ2h0KVxuICAgICAgICApKVxuICAgICAgICB8fFxuICAgICAgICAoKFxuICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoZS54ICogZGVmYXVsdFJlY3RTaXplLCByUG9zLngsIHJQb3MueCArIHJlY3RTaXplLndpZHRoKVxuICAgICAgICAgICAgfHxcbiAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KChlLnggKyBlLndpZHRoKSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy54LCByUG9zLnggKyByZWN0U2l6ZS53aWR0aClcbiAgICAgICAgICAgICkgJiYgKFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KHJQb3MueSwgZS55ICogZGVmYXVsdFJlY3RTaXplLCAoZS55ICsgZS5oZWlnaHQpICogZGVmYXVsdFJlY3RTaXplKVxuICAgICAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoclBvcy55ICsgcmVjdFNpemUuaGVpZ2h0LCBlLnkgKiBkZWZhdWx0UmVjdFNpemUsIChlLnkgKyBlLmhlaWdodCkgKiBkZWZhdWx0UmVjdFNpemUpXG4gICAgICAgICkpXG4gICAgICAgIHx8XG4gICAgICAgICgoXG4gICAgICAgICAgICAgICAgY2hlY2tWZXJ0ZXhJblJlY3QoclBvcy54LCBlLnggKiBkZWZhdWx0UmVjdFNpemUsIChlLnggKyBlLndpZHRoKSAqIGRlZmF1bHRSZWN0U2l6ZSlcbiAgICAgICAgICAgICAgICB8fFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KHJQb3MueCArIHJlY3RTaXplLndpZHRoLCBlLnggKiBkZWZhdWx0UmVjdFNpemUsIChlLnggKyBlLndpZHRoKSAqIGRlZmF1bHRSZWN0U2l6ZSlcbiAgICAgICAgICAgICkgJiYgKFxuICAgICAgICAgICAgICAgIGNoZWNrVmVydGV4SW5SZWN0KGUueSAqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy55LCByUG9zLnkgKyByZWN0U2l6ZS5oZWlnaHQpXG4gICAgICAgICAgICAgICAgfHxcbiAgICAgICAgICAgICAgICBjaGVja1ZlcnRleEluUmVjdCgoZS55ICsgZS5oZWlnaHQpICogZGVmYXVsdFJlY3RTaXplLCByUG9zLnksIHJQb3MueSArIHJlY3RTaXplLmhlaWdodClcbiAgICAgICAgKSlcbiAgICApKVxuICAgICAgICAgICAgcmV0dXJuIChmYWxzZSk7XG4gICAgICAgIHJldHVybiAodHJ1ZSk7XG4gICAgfSwgW2JvYXJkRGF0YSwgclBvcywgZGVmYXVsdFJlY3RTaXplLCByZWN0U2l6ZSwgb3BlbkRldGFpbF0pO1xuXG4gICAgY29uc3QgdGVzdEYgPSAoeDpudW1iZXIsIHk6bnVtYmVyLCB3Om51bWJlciwgaDpudW1iZXIsIHJ4Om51bWJlciwgcnk6bnVtYmVyLCBydzpudW1iZXIsIHJoOm51bWJlcikgPT4ge1xuICAgICAgICBpZiAocnggPj0geCAmJiByeSA+PSB5ICYmIHJ4ICsgcncgPD0geCArIHcgJiYgcnkgKyByaCA8PSB5ICsgaClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcblxuICAgIGNvbnN0IGlzQXZhaWxQb3MgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmICghY2hlY2tBbGxCb3goKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKGJvYXJkRGF0YT8uVGV4dENvbnRlbnRzPy5maWx0ZXIoZWxlbSA9PiAhKG9wZW5EZXRhaWwuY2F0ZWdvcnkgPT09IDEgJiYgZWxlbS5pZCA9PT0gb3BlbkRldGFpbC5pZCkpLmZpbmQoKGUpID0+IChcbiAgICAgICAgICAgICF0ZXN0RihlLnggKiBkZWZhdWx0UmVjdFNpemUsIGUueSogZGVmYXVsdFJlY3RTaXplLCBlLndpZHRoKiBkZWZhdWx0UmVjdFNpemUsIGUuaGVpZ2h0KiBkZWZhdWx0UmVjdFNpemUsIHJQb3MueCwgclBvcy55LCByZWN0U2l6ZS53aWR0aCwgcmVjdFNpemUuaGVpZ2h0KVxuICAgICAgICApKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKGJvYXJkRGF0YT8uSW1hZ2VzPy5maWx0ZXIoZWxlbSA9PiAhKG9wZW5EZXRhaWwuY2F0ZWdvcnkgPT09IDMgJiYgZWxlbS5pZCA9PT0gb3BlbkRldGFpbC5pZCkpLmZpbmQoKGUpID0+IChcbiAgICAgICAgICAgICF0ZXN0RihlLnggKiBkZWZhdWx0UmVjdFNpemUsIGUueSogZGVmYXVsdFJlY3RTaXplLCBlLndpZHRoKiBkZWZhdWx0UmVjdFNpemUsIGUuaGVpZ2h0KiBkZWZhdWx0UmVjdFNpemUsIHJQb3MueCwgclBvcy55LCByZWN0U2l6ZS53aWR0aCwgcmVjdFNpemUuaGVpZ2h0KVxuICAgICAgICApKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKGJvYXJkRGF0YT8uTm90ZXM/LmZpbHRlcihlbGVtID0+ICEob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMiAmJiBlbGVtLmlkID09PSBvcGVuRGV0YWlsLmlkKSkuZmluZCgoZSkgPT4gKFxuICAgICAgICAgICAgIXRlc3RGKGUueCAqIGRlZmF1bHRSZWN0U2l6ZSwgZS55KiBkZWZhdWx0UmVjdFNpemUsIGUud2lkdGgqIGRlZmF1bHRSZWN0U2l6ZSwgZS5oZWlnaHQqIGRlZmF1bHRSZWN0U2l6ZSwgclBvcy54LCByUG9zLnksIHJlY3RTaXplLndpZHRoLCByZWN0U2l6ZS5oZWlnaHQpXG4gICAgICAgICkpKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LCBbYm9hcmREYXRhLCByUG9zLCByZWN0U2l6ZSwgZGVmYXVsdFJlY3RTaXplLCBvcGVuRGV0YWlsXSk7XG5cbiAgICBjb25zdCBvcGVuQWRkQ29tcG9uZW50ID0gdXNlQ2FsbGJhY2soKG51bWJlcjpudW1iZXIpID0+IHtcbiAgICAgICAgaWYgKCFjaGVja0FsbEJveCgpKVxuICAgICAgICAgICAgc2V0V2FybmluZygn6rK57LmY64qUIOyYgeyXreydtCDsobTsnqztlanri4jri6QuJyk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHZpZXdBZGRDb21wb25lbnQobnVtYmVyKTtcbiAgICB9LCBbcmVjdFNpemUsIHJQb3MsIGRlZmF1bHRSZWN0U2l6ZSwgcmVjdFNpemVdKTtcblxuICAgIGNvbnN0IGluaXRTdGF0ZXMgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHNldFJlY3RTaXplKHtcbiAgICAgICAgICAgIHdpZHRoOiBkZWZhdWx0UmVjdFNpemUsXG4gICAgICAgICAgICBoZWlnaHQ6IGRlZmF1bHRSZWN0U2l6ZSxcbiAgICAgICAgfSlcbiAgICAgICAgc2V0RHJhZ2dlZCh7XG4gICAgICAgICAgICAuLi5pc0RyYWdnZWQsIGRyYWdnZWQ6IGZhbHNlXG4gICAgICAgIH0pXG4gICAgICAgIHNldE1lbnUoe1xuICAgICAgICAgICAgLi4ubWVudVN0YXRlLCBmbGc6IGZhbHNlLFxuICAgICAgICB9KVxuICAgICAgICBzZXRBZGQoMCk7XG4gICAgICAgIHNldFdhcm5pbmcoJycpO1xuICAgIH0sIFtkZWZhdWx0UmVjdFNpemUsIGlzRHJhZ2dlZCwgbWVudVN0YXRlXSk7XG5cbiAgICBjb25zdCBvcGVuRGV0YWlsV2luZG93ID0gdXNlQ2FsbGJhY2soKGNhdGVnb3J5LCBpZCwgY29udGVudCkgPT4ge1xuICAgICAgICBzZXRPcGVuRGV0YWlsKHtcbiAgICAgICAgICAgIC4uLm9wZW5EZXRhaWwsXG4gICAgICAgICAgICBmbGc6IHRydWUsXG4gICAgICAgICAgICBjYXRlZ29yeTogY2F0ZWdvcnksXG4gICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICBjb250ZW50OiBjb250ZW50LFxuICAgICAgICB9KTtcbiAgICAgICAgc2V0Q29tbWVudHMoY29udGVudC5Db21tZW50cyk7XG4gICAgfSwgW29wZW5EZXRhaWxdKTtcblxuICAgIGNvbnN0IHN1Ym1pdENvbW1lbnQgPSB1c2VDYWxsYmFjaygoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmIChjb21tZW50Q29udGVudCAhPT0gJycpIHtcbiAgICAgICAgICAgIGF4aW9zLnBvc3QoYC9hcGkvYm9hcmQvJHtib2FyZH0vY29tbWVudC8ke29wZW5EZXRhaWwuY2F0ZWdvcnl9LyR7b3BlbkRldGFpbC5jb250ZW50Py5pZH1gLCB7XG4gICAgICAgICAgICAgICAgY29udGVudDogY29tbWVudENvbnRlbnRcbiAgICAgICAgICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHNldENDKCcnKTtcbiAgICAgICAgICAgICAgICBkYXRhUmV2YWwoKTtcbiAgICAgICAgICAgIH0pLiBjYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfSwgW2NvbW1lbnRDb250ZW50LCBvcGVuRGV0YWlsXSk7XG5cbiAgICBjb25zdCBkZWxldGVCb3ggPSB1c2VDYWxsYmFjaygoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmICghY29uZmlybSgn7KCV66eQIOyCreygnO2VmOyLnOqyoOyKteuLiOq5jD8nKSlcbiAgICAgICAgICAgIHJldHVybiA7XG4gICAgICAgIGxldCBjYXRlZ29yeSA9ICcnO1xuICAgICAgICBpZiAob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMSlcbiAgICAgICAgICAgIGNhdGVnb3J5ID0gJ3RleHQnO1xuICAgICAgICBlbHNlIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAyKVxuICAgICAgICAgICAgY2F0ZWdvcnkgPSAnbm90ZSc7XG4gICAgICAgIGVsc2UgaWYgKG9wZW5EZXRhaWwuY2F0ZWdvcnkgPT09IDMpXG4gICAgICAgICAgICBjYXRlZ29yeSA9ICdpbWFnZSc7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiA7XG4gICAgICAgIGF4aW9zLmRlbGV0ZShgYXBpL2JvYXJkLyR7Ym9hcmR9L2RlbGV0ZS8ke2NhdGVnb3J5fS8ke29wZW5EZXRhaWwuY29udGVudD8uaWR9YCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBkYXRhUmV2YWwoKTtcbiAgICAgICAgICAgIHNldE9wZW5EZXRhaWwoe1xuICAgICAgICAgICAgICAgIGNhdGVnb3J5OiAwLFxuICAgICAgICAgICAgICAgIGlkOiAwLFxuICAgICAgICAgICAgICAgIGZsZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgbG9hZENvbW1lbnQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG51bGwsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRvYXN0LmRhcmsoYOqyjOyLnOusvOydtCDsgq3soJzrkJjsl4jsirXri4jri6QuYCk7XG4gICAgICAgIH0pLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICB9KVxuICAgIH0sIFtvcGVuRGV0YWlsXSk7XG5cbiAgICBjb25zdCBvbkVkaXQgPSB1c2VDYWxsYmFjaygoY2lkKSA9PiB7XG4gICAgICAgIHNldElzRWRpdCghaXNFZGl0KTtcbiAgICAgICAgaWYgKGlzRWRpdCkge1xuICAgICAgICAgICAgc2V0VGV4dCgnJyk7XG4gICAgICAgICAgICBzZXRIZWFkKCcnKTtcbiAgICAgICAgICAgIHNldEVkaXRVcmwoJycpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNpZCA9PT0gMSlcbiAgICAgICAge1xuICAgICAgICAgICAgc2V0VGV4dCh0eXBlb2Ygb3BlbkRldGFpbC5jb250ZW50Py5jb250ZW50ID09PSAnc3RyaW5nJyA/IG9wZW5EZXRhaWwuY29udGVudD8uY29udGVudCA6ICcnKTtcbiAgICAgICAgICAgIGlmIChpc0VkaXQpIHNldFRBSChgJHt0ZXh0U2Nyb2xsUmVmLmN1cnJlbnQuc2Nyb2xsSGVpZ2h0fXB4YCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2lkID09PSAyKVxuICAgICAgICB7XG4gICAgICAgICAgICBzZXRIZWFkKHR5cGVvZiBvcGVuRGV0YWlsLmNvbnRlbnQ/LmhlYWQgPT09ICdzdHJpbmcnID8gb3BlbkRldGFpbC5jb250ZW50Py5oZWFkIDogJycpO1xuICAgICAgICAgICAgc2V0VGV4dCh0eXBlb2Ygb3BlbkRldGFpbC5jb250ZW50Py5wYXJhZ3JhcGggPT09ICdzdHJpbmcnID8gb3BlbkRldGFpbC5jb250ZW50Py5wYXJhZ3JhcGggOiAnJyk7XG4gICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgICAgICBpbWFnZVVSTDogdHlwZW9mIG9wZW5EZXRhaWwuY29udGVudD8uYmFja2dyb3VuZF9pbWcgPT09ICdzdHJpbmcnID8gb3BlbkRldGFpbC5jb250ZW50Py5iYWNrZ3JvdW5kX2ltZyA6ICcnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoaXNFZGl0KSBzZXRUQUgoYCR7dGV4dFNjcm9sbFJlZi5jdXJyZW50LnNjcm9sbEhlaWdodH1weGApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNpZCA9PT0gMylcbiAgICAgICAge1xuICAgICAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgICAgICAuLi51cGxvYWRpbmcsXG4gICAgICAgICAgICAgICAgaW1hZ2VVUkw6IHR5cGVvZiBvcGVuRGV0YWlsLmNvbnRlbnQ/LnVybCA9PT0gJ3N0cmluZycgPyBvcGVuRGV0YWlsLmNvbnRlbnQ/LnVybCA6ICcnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9LCBbaXNFZGl0LCBvcGVuRGV0YWlsLCB0ZXh0U2Nyb2xsUmVmXSk7XG5cbiAgICBjb25zdCBbVEFILCBzZXRUQUhdID0gdXNlU3RhdGUoJ2F1dG8nKTtcblxuICAgIGNvbnN0IE9DVGV4dCA9IHVzZUNhbGxiYWNrKChlKSA9PiB7XG4gICAgICAgIHNldFRBSChgJHt0ZXh0U2Nyb2xsUmVmLmN1cnJlbnQuc2Nyb2xsSGVpZ2h0fXB4YCk7XG4gICAgICAgIHNldFRleHQoZS50YXJnZXQudmFsdWUpO1xuICAgIH0sIFt0ZXh0U2Nyb2xsUmVmXSk7XG5cbiAgICBjb25zdCBvbkluaXRDb250ZW50ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBzZXRPcGVuRGV0YWlsKHtcbiAgICAgICAgICAgIGNhdGVnb3J5OiAwLFxuICAgICAgICAgICAgaWQ6IDAsXG4gICAgICAgICAgICBmbGc6IGZhbHNlLFxuICAgICAgICAgICAgbG9hZENvbW1lbnQ6IGZhbHNlLFxuICAgICAgICAgICAgY29udGVudDogbnVsbCxcbiAgICAgICAgfSlcbiAgICAgICAgc2V0SGVhZCgnJyk7XG4gICAgICAgIHNldFRleHQoJycpO1xuICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICcnLFxuICAgICAgICAgICAgaW1hZ2VVUkw6ICcnXG4gICAgICAgIH0pO1xuICAgICAgICBzZXRJc0VkaXQoZmFsc2UpO1xuICAgIH0sIFtdKTtcblxuICAgIGNvbnN0IGNlbmNlbEVkaXQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIHNldEhlYWQoJycpO1xuICAgICAgICBzZXRUZXh0KCcnKTtcbiAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBtZXNzYWdlOiAnJyxcbiAgICAgICAgICAgIGltYWdlVVJMOiAnJ1xuICAgICAgICB9KTtcbiAgICAgICAgc2V0SXNFZGl0KGZhbHNlKTtcbiAgICB9LCBbXSk7XG5cbiAgICBjb25zdCBvbkNsaWNrSW1hZ2VVcGxvYWQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG5cdFx0aW1hZ2VJbnB1dC5jdXJyZW50LmNsaWNrKCk7XG4gICAgfSwgW2ltYWdlSW5wdXQuY3VycmVudF0pO1xuXG4gICAgY29uc3Qgb25DaGFuZ2VJbWcgPSB1c2VDYWxsYmFjayggYXN5bmMgKGUpID0+IHtcblx0XHRjb25zdCBpbWFnZUZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIGltYWdlRm9ybURhdGEuYXBwZW5kKCdpbWFnZScsIGUudGFyZ2V0LmZpbGVzWzBdKTtcbiAgICAgICAgYXdhaXQgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgIGxvYWRpbmc6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IGF4aW9zLnBvc3QoJy9hcGkvdXBsb2FkSW1hZ2UnLCBpbWFnZUZvcm1EYXRhLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7J0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJ31cbiAgICAgICAgfSkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgc2V0VXBsb2FkaW5nKHtcbiAgICAgICAgICAgICAgICAuLi51cGxvYWRpbmcsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpbWFnZVVSTDogcmVzLmRhdGEudXJsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBzZXRVcGxvYWRpbmcoe1xuICAgICAgICAgICAgICAgIC4uLnVwbG9hZGluZyxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlLnJlc3BvbnNlLmRhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgIH0sIFtdKTtcblxuICAgIGNvbnN0IG9uU3VibWl0RWRpdCA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICAgICAgbGV0IHJlcXVlc3RVUkwgPSAnJztcbiAgICAgICAgbGV0IGRhdGEgPSB7XG4gICAgICAgICAgICB4OiBvcGVuRGV0YWlsLmNvbnRlbnQ/LngsXG4gICAgICAgICAgICB5OiBvcGVuRGV0YWlsLmNvbnRlbnQ/LnksXG4gICAgICAgICAgICB3aWR0aDogb3BlbkRldGFpbC5jb250ZW50Py53aWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogb3BlbkRldGFpbC5jb250ZW50Py5oZWlnaHQsXG4gICAgICAgICAgICBjb250ZW50OiAnJyxcbiAgICAgICAgICAgIGhlYWQ6ICcnLFxuICAgICAgICAgICAgcGFyYWdyYXBoOiAnJyxcbiAgICAgICAgICAgIGJhY2tncm91bmRfaW1nOiAnJyxcbiAgICAgICAgICAgIHVybDogJycsXG4gICAgICAgIH07XG4gICAgICAgIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAxKSB7XG4gICAgICAgICAgICByZXF1ZXN0VVJMID0gYC9hcGkvYm9hcmQvJHtib2FyZH0vdGV4dC8ke29wZW5EZXRhaWwuaWR9YDtcbiAgICAgICAgICAgIGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgICAgICAgICBjb250ZW50OiB0ZXh0XG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2UgaWYgKG9wZW5EZXRhaWwuY2F0ZWdvcnkgPT09IDIpIHtcbiAgICAgICAgICAgIHJlcXVlc3RVUkwgPSBgL2FwaS9ib2FyZC8ke2JvYXJkfS9ub3RlLyR7b3BlbkRldGFpbC5pZH1gO1xuICAgICAgICAgICAgZGF0YSA9IHtcbiAgICAgICAgICAgICAgICAuLi5kYXRhLFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRfaW1nOiB1cGxvYWRpbmcuaW1hZ2VVUkwsXG4gICAgICAgICAgICAgICAgaGVhZDogaGVhZCxcbiAgICAgICAgICAgICAgICBwYXJhZ3JhcGg6IHRleHRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMykge1xuICAgICAgICAgICAgaWYgKHVwbG9hZGluZy5pbWFnZVVSTCA9PT0gJycpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYXdhaXQgc2V0V2FybmluZygn7J2066+47KeA66W8IOuLpOyLnCDsl4XroZzrk5ztlbTso7zshLjsmpQnKTtcbiAgICAgICAgICAgICAgICBhd2FpdCBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0V2FybmluZygnJyk7XG4gICAgICAgICAgICAgICAgfSwgMjAwMCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcXVlc3RVUkwgPSBgL2FwaS9ib2FyZC8ke2JvYXJkfS9pbWFnZS8ke29wZW5EZXRhaWwuaWR9YDtcbiAgICAgICAgICAgIGRhdGEgPSB7IC4uLmRhdGEsIHVybDogdXBsb2FkaW5nLmltYWdlVVJMIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhd2FpdCBzZXRXYXJuaW5nKCfsnpjrqrvrkJwg7KCR6re87J6F64uI64ukLicpO1xuICAgICAgICAgICAgYXdhaXQgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgc2V0V2FybmluZygnJyk7XG4gICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgIHJldHVybiA7XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgYXhpb3MucGF0Y2gocmVxdWVzdFVSTCwgZGF0YSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBzZXRPcGVuRGV0YWlsKHtcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogMCxcbiAgICAgICAgICAgICAgICBpZDogMCxcbiAgICAgICAgICAgICAgICBmbGc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGxvYWRDb21tZW50OiBmYWxzZSxcbiAgICAgICAgICAgICAgICBjb250ZW50OiBudWxsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0b2FzdC5kYXJrKGDqsozsi5zrrLzsnbQg7IiY7KCV65CY7JeI7Iq164uI64ukLmApO1xuICAgICAgICAgICAgZGF0YVJldmFsKCk7XG4gICAgICAgIH0pLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICBzZXRXYXJuaW5nKGUucmVzcG9uc2UuZGF0YS5yZWFzb24pO1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgc2V0V2FybmluZygnJyk7XG4gICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNlbmNlbEVkaXQoKTtcbiAgICB9LCBbdGV4dCwgaGVhZCwgb3BlbkRldGFpbCwgdXBsb2FkaW5nXSk7XG5cbiAgICBjb25zdCBtb3ZlTW9kZSA9IHVzZUNhbGxiYWNrKCggKSA9PiB7XG4gICAgICAgIGlmIChvcGVuRGV0YWlsLmNvbnRlbnQpXG4gICAgICAgIHtcbiAgICAgICAgICAgIHNldE1lbnUoey4uLm1lbnVTdGF0ZSwgZmxnOiBmYWxzZSwgZGlzcDogZmFsc2V9KTtcbiAgICAgICAgICAgIHNldE9wZW5EZXRhaWwoe1xuICAgICAgICAgICAgICAgIC4uLm9wZW5EZXRhaWwsIGZsZzogZmFsc2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc2V0Q2FuTW92ZSh0cnVlKTtcbiAgICAgICAgICAgIHNldFJQb3Moe1xuICAgICAgICAgICAgICAgIHg6IG9wZW5EZXRhaWwuY29udGVudC54ICogZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgICAgIHk6IG9wZW5EZXRhaWwuY29udGVudC55ICogZGVmYXVsdFJlY3RTaXplXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNldFJlY3RTaXplKHtcbiAgICAgICAgICAgICAgICB3aWR0aDogb3BlbkRldGFpbC5jb250ZW50LndpZHRoICogZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgICAgIGhlaWdodDogb3BlbkRldGFpbC5jb250ZW50LmhlaWdodCAqIGRlZmF1bHRSZWN0U2l6ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwgW29wZW5EZXRhaWwsIGRlZmF1bHRSZWN0U2l6ZV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGFkZFN0YXRlID09IDAgJiYgIWNhbk1vdmUpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlmIChpc0RyYWdnZWQuZHJhZ2dlZClcbiAgICAgICAgICAgICAgICBnZXRSZWN0U2l6ZSgpO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0UlBvcyh7XG4gICAgICAgICAgICAgICAgICAgIHg6IG1Qb3MueCAtIG1Qb3MueCAlIGRlZmF1bHRSZWN0U2l6ZSxcbiAgICAgICAgICAgICAgICAgICAgeTogbVBvcy55IC0gbVBvcy55ICUgZGVmYXVsdFJlY3RTaXplXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIFttUG9zLCBpc0RyYWdnZWQsIGFkZFN0YXRlLCBkZWZhdWx0UmVjdFNpemUsIGNhbk1vdmVdKTtcblxuICAgIGNvbnN0IG1vdXNlTW92ZSA9IChlOmFueSkgPT4ge1xuICAgICAgICBpZiAoIW1lbnVTdGF0ZS5mbGcpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGxheWVyUmVmLmN1cnJlbnQuZ2V0QWJzb2x1dGVUcmFuc2Zvcm0oKS5jb3B5KCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm0uaW52ZXJ0KCk7XG4gICAgICAgICAgICBjb25zdCBwb3MgPSBlLnRhcmdldC5nZXRTdGFnZSgpPy5nZXRQb2ludGVyUG9zaXRpb24oKTtcbiAgICAgICAgICAgIHNldE1Qb3Moe1xuICAgICAgICAgICAgICAgIHg6IHBvcz8ueCBhcyBudW1iZXIsXG4gICAgICAgICAgICAgICAgeTogcG9zPy55IGFzIG51bWJlcixcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgbW91c2VEb3duID0gKCkgPT4ge1xuICAgICAgICBpZiAoYWRkU3RhdGUgPT09IDAgJiYgIWNhbk1vdmUpXG4gICAgICAgICAgICBzZXREcmFnZ2VkKHtcbiAgICAgICAgICAgICAgICB4OiBtUG9zLngsXG4gICAgICAgICAgICAgICAgeTogbVBvcy55LFxuICAgICAgICAgICAgICAgIGRyYWdnZWQ6IHRydWUsXG4gICAgICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IG1vdXNlVXAgPSAoKSA9PiB7XG4gICAgICAgIGlmIChjYW5Nb3ZlKVxuICAgICAgICAgICAgcmV0dXJuIDtcbiAgICAgICAgZWxzZSBpZiAoIW1lbnVTdGF0ZS5mbGcgJiYgYWRkU3RhdGUgPT0gMClcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgbVggPSBtUG9zLnggPiB3aW5kb3cuaW5uZXJXaWR0aCAtIDE0MCA/IG1Qb3MueCAtIDE0MCA6IG1Qb3MueDtcbiAgICAgICAgICAgIGNvbnN0IG1ZID0gbVBvcy55ID4gd2luZG93LmlubmVySGVpZ2h0IC0gMTQwID8gbVBvcy55IC0gMTQwIDogbVBvcy55O1xuICAgICAgICAgICAgc2V0TWVudSh7XG4gICAgICAgICAgICAgICAgeDogbVgsXG4gICAgICAgICAgICAgICAgeTogbVksXG4gICAgICAgICAgICAgICAgZmxnOiB0cnVlLFxuICAgICAgICAgICAgICAgIGRpc3A6IHRydWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGluaXRTdGF0ZXMoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBVcGRhdGVQb3NpdGlvbiA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgaWYgKCFpc0F2YWlsUG9zKCkpXG4gICAgICAgICAgICByZXR1cm4gc2V0V2FybmluZygn7J2064+Z7ZWgIOyImCDsl4bripQg7JyE7LmY7J6F64uI64ukLicpO1xuICAgICAgICBsZXQgcmVxdWVzdFVSTCA9ICcnO1xuICAgICAgICBjb25zdCBzZWxlY3RXaWR0aCA9IHJlY3RTaXplLndpZHRoIC8gZGVmYXVsdFJlY3RTaXplO1xuICAgICAgICBjb25zdCBzZWxlY3RIZWlnaHQgPSByZWN0U2l6ZS5oZWlnaHQgLyBkZWZhdWx0UmVjdFNpemU7XG4gICAgICAgIGlmICgoc2VsZWN0SGVpZ2h0ICogc2VsZWN0V2lkdGgpIDwgNClcbiAgICAgICAgICAgIHJldHVybiBzZXRXYXJuaW5nKCfstZzshowgNOy5uOydmCDsmIHsl63snYQg7ISg7YOd7ZW07JW87ZWp64uI64ukLicpO1xuICAgICAgICBlbHNlIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAzICYmIChzZWxlY3RIZWlnaHQgKiBzZWxlY3RXaWR0aCkgPCA2KVxuICAgICAgICAgICAgcmV0dXJuIHNldFdhcm5pbmcoJ+ydtOuvuOyngOuKlCDstZzshowgNuy5uOydmCDsmIHsl63snYQg7ISg7YOd7ZW07JW87ZWp64uI64ukLicpO1xuICAgICAgICBlbHNlIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAyICYmIChzZWxlY3RIZWlnaHQgKiBzZWxlY3RXaWR0aCkgPCAyMClcbiAgICAgICAgICAgIHJldHVybiBzZXRXYXJuaW5nKCfrhbjtirjripQg7LWc7IaMIDIw7Lm47J207IOB7J2YIOyYgeyXreydhCDshKDtg53tlbTslbztlanri4jri6QuJyk7XG4gICAgICAgIGVsc2UgaWYgKG9wZW5EZXRhaWwuY2F0ZWdvcnkgPT09IDIgJiYgKHNlbGVjdEhlaWdodCA8IDMgfHwgc2VsZWN0V2lkdGggPCA0KSlcbiAgICAgICAgICAgIHJldHVybiBzZXRXYXJuaW5nKCfrhbjtirjripQgNHgz7J207IOB7J2YIOyYgeyXreydhCDshKDtg53tlbTslbztlanri4jri6QuJyk7XG4gICAgICAgIGxldCBkYXRhID0ge1xuICAgICAgICAgICAgeDogclBvcy54IC8gZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgeTogclBvcy55IC8gZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgd2lkdGg6IHJlY3RTaXplLndpZHRoIC8gZGVmYXVsdFJlY3RTaXplLFxuICAgICAgICAgICAgaGVpZ2h0OiByZWN0U2l6ZS5oZWlnaHQgLyBkZWZhdWx0UmVjdFNpemUsXG4gICAgICAgICAgICBjb250ZW50OiBvcGVuRGV0YWlsLmNvbnRlbnQ/LmNvbnRlbnQsXG4gICAgICAgICAgICBoZWFkOiBvcGVuRGV0YWlsLmNvbnRlbnQ/LmhlYWQsXG4gICAgICAgICAgICBwYXJhZ3JhcGg6IG9wZW5EZXRhaWwuY29udGVudD8ucGFyYWdyYXBoLFxuICAgICAgICAgICAgYmFja2dyb3VuZF9pbWc6IG9wZW5EZXRhaWwuY29udGVudD8uYmFja2dyb3VuZF9pbWcsXG4gICAgICAgICAgICB1cmw6IG9wZW5EZXRhaWwuY29udGVudD8udXJsLFxuICAgICAgICB9O1xuICAgICAgICBpZiAob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMSkge1xuICAgICAgICAgICAgcmVxdWVzdFVSTCA9IGAvYXBpL2JvYXJkLyR7Ym9hcmR9L3RleHQvJHtvcGVuRGV0YWlsLmlkfWA7XG4gICAgICAgIH0gZWxzZSBpZiAob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMikge1xuICAgICAgICAgICAgcmVxdWVzdFVSTCA9IGAvYXBpL2JvYXJkLyR7Ym9hcmR9L25vdGUvJHtvcGVuRGV0YWlsLmlkfWA7XG4gICAgICAgIH0gZWxzZSBpZiAob3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMykge1xuICAgICAgICAgICAgcmVxdWVzdFVSTCA9IGAvYXBpL2JvYXJkLyR7Ym9hcmR9L2ltYWdlLyR7b3BlbkRldGFpbC5pZH1gO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXdhaXQgc2V0V2FybmluZygn7J6Y66q765CcIOygkeq3vOyeheuLiOuLpC4nKTtcbiAgICAgICAgICAgIGF3YWl0IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHNldFdhcm5pbmcoJycpO1xuICAgICAgICAgICAgfSwgMjAwMCk7XG4gICAgICAgICAgICByZXR1cm4gO1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IGF4aW9zLnBhdGNoKHJlcXVlc3RVUkwsIGRhdGEpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgZGF0YVJldmFsKCk7XG4gICAgICAgICAgICBvbkluaXRDb250ZW50KCk7XG4gICAgICAgICAgICBzZXRXYXJuaW5nKCcnKTtcbiAgICAgICAgICAgIHNldENhbk1vdmUoZmFsc2UpO1xuICAgICAgICAgICAgaWYgKHJlcy5kYXRhID09PSBmYWxzZSlcbiAgICAgICAgICAgICAgICB0b2FzdC5kYXJrKCfqsozsi5zrrLzsnbQg7IiY7KCV65CY7JeI7Iq164uI64ukLicpO1xuICAgICAgICAgICAgZWxzZSB0b2FzdC5kYXJrKGDrgqjsnYAg7Lm47J2AICR7cmVzLmRhdGF97Lm4IOyeheuLiOuLpC5gKTtcbiAgICAgICAgICAgIGluaXRTdGF0ZXMoKTtcbiAgICAgICAgfSkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIHNldFdhcm5pbmcoZS5yZXNwb25zZS5kYXRhLnJlYXNvbik7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBzZXRXYXJuaW5nKCcnKTtcbiAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICB9KTtcbiAgICAgICAgYXhpb3MucGF0Y2hcbiAgICB9XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoYWRkU3RhdGUgIT09IDApXG4gICAgICAgICAgICBzZXRNZW51KHtcbiAgICAgICAgICAgICAgICAuLi5tZW51U3RhdGUsIGZsZzogZmFsc2VcbiAgICAgICAgICAgIH0pO1xuICAgIH0sIFthZGRTdGF0ZV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgbGV0IGVkaXRlZENvbnRlbnQ7XG4gICAgICAgIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAxKSB7XG4gICAgICAgICAgICBlZGl0ZWRDb250ZW50ID0gYm9hcmREYXRhPy5UZXh0Q29udGVudHMuZmluZCh2ID0+IHYuaWQgPT09IG9wZW5EZXRhaWwuaWQpPy5Db21tZW50cztcbiAgICAgICAgfSBlbHNlIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAyKSB7XG4gICAgICAgICAgICBlZGl0ZWRDb250ZW50ID0gYm9hcmREYXRhPy5Ob3Rlcz8uZmluZCh2ID0+IHYuaWQgPT09IG9wZW5EZXRhaWwuaWQpPy5Db21tZW50cztcbiAgICAgICAgfSBlbHNlIGlmIChvcGVuRGV0YWlsLmNhdGVnb3J5ID09PSAzKSB7XG4gICAgICAgICAgICBlZGl0ZWRDb250ZW50ID0gYm9hcmREYXRhPy5JbWFnZXM/LmZpbmQodiA9PiB2LmlkID09PSBvcGVuRGV0YWlsLmlkKT8uQ29tbWVudHM7XG4gICAgICAgIH1cbiAgICAgICAgc2V0Q29tbWVudHMoZWRpdGVkQ29udGVudCk7XG4gICAgfSwgW2JvYXJkRGF0YSwgb3BlbkRldGFpbF0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEtvbnZhQ29udGFpbmVyPlxuICAgICAgICAgICAge3dhcm5pbmcgIT09ICcnJiZcbiAgICAgICAgICAgICAgICA8V2Fybk1lc3NhZ2U+XG4gICAgICAgICAgICAgICAgICAgIHt3YXJuaW5nfVxuICAgICAgICAgICAgICAgIDwvV2Fybk1lc3NhZ2U+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7b3BlbkRldGFpbC5mbGcgJiZcbiAgICAgICAgICAgICAgICA8RGV0YWlsQmFja2dyb3VuZFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkluaXRDb250ZW50fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICA8RGV0YWlsV2luZG93IHN0eWxlPXtkZXRhaWxXaW5kb3dTdHlsZX0+XG4gICAgICAgICAgICAgICAgPERldGFpbEJveD5cbiAgICAgICAgICAgICAgICAgICAgeyBvcGVuRGV0YWlsLmlkICE9PSAwICYmXG4gICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgIDxUb3BGaXhDb250ZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFVzZXJJbmZvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtvcGVuRGV0YWlsLmNvbnRlbnQ/LlVzZXIucHJvZmlsZV9pbWd9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e29wZW5EZXRhaWwuY29udGVudD8uVXNlci51c2VybmFtZX08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyggdXNlckRhdGEuaXNfYWRtaW4gfHwgKG9wZW5EZXRhaWwuY29udGVudCAmJiBvcGVuRGV0YWlsLmNvbnRlbnQuVXNlcklkID09PSB1c2VyRGF0YS5pZCApKSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VURCdXR0b25Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25FZGl0KG9wZW5EZXRhaWwuY2F0ZWdvcnkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9lZGl0LnN2Z1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtkZWxldGVCb3h9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvcHVibGljL2RlbGV0ZS5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17bW92ZU1vZGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvcHVibGljL3Jlc2l6ZS5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVURCdXR0b25Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Vc2VySW5mbz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxNb21lbnRCb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj7snpHshLHsnbwgOiA8cD57ZGF5anMob3BlbkRldGFpbC5jb250ZW50Py5jcmVhdGVkQXQpLmZvcm1hdCgnWVlZWeuFhCBNTeyblCBEROydvCcpfTwvcD48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogPGRpdj7rp4zro4zsnbwgOiA8cD57ZGF5anMob3BlbkRldGFpbC5jb250ZW50Py5leHBpcnlfZGF0ZSkuZm9ybWF0KCdZWVlZ64WEIE1N7JuUIERE7J28Jyl9PC9wPjwvZGl2PiAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvTW9tZW50Qm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgQ29udGVudCA6XG4gICAgICAgICAgICAgICAgICAgICAgICA8RGV0YWlsQ29udGVudEJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7b3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoIWlzRWRpdCA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtvcGVuRGV0YWlsLmNvbnRlbnQ/LmNvbnRlbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3ByZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVkaXRBcmVhPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0ZXh0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e09DVGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZj17dGV4dFNjcm9sbFJlZn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7aGVpZ2h0OiBUQUh9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RWRpdEJ1dHRvbkJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidXR0b24gZWRpdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17b25TdWJtaXRFZGl0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuyImOyglTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17Y2VuY2VsRWRpdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7st6jshow8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9FZGl0QnV0dG9uQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRWRpdEFyZWE+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7b3BlbkRldGFpbC5jYXRlZ29yeSA9PT0gMiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoICFpc0VkaXQgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7b3BlbkRldGFpbC5jb250ZW50Py5iYWNrZ3JvdW5kX2ltZyAmJiA8aW1nIHNyYz17b3BlbkRldGFpbC5jb250ZW50Py5iYWNrZ3JvdW5kX2ltZ30gLz59XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7b3BlbkRldGFpbC5jb250ZW50Py5oZWFkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge29wZW5EZXRhaWwuY29udGVudD8ucGFyYWdyYXBofVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFZGl0QXJlYT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEltYWdlQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3VwbG9hZGluZy5pbWFnZVVSTCAhPT0gJycgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXt1cGxvYWRpbmcuaW1hZ2VVUkx9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGVtcFwiLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbWFnZUVkaXRCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrSW1hZ2VVcGxvYWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VJbnB1dD17aW1hZ2VJbnB1dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZUltZz17b25DaGFuZ2VJbWd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ltYWdlQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtoZWFkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e09DSGVhZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtPQ1RleHR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWY9e3RleHRTY3JvbGxSZWZ9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e2hlaWdodDogVEFIfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVkaXRCdXR0b25Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnV0dG9uIGVkaXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uU3VibWl0RWRpdH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7siJjsoJU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2NlbmNlbEVkaXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+7Leo7IaMPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRWRpdEJ1dHRvbkJveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0VkaXRBcmVhPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge29wZW5EZXRhaWwuY2F0ZWdvcnkgPT09IDMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKCAhaXNFZGl0ID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtvcGVuRGV0YWlsLmNvbnRlbnQ/LnVybH0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEVkaXRBcmVhPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VCb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz17dXBsb2FkaW5nLmltYWdlVVJMfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEltYWdlRWRpdEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2tJbWFnZVVwbG9hZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZUlucHV0PXtpbWFnZUlucHV0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlSW1nPXtvbkNoYW5nZUltZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvSW1hZ2VCb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFZGl0QnV0dG9uQm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ1dHRvbiBlZGl0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvblN1Ym1pdEVkaXR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+7IiY7KCVPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtjZW5jZWxFZGl0fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuy3qOyGjDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0VkaXRCdXR0b25Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9FZGl0QXJlYT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9EZXRhaWxDb250ZW50Qm94PlxuICAgICAgICAgICAgICAgICAgICA8L1RvcEZpeENvbnRlbnQ+XG4gICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7Ym9yZGVyQm90dG9tOiAnMXB4IHNvbGlkICM0NDQnLCBwYWRkaW5nOiAnLjVyZW0gMCd9fVxuICAgICAgICAgICAgICAgICAgICA+Q29tbWVudDo8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPENvbW1lbnRCb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICB7Y29tbWVudHM/Lm1hcCgoYywgaSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21tZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9eyhpKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2MuVXNlci5wcm9maWxlX2ltZ30gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPntjLlVzZXIudXNlcm5hbWV9PC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+e2MuY29udGVudH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2RheWpzKGMuY3JlYXRlZEF0KS5kaWZmKG5vdywgJ2RheScpID4gLTEgPyBkYXlqcyhjLmNyZWF0ZWRBdCkuZm9ybWF0KCdMVCcpIDogZGF5anMoYy5jcmVhdGVkQXQpLmZvcm1hdCgnWVlZWeuFhCBNTeyblCBEROydvCcpfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0NvbW1lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICA8L0NvbW1lbnRCb3g+XG4gICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L0RldGFpbEJveD5cbiAgICAgICAgICAgICAgICA8Qm90dG9tRml4Q29udGVudFxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtzdWJtaXRDb21tZW50fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y29tbWVudENvbnRlbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17T0NDQ31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uS2V5UHJlc3M9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWl0Q29tbWVudChlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB3aWR0aD1cIjI0XCI+PHBhdGggZD1cIk0wIDBoMjR2MjRIMHpcIiBmaWxsPVwibm9uZVwiLz48cGF0aCBkPVwiTTIuMDEgMjFMMjMgMTIgMi4wMSAzIDIgMTBsMTUgMi0xNSAyelwiLz48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9Cb3R0b21GaXhDb250ZW50PlxuICAgICAgICAgICAgPC9EZXRhaWxXaW5kb3c+XG4gICAgICAgICAgICA8TWVudUJveCBjbGlja2VkPXttZW51U3RhdGUuZmxnfSB4PXttZW51U3RhdGUueH0geT17bWVudVN0YXRlLnl9IGRpc3A9e21lbnVTdGF0ZS5kaXNwfT5cbiAgICAgICAgICAgICAgICA8TWVudUF0dHIgb25DbGljaz17KCkgPT4gb3BlbkFkZENvbXBvbmVudCgxKX0+VGV4dDwvTWVudUF0dHI+XG4gICAgICAgICAgICAgICAgPE1lbnVBdHRyIG9uQ2xpY2s9eygpID0+IG9wZW5BZGRDb21wb25lbnQoMil9Pk5vdGU8L01lbnVBdHRyPlxuICAgICAgICAgICAgICAgIDxNZW51QXR0ciBvbkNsaWNrPXsoKSA9PiBvcGVuQWRkQ29tcG9uZW50KDMpfT5JbWFnZTwvTWVudUF0dHI+XG4gICAgICAgICAgICA8L01lbnVCb3g+XG4gICAgICAgICAgICB7IGFkZFN0YXRlID09PSAxICYmXG4gICAgICAgICAgICAgICAgPFRleHRBZGRcbiAgICAgICAgICAgICAgICAgICAgdG9hc3Q9e3RvYXN0fVxuICAgICAgICAgICAgICAgICAgICB3aWR0aD17cmVjdFNpemUud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodD17cmVjdFNpemUuaGVpZ2h0fVxuICAgICAgICAgICAgICAgICAgICB4PXtyUG9zLnh9XG4gICAgICAgICAgICAgICAgICAgIHk9e3JQb3MueX1cbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0PXtvZmZzZXR9XG4gICAgICAgICAgICAgICAgICAgIGluaXRTdGF0ZXM9e2luaXRTdGF0ZXN9XG4gICAgICAgICAgICAgICAgICAgIGJvYXJkPXtib2FyZH1cbiAgICAgICAgICAgICAgICAgICAgLy8gZGF0YVJldmFsPXtkYXRhUmV2YWx9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHsgYWRkU3RhdGUgPT09IDIgJiZcbiAgICAgICAgICAgICAgICA8Tm90ZUFkZFxuICAgICAgICAgICAgICAgICAgICB0b2FzdD17dG9hc3R9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoPXtyZWN0U2l6ZS53aWR0aH1cbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PXtyZWN0U2l6ZS5oZWlnaHR9XG4gICAgICAgICAgICAgICAgICAgIHg9e3JQb3MueH1cbiAgICAgICAgICAgICAgICAgICAgeT17clBvcy55fVxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ9e29mZnNldH1cbiAgICAgICAgICAgICAgICAgICAgaW5pdFN0YXRlcz17aW5pdFN0YXRlc31cbiAgICAgICAgICAgICAgICAgICAgYm9hcmQ9e2JvYXJkfVxuICAgICAgICAgICAgICAgICAgICAvLyBkYXRhUmV2YWw9e2RhdGFSZXZhbH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeyBhZGRTdGF0ZSA9PT0gMyAmJlxuICAgICAgICAgICAgICAgIDxJbWFnZUFkZFxuICAgICAgICAgICAgICAgICAgICB0b2FzdD17dG9hc3R9XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoPXtyZWN0U2l6ZS53aWR0aH1cbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PXtyZWN0U2l6ZS5oZWlnaHR9XG4gICAgICAgICAgICAgICAgICAgIHg9e3JQb3MueH1cbiAgICAgICAgICAgICAgICAgICAgeT17clBvcy55fVxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ9e29mZnNldH1cbiAgICAgICAgICAgICAgICAgICAgaW5pdFN0YXRlcz17aW5pdFN0YXRlc31cbiAgICAgICAgICAgICAgICAgICAgYm9hcmQ9e2JvYXJkfVxuICAgICAgICAgICAgICAgICAgICAvLyBkYXRhUmV2YWw9e2RhdGFSZXZhbH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgeyBib2FyZERhdGE/LlRleHRDb250ZW50cyAgJiYgYm9hcmREYXRhPy5UZXh0Q29udGVudHMubWFwKChjLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgPENvbXBvbmVudEJveFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXsoaSl9XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0ge2RlZmF1bHRSZWN0U2l6ZSAqIGMud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IHtkZWZhdWx0UmVjdFNpemUgKiBjLmhlaWdodH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHg9IHtkZWZhdWx0UmVjdFNpemUgKiBjLnh9XG4gICAgICAgICAgICAgICAgICAgICAgICB5PSB7ZGVmYXVsdFJlY3RTaXplICogYy55fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dENvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9wZW5EZXRhaWxXaW5kb3coMSwgYy5pZCwgYyl9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2MuY29udGVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QWx0Qm94IGNsYXNzTmFtZT1cImFsdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Yy5Vc2VyLnVzZXJuYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQWx0Qm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0Q29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICA8L0NvbXBvbmVudEJveD5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICB7Ym9hcmREYXRhPy5JbWFnZXMgJiYgYm9hcmREYXRhPy5JbWFnZXMubWFwKChjLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgPENvbXBvbmVudEJveFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXsoaSl9XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0ge2RlZmF1bHRSZWN0U2l6ZSAqIGMud2lkdGh9XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IHtkZWZhdWx0UmVjdFNpemUgKiBjLmhlaWdodH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHg9IHtkZWZhdWx0UmVjdFNpemUgKiBjLnh9XG4gICAgICAgICAgICAgICAgICAgICAgICB5PSB7ZGVmYXVsdFJlY3RTaXplICogYy55fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvcGVuRGV0YWlsV2luZG93KDMsIGMuaWQsIGMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBbHRCb3ggY2xhc3NOYW1lPVwiYWx0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjLlVzZXIudXNlcm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9BbHRCb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2MudXJsfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9JbWFnZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPC9Db21wb25lbnRCb3g+XG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICB7Ym9hcmREYXRhPy5Ob3RlcyAmJiBib2FyZERhdGE/Lk5vdGVzLm1hcCgoYywgaSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxDb21wb25lbnRCb3hcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17KGkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IHtkZWZhdWx0UmVjdFNpemUgKiBjLndpZHRofVxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSB7ZGVmYXVsdFJlY3RTaXplICogYy5oZWlnaHR9XG4gICAgICAgICAgICAgICAgICAgICAgICB4PSB7ZGVmYXVsdFJlY3RTaXplICogYy54fVxuICAgICAgICAgICAgICAgICAgICAgICAgeT0ge2RlZmF1bHRSZWN0U2l6ZSAqIGMueX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPE5vdGVDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvcGVuRGV0YWlsV2luZG93KDIsIGMuaWQsIGMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz17Yy5iYWNrZ3JvdW5kX2ltZyA/IGMuYmFja2dyb3VuZF9pbWcgOiAnJ31cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QWx0Qm94IGNsYXNzTmFtZT1cImFsdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Yy5Vc2VyLnVzZXJuYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQWx0Qm94PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJoZWFkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjLmhlYWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJlIGNsYXNzTmFtZT1cInBhcmFcIiBzdHlsZT17e2hlaWdodDogKGRlZmF1bHRSZWN0U2l6ZSAqIGMuaGVpZ2h0IC0gMTApfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPntjLnBhcmFncmFwaH08L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wcmU+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L05vdGVDb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgIDwvQ29tcG9uZW50Qm94PlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPFN0YWdlXG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIHpJbmRleDogY2FuTW92ZSA/IDIwIDogMSxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogY2FuTW92ZSA/ICdyZ2JhKDAsIDAsIDAsIC4yKScgOiAnJ1xuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgICAgICAgIG9uTW91c2VNb3ZlPXshKGNhbk1vdmUpID8gbW91c2VNb3ZlIDogdW5kZWZpbmVkfVxuICAgICAgICAgICAgICAgIG9uTW91c2VEb3duPXshKGNhbk1vdmUpID8gbW91c2VEb3duIDogdW5kZWZpbmVkfVxuICAgICAgICAgICAgICAgIG9uTW91c2VVcD17IShjYW5Nb3ZlKSA/IG1vdXNlVXAgOiB1bmRlZmluZWR9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPExheWVyIHJlZj17bGF5ZXJSZWZ9PlxuICAgICAgICAgICAgICAgICAgICA8R3JvdXA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UmVjdE9uQ2FudmFzIHg9e3JQb3MueH0geT17clBvcy55fS8+XG4gICAgICAgICAgICAgICAgICAgIDwvR3JvdXA+XG4gICAgICAgICAgICAgICAgPC9MYXllcj5cbiAgICAgICAgICAgIDwvU3RhZ2U+XG4gICAgICAgICAgICB7IGNhbk1vdmUgJiZcbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgICAgICAgICB0b3A6ICcxMHB4JyxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogJzEwcHgnXG4gICAgICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxPbk1vZGVBbHRcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRDYW5Nb3ZlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbml0U3RhdGVzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuuPjOyVhOqwgOq4sDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9jbG9zZS5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L09uTW9kZUFsdD5cbiAgICAgICAgICAgICAgICAgICAgPE9uTW9kZUFsdFxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17VXBkYXRlUG9zaXRpb259PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+7IiY7KCV7ZWY6riwPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvcHVibGljL2NoZWNrLnN2Z1wiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvT25Nb2RlQWx0PlxuICAgICAgICAgICAgICAgICAgICB7ICFpc0VkaXRTaXplID9cbiAgICAgICAgICAgICAgICAgICAgICAgIDxPbk1vZGVBbHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRJc0VkaXRTaXplKHRydWUpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7tgazquLAg67OA6rK97ZWY6riwPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9yZXNpemUuc3ZnXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvT25Nb2RlQWx0PlxuICAgICAgICAgICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgPE9uTW9kZUFsdCBjbGFzc05hbWU9XCJyZXNpemVcIiBzdHlsZT17e2N1cnNvcjogJ25vbmUnfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFJlc2l6ZVJlbW90ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+V0lEVEggLTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVjcmVhc2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0UmVjdFNpemUoey4uLnJlY3RTaXplLCB3aWR0aDogcmVjdFNpemUud2lkdGggLSBkZWZhdWx0UmVjdFNpemUgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9hcnJvdy5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj57cmVjdFNpemUud2lkdGggLyBkZWZhdWx0UmVjdFNpemV9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFJlY3RTaXplKHsuLi5yZWN0U2l6ZSwgd2lkdGg6IHJlY3RTaXplLndpZHRoICsgZGVmYXVsdFJlY3RTaXplfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9hcnJvdy5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1Jlc2l6ZVJlbW90ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UmVzaXplUmVtb3RlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5IRUlHSFQgLTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVjcmVhc2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0UmVjdFNpemUoey4uLnJlY3RTaXplLCBoZWlnaHQ6IHJlY3RTaXplLmhlaWdodCAtIGRlZmF1bHRSZWN0U2l6ZX0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIi9wdWJsaWMvYXJyb3cuc3ZnXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+e3JlY3RTaXplLmhlaWdodCAvIGRlZmF1bHRSZWN0U2l6ZX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRSZWN0U2l6ZSh7Li4ucmVjdFNpemUsIGhlaWdodDogcmVjdFNpemUuaGVpZ2h0ICsgZGVmYXVsdFJlY3RTaXplfSl9ID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9hcnJvdy5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1Jlc2l6ZVJlbW90ZT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvT25Nb2RlQWx0PlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICA8Qm9hcmRGb290ZXI+XG4gICAgICAgICAgICAgICAgZGVzaWduZWQgYnkgQGhhblxuICAgICAgICAgICAgPC9Cb2FyZEZvb3Rlcj5cbiAgICAgICAgICAgIDxUb2FzdENvbnRhaW5lclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uPVwiYm90dG9tLWxlZnRcIlxuICAgICAgICAgICAgICAgIGF1dG9DbG9zZT17NTAwMH1cbiAgICAgICAgICAgICAgICBoaWRlUHJvZ3Jlc3NCYXI9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIG5ld2VzdE9uVG9wXG4gICAgICAgICAgICAgICAgY2xvc2VPbkNsaWNrPXtmYWxzZX1cbiAgICAgICAgICAgICAgICBydGw9e2ZhbHNlfVxuICAgICAgICAgICAgICAgIHBhdXNlT25Gb2N1c0xvc3NcbiAgICAgICAgICAgICAgICBkcmFnZ2FibGVcbiAgICAgICAgICAgICAgICBwYXVzZU9uSG92ZXJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICA8L0tvbnZhQ29udGFpbmVyPlxuICAgIClcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFdvcmtTcGFjZTtcbiIsImltcG9ydCBSZWFjdCwge0ZDLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgdXNlUmVmLCBNdXRhYmxlUmVmT2JqZWN0LCBDaGFuZ2VFdmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlUGFyYW1zIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcbmltcG9ydCBmZXRjaGVyIGZyb20gJ0B1dGlscy9mZXRjaGVyJztcbmltcG9ydCBMb2FkaW5nQ2lyY2xlIGZyb20gJ0Bjb21wb25lbnRzL0xvYWRpbmdDaXJjbGUnO1xuaW1wb3J0IHsgUmVkaXJlY3QgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgdXNlU29ja2V0IGZyb20gJ0Bob29rcy91c2VTb2NrZXQnO1xuaW1wb3J0IHsgVXNlckxpc3QsIExvZ091dEJ1dHRvbiwgTWVudUNvbnRhaW5lciwgVXNlck1lbnUsIERldGFpbEJhY2tncm91bmQgfSBmcm9tICcuL3N0eWxlJztcbmltcG9ydCBDaGF0Qm94IGZyb20gJ0Bjb21wb25lbnRzL0NoYXRCb3gnO1xuaW1wb3J0IFdvcmtTcGFjZSBmcm9tICdAcGFnZXMvV29ya1NwYWNlJztcbmltcG9ydCB7IElVc2VyLCBJQm9hcmQgfSBmcm9tICdAdHlwaW5ncy9kYXRhcyc7XG5cbmludGVyZmFjZSBJVXNlckxpc3Qge1xuICAgIGlkOiBudW1iZXIsXG4gICAgdXNlcm5hbWU6IHN0cmluZyxcbn1cblxuY29uc3QgQm9hcmQ6RkMgPSAoKSA9PiB7XG4gICAgY29uc3QgcGFyYW1zID0gdXNlUGFyYW1zPHsgYm9hcmQ/OiBzdHJpbmcgfT4oKTtcbiAgICBjb25zdCB7IGJvYXJkIH0gPSBwYXJhbXM7XG4gICAgY29uc3QgW3NvY2tldCwgZGlzY29ubmVjdFNvY2tldF0gPSB1c2VTb2NrZXQoYm9hcmQpO1xuICAgIGNvbnN0IHsgZGF0YTp1c2VyRGF0YSwgcmV2YWxpZGF0ZTpVU0VSUmV2YWxpZGF0ZSwgZXJyb3I6VXNlckVycm9yIH0gPSB1c2VTV1I8SVVzZXIgfCBmYWxzZT4oJy9hcGkvYXV0aCcsIGZldGNoZXIpO1xuICAgIGNvbnN0IHsgZGF0YTpib2FyZERhdGEsIHJldmFsaWRhdGU6Qk9BUkRSZXZhbGlkYXRlIH0gPSB1c2VTV1I8SUJvYXJkPih1c2VyRGF0YSA/IGAvYXBpL2JvYXJkLyR7Ym9hcmR9YCA6IG51bGwsIGZldGNoZXIpO1xuICAgIGNvbnN0IFttZW51RmxnLCBzZXRNRmxnXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgICBjb25zdCBbdXNlckxpc3QsIHNldFVzZXJMaXN0XSA9IHVzZVN0YXRlPElVc2VyTGlzdFtdIHwgbnVsbCB8IHVuZGVmaW5lZD4oKTtcblxuICAgIGNvbnN0IGxvZ291dCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgYXhpb3MucG9zdChgL2FwaS9sb2dvdXRgKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIFVTRVJSZXZhbGlkYXRlKCk7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKGZhbHNlKTtcbiAgICAgICAgfSkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIH0pO1xuICAgIH0sIFtdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oJ2Rpc2Nvbm5lY3Qgc29ja2V0JywgNDIpO1xuICAgICAgICAgICAgZGlzY29ubmVjdFNvY2tldCgpO1xuICAgICAgICB9O1xuICAgIH0sIFtkaXNjb25uZWN0U29ja2V0XSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoYm9hcmREYXRhICYmIHVzZXJEYXRhKSB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oJ+uhnOq3uOyduCcpO1xuICAgICAgICAgICAgc29ja2V0Py5lbWl0KCdsb2dpbicsIHsgaWQ6IHVzZXJEYXRhPy5pZCwgdXNlcm5hbWU6IHVzZXJEYXRhPy51c2VybmFtZSwgYm9hcmRzOiA0MiB9KTtcbiAgICAgICAgfVxuICAgIH0sIFtzb2NrZXQsIHVzZXJEYXRhLCBib2FyZERhdGFdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNvY2tldD8ub24oJ29ubGluZUxpc3QnLCBhc3luYyAoZGF0YTogSVVzZXJMaXN0W10pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJtRHVwRGF0YTpJVXNlckxpc3RbXSA9IFtdO1xuICAgICAgICAgICAgYXdhaXQgZGF0YS5mb3JFYWNoKChlbGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFybUR1cERhdGEuZmluZCh2ID0+IHYuaWQgPT09IGVsZW0uaWQpKVxuICAgICAgICAgICAgICAgICAgICBybUR1cERhdGEucHVzaChlbGVtKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc2V0VXNlckxpc3Qocm1EdXBEYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNvY2tldD8ub24oJ3JlZnJlc2gnLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygncmVmcmVzaCcpO1xuICAgICAgICAgICAgQk9BUkRSZXZhbGlkYXRlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzb2NrZXQ/Lm9mZigncmVmcmVzaCcpOyAvL1xuICAgICAgICB9XG4gICAgfSwgW3NvY2tldF0pO1xuXG4gICAgaWYgKCF1c2VyRGF0YSlcbiAgICAgICAgcmV0dXJuIDxSZWRpcmVjdCB0bz1cIi9hdXRoXCIgLz5cblxuICAgIGlmICghYm9hcmREYXRhKVxuICAgICAgICByZXR1cm4gPExvYWRpbmdDaXJjbGUgLz5cblxuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgIHttZW51RmxnICYmXG4gICAgICAgICAgICA8RGV0YWlsQmFja2dyb3VuZFxuICAgICAgICAgICAgICAgIHN0eWxlPXt7ekluZGV4OiA4fX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRNRmxnKGZhbHNlKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgIH1cbiAgICAgICAgPFVzZXJNZW51XG4gICAgICAgICAgICBzdHlsZT17e3RyYW5zZm9ybTogYHRyYW5zbGF0ZVgoJHttZW51RmxnID8gJzAnIDogJzEwMCUnfSlgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPE1lbnVDb250YWluZXI+XG4gICAgICAgICAgICAgICAgPFVzZXJMaXN0PlxuICAgICAgICAgICAgICAgICAgICA8cD5Vc2VyIExpc3Q8L3A+XG4gICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyTGlzdD8ubWFwKChjLCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17KGkpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjLmlkID09PSB1c2VyRGF0YS5pZCA/IGAke2MudXNlcm5hbWV9IChtZSlgIDogYy51c2VybmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9Vc2VyTGlzdD5cbiAgICAgICAgICAgICAgICB7KGJvYXJkICYmIHVzZXJEYXRhICYmIGJvYXJkRGF0YSApICYmXG4gICAgICAgICAgICAgICAgICAgIDxDaGF0Qm94XG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VyRGF0YT17dXNlckRhdGF9XG4gICAgICAgICAgICAgICAgICAgICAgICBib2FyZD17Ym9hcmR9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidXBcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRNRmxnKCFtZW51RmxnKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHttZW51RmxnID9cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiL3B1YmxpYy9hcnJvdy5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvcHVibGljL3BlcnNvbi5zdmdcIiAvPlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPExvZ091dEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtsb2dvdXR9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICDroZzqt7jslYTsm4NcbiAgICAgICAgICAgICAgICA8L0xvZ091dEJ1dHRvbj5cbiAgICAgICAgICAgIDwvTWVudUNvbnRhaW5lcj5cbiAgICAgICAgPC9Vc2VyTWVudT5cbiAgICAgICAgPFdvcmtTcGFjZVxuICAgICAgICAgICAgYm9hcmREYXRhPXtib2FyZERhdGF9XG4gICAgICAgICAgICBkYXRhUmV2YWw9e0JPQVJEUmV2YWxpZGF0ZX1cbiAgICAgICAgICAgIHVzZXJEYXRhPXt1c2VyRGF0YX1cbiAgICAgICAgICAgIGJvYXJkPXtib2FyZCA/IGJvYXJkIDogJyd9XG4gICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0Lm1lbW8oQm9hcmQpO1xuIiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuY29uc3QgZmV0Y2hlciA9ICh1cmw6IHN0cmluZykgPT4gYXhpb3MuZ2V0KFxuICAgIHVybCxcbiAgICB7XG4gICAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZVxuICAgIH1cbikudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmRhdGEpO1xuXG5leHBvcnQgZGVmYXVsdCBmZXRjaGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==