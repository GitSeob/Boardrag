(self.webpackChunk_42board_front=self.webpackChunk_42board_front||[]).push([[414],{2033:(e,t,a)=>{"use strict";a.d(t,{Z:()=>c});var n=a(7294),i=a(5366);const r=a(9911).F4`
    from {
        transform: rotate(0);
    }
    to {
        transform: rotate(359deg);
    }
`,l=(0,i.Z)("div",{target:"ekojj7n2",label:"LoadingCircleContainer"})({name:"8lbyj9",styles:"width:300px;height:300px;display:flex;justify-content:center;align-items:center;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)"}),o=(0,i.Z)("div",{target:"ekojj7n1",label:"LoadingCircleBox"})("width:150px;height:150px;padding:3px;display:flex;justify-content:center;align-items:center;border-radius:50%;background:rgb(63, 249, 200);background:linear-gradient(0deg, rgba(63, 249, 200, 0.1) 33%, rgba(63, 249, 220, 1) 100%);animation:",r," .8s linear 0s infinite;"),s=(0,i.Z)("div",{target:"ekojj7n0",label:"LoadingCircleCore"})({name:"1sudnkc",styles:"width:100%;height:100%;background:#001c29;border-radius:50%"}),c=()=>n.createElement(l,null,n.createElement(o,null,n.createElement(s,null)))},6502:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>le});var n=a(7294),i=a(8100),r=a(3564),l=a(2033),o=a(5977),s=a(381),c=a.n(s),d=a(3653),g=a.n(d),h=a(3286),m=a(5366),p=a(9911);const u=p.F4`
    from {
        max-width: 0;
        max-height: 0;
    }
    to {
        max-width: 200px;
        max-height: 200px;
    }
`,x=p.F4`
    from {
        max-width: 200px;
        max-height: 200px;
    }
    to {
        max-width: 0px;
        max-height: 0px
    }
`,f=p.F4`
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
`,w=(p.F4`
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
`,p.F4`
    0% {
        width: 0%;
        height: 0%;
    }
    50% {
        width: 30%;
        height: 30%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`),b=(0,m.Z)("div",{target:"e1jwxo3k23",label:"KonvaContainer"})({name:"1obeqwp",styles:"position:relative;display:flex;flex-direction:column;min-height:100vh"}),y=(0,m.Z)("div",{target:"e1jwxo3k22",label:"MenuBox"})("display:flex;flex-direction:column;position:absolute;background:rgba(0, 0, 0, .85);display:",(e=>e.disp?"block":"none"),";overflow:hidden;color:#efefef;border-radius:5px;box-shadow:0 0 8px 1px rgb(0, 0, 0);max-width:",(e=>e.clicked?"200px":"0px"),";max-height:",(e=>e.clicked?"200px":"0px"),";top:",(e=>e.y),";left:",(e=>e.x),";animation:",(e=>e.clicked?u:x)," .3s ease-in-out 1;z-index:10;"),j=(0,m.Z)("div",{target:"e1jwxo3k21",label:"MenuAttr"})({name:"g54kn2",styles:"width:140px;padding:1rem;cursor:pointer;position:relative;&:hover{background:rgba(20, 20, 20, .5);}"}),v=(0,m.Z)("div",{target:"e1jwxo3k20",label:"BoardFooter"})({name:"uellsq",styles:"width:100%;align-items:center;justify-content:center;color:rgba(255, 255, 255, .6);font-weight:400;font-size:12px;text-align:center;display:flex;padding:1rem;height:100%;background:rgba(0, 0, 0, .1)"}),k=(0,m.Z)("div",{target:"e1jwxo3k19",label:"ComponentBox"})("position:absolute;width:",(e=>e.width),";height:",(e=>e.height),";left:",(e=>e.x),";top:",(e=>e.y),";display:flex;align-items:center;justify-content:center;background:transparent;z-index:4;padding:2px;"),E=(0,m.Z)("div",{target:"e1jwxo3k18",label:"TextComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);background:rgba(0, 0, 0, .75);color:#fff;width:100%;height:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;animation:",w," .3s ease-in-out 1;overflow:hidden;padding:5px;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;}"),z=(0,m.Z)("div",{target:"e1jwxo3k17",label:"ImageComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);display:flex;align-items:center;justify-content:center;cursor:pointer;border-radius:5px;overflow:hidden;width:100%;height:100%;animation:",w," .3s ease-in-out 1;&>img{width:100%;height:100%;}&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;}"),C=(0,m.Z)("div",{target:"e1jwxo3k16",label:"WarnMessage"})({name:"16igor6",styles:"position:absolute;background:rgba(0, 0, 0, .6);z-index:5;border-radius:5px;color:#ff5555;font-weight:500;font-size:14px;padding:1rem 2rem;top:50%;left:50%;transform:translate(-50%, -50%)"}),Z=(0,m.Z)("div",{target:"e1jwxo3k15",label:"NoteComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);color:#fff;display:flex;flex-direction:column;align-items:center;justify-content:center;cursor:pointer;animation:",w," .3s ease-in-out 1;width:100%;height:100%;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"rgba(0, 0, 0, .75)"),";background-size:cover;overflow:hidden;padding:5px;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;}&>div{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;overflow:hidden;text-overflow:ellipsis;&.head{white-space:nowrap;font-size:20px;font-weight:600;}}"),M=(0,m.Z)("div",{target:"e1jwxo3k14",label:"DetailBackground"})("width:100%;height:100%;z-index:12;position:absolute;top:0;left:0;background:rgba(0, 0, 0, .4);animation:",f," .5s ease-in-out 1;"),R=(0,m.Z)("div",{target:"e1jwxo3k13",label:"DetailWindow"})({name:"b8x90n",styles:"position:fixed;min-height:100vh;height:100%;width:400px;background:rgba(0, 0, 0, .85);top:0;left:0;z-index:13;transition:.3s;color:#fff"}),S=(0,m.Z)("div",{target:"e1jwxo3k12",label:"DetailBox"})({name:"1b7ro16",styles:"position:relative;width:100%;height:100%;padding:1rem;padding-bottom:4rem;overflow:auto;&>div{margin:1rem 0;}"}),L=(0,m.Z)("div",{target:"e1jwxo3k11",label:"TopFixContent"})({name:"1i7bcd8",styles:"position:relative;width:100%;overflow:hidden"}),U=(0,m.Z)("div",{target:"e1jwxo3k10",label:"BottomFixContent"})({name:"14qk46b",styles:"position:fixed;bottom:0;display:flex;overflow:hidden;height:4rem;background:#000;padding:1rem .5rem;&>input{width:calc(400px - 4rem);padding:5px;border-radius:5px;box-shadow:0 0 4px 1px #ffffff;font-size:14px;margin-right:.5rem;}&>div{width:2rem;background:#radial-gradient(ellipse at bottom, #002534 0%, #090a0f 100%) no-repeat;cursor:pointer;color:#fff;transition:.3s;display:flex;justify-content:center;align-items:center;svg{fill:#fff;}}"}),B=(0,m.Z)("div",{target:"e1jwxo3k9",label:"UserInfo"})({name:"11lxd0m",styles:"width:100%;height:6rem;display:flex;justify-content:flex-start;align-items:center;&>img{width:5rem;height:5rem;border-radius:100%;margin-right:1rem;}&>p{font-size:18px;font-weight:700;width:100%;}"}),I=(0,m.Z)("div",{target:"e1jwxo3k8",label:"UDButtonBox"})({name:"tvvsuy",styles:"display:flex;align-items:center;justify-content:center;&>button{background:transparent!important;cursor:pointer;}"}),D=(0,m.Z)("div",{target:"e1jwxo3k7",label:"MomentBox"})({name:"1ndgiad",styles:"margin-top:.5rem;margin-bottom:1rem;&>div{font-size:12px;display:flex;align-items:center;color:#d5d5d5;p{margin-left:.5rem;font-size:14px;color:#fff;}}"}),F=(0,m.Z)("div",{target:"e1jwxo3k6",label:"DetailContentBox"})({name:"exr5r9",styles:"border-radius:5px;background:#fff;color:#000;margin-top:.5rem;overflow:hidden;&>div{padding:1rem .5rem;}&>img{width:100%;}&>h2{margin:0 .5rem;padding:1rem 0 .5rem 0;border-bottom:1px solid #ddd;}"}),H=(0,m.Z)("div",{target:"e1jwxo3k5",label:"CommentBox"})(""),N=(0,m.Z)("div",{target:"e1jwxo3k4",label:"Comment"})({name:"1lrvcew",styles:'display:flex;min-height:3rem;margin-bottom:.5rem;&>img{width:3rem;height:3rem;border-radius:100%;margin-right:1rem;}.content{width:100%;&>div{display:flex;align-items:flex-end;width:100%;div{background:#f8f8f8;border-radius:5px;color:#000;padding:.5rem;min-height:100%;width:100%;position:relative;&::before{content:"";transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{color:#777;height:fit-content;font-size:10px;margin-left:.3rem;width:8rem;}}}'}),_=(0,m.Z)("div",{target:"e1jwxo3k3",label:"EditArea"})({name:"ph2pyk",styles:"position:relative;padding:0!important;overflow:hidden;&>textarea{width:calc(100% - 50px);resize:none;padding:.5rem;}&>input{width:calc(100% - 50px);font-size:24px;padding:.5rem;font-weight:600;margin-bottom:1rem;}"}),A=(0,m.Z)("div",{target:"e1jwxo3k2",label:"EditButtonBox"})({name:"xp8khj",styles:"position:absolute;right:0;top:0;height:100%;width:50px;display:flex;flex-direction:column;align-items:center;justify-content:center;overflow:hidden;.button{height:50%;background:#777;color:#fff;width:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;&.edit{background:#01babc;color:#000;}}"}),T=(0,m.Z)("div",{target:"e1jwxo3k1",label:"ImageBox"})({name:"16hwasf",styles:"position:relative;width:calc(100% - 50px);height:fit-content;&>img{width:100%;}.temp{width:100%;height:6rem;background:#eee;}"}),Y=(0,m.Z)("div",{target:"e1jwxo3k0",label:"EditImageInput"})({name:"9jsky2",styles:"position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:50%;padding:.5rem 1rem;background:rgba(0, 0, 0, 0.4);color:#fff;border-radius:3px;display:flex;align-items:center;justify-content:center;height:2rem;cursor:pointer;&>svg{fill:#fff;height:2rem;}"}),W=p.F4`
    0% {
        width: 0;
        height: 0;
    }
    30% {
        width: 10%;
        height: 10%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,X=(0,m.Z)("div",{target:"er682az8",label:"AddContainer"})("position:absolute;z-index:4;display:flex;align-items:center;justify-content:center;top:",(e=>e.y+5),";left:",(e=>e.x+5),";width:",(e=>e.width-10),";height:",(e=>e.height-10),";z-index:6;"),V=(0,m.Z)("div",{target:"er682az7",label:"AddBox"})("position:relative;padding:5px;border-radius:5px;background:rgba(255, 255, 255, .6);box-shadow:0 0 4px 1px rgba(255, 255, 255, .5);color:#000;width:100%;animation:",W," .3s ease-in-out 1;height:100%;&.note{padding:0;border-radius:5px;}&>img{width:100%;height:100%;}"),$=(0,m.Z)("div",{target:"er682az6",label:"SubmitButton"})("position:absolute;display:flex;align-items:center;justify-content:center;top:0;right:-10px;transform:translateX(100%);width:",(e=>e.size),";height:",(e=>e.size),";border-radius:5px;background:#01babc;color:#fff;box-shadow:0 0 4px 1px rgba(1, 186, 188, .7);cursor:pointer;&>svg{height:20px;fill:#fff;}"),q=(0,m.Z)("div",{target:"er682az5",label:"ImageInputButton"})("position:absolute;display:flex;align-items:center;justify-content:center;right:-10px;top:",(e=>e.size+10),";transform:translateX(100%);width:",(e=>e.size),";height:",(e=>e.size),";border-radius:5px;cursor:pointer;background:#34568B;box-shadow:0 0 4px 1px rgba(52, 86, 139, .7);&>svg{fill:#fff;height:20px;}"),O=(0,m.Z)("textarea",{target:"er682az4",label:"TextArea"})({name:"g2io2r",styles:"width:100%;height:100%;border:none;border-radius:0 0 5px 5px;resize:none;padding:5px"}),P=(0,m.Z)("div",{target:"er682az3",label:"ImageAddBox"})({name:"ui1w45",styles:"width:100%;height:100%;display:flex;align-items:center;justify-content:center;font-size:20px;font-weight:500;overflow:hidden;text-align:center;word-break:keep-all;&>img{width:100%;height:100%;}"}),K=(0,m.Z)("div",{target:"er682az2",label:"NoteAddBox"})("width:100%;heigth:100%;display:flex;align-items:center;justify-content:center;flex-direction:column;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"#fff"),";background-size:cover;overflow:hidden;animation:",W," .3s ease-in-out 1;padding:5px;border-radius:5px;color:",(e=>e.src?"#fff":"000"),'!important;&>div{background:transparent;font-weight:500;}input[type="text"],textarea{color:',(e=>e.src?"#fff":"#000"),"!important;text-shadow:",(e=>e.src?"0 3px 10px #000":"none"),";}"),G=(0,m.Z)("div",{target:"er682az1",label:"InputBox"})("width:100%;height:",(e=>e.size),";overflow:hidden;&>textarea{background:none;}&:nth-child(2){margin-top:2px;}"),J=(0,m.Z)("input",{target:"er682az0",label:"InputArea"})({name:"3hp70p",styles:"width:100%;height:100%;padding:5px;font-size:20px;font-weight:600;background:inherit!important;color:inherit!important"}),Q=({x:e,y:t,width:a,height:i,offset:r,initStates:l,dataReval:o})=>{const s=(0,n.useRef)(),[c,d]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),h=(0,n.useCallback)((()=>{s.current.click()}),[s.current]),m=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await d({...c,loading:!0}),await g().post("/api/uploadImage",t).then((e=>{d({...c,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{d({...c,loading:!1,message:e.response.message})}))}),[]),p=(0,n.useCallback)((async()=>{d({...c,loading:!0}),await g().post("/api/write/image",{url:c.imageURL,x:r.x,y:r.y,width:r.width,height:r.height}).then((()=>{d({...c,loading:!1,success:!0}),l(),o()})).catch((e=>{d({...c,loading:!1,message:e.response.message})}))}),[c]);return n.createElement(X,{y:t,x:e,width:a,height:i},n.createElement(V,null,""===c.imageURL?n.createElement(P,null,"오른쪽 버튼을 클릭해서 사진을 업로드해주세요."):n.createElement("img",{src:c.imageURL}),n.createElement($,{size:a/r.width,onClick:p},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(q,{onClick:h,size:a/r.width},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",ref:s,onChange:m}))))},ee=e=>{const[t,a]=(0,n.useState)(e);return[t,(0,n.useCallback)((e=>{a(e.target.value)}),[]),a]},te=({x:e,y:t,width:a,height:i,offset:r,initStates:l,dataReval:o})=>{const[s,c]=ee(""),[d,h]=(0,n.useState)({loading:!1,success:!1,warning:""}),m=(0,n.useCallback)((async e=>{e.preventDefault(),h({...d,loading:!0}),await g().post("api/write/text",{content:s,x:r.x,y:r.y,width:r.width,height:r.height}).then((()=>{h({...d,loading:!1,success:!0}),l(),o()})).catch((e=>{h({...d,loading:!1,warning:e.data.reason})}))}),[s]);return n.createElement(X,{y:t,x:e,width:a,height:i},n.createElement(V,null,d.loading?n.createElement("div",null,"loading..."):n.createElement(O,{value:s,onChange:c,autoFocus:!0}),n.createElement($,{size:a/r.width,onClick:m},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"})))))},ae=({x:e,y:t,width:a,height:i,offset:r,initStates:l,dataReval:o})=>{const[s,c]=ee(""),[d,h]=ee(""),m=(0,n.useRef)(),[p,u]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),x=(0,n.useCallback)((()=>{m.current.click()}),[m.current]),f=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await u({...p,loading:!0}),await g().post("/api/uploadImage",t).then((e=>{u({...p,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{u({...p,loading:!1,message:e.response.message})}))}),[p]),w=(0,n.useCallback)((async()=>{u({...p,loading:!0}),await g().post("/api/write/note",{background_img:p.imageURL,head:s,paragraph:d,x:r.x,y:r.y,width:r.width,height:r.height}).then((()=>{u({...p,loading:!1,success:!0}),l(),o()})).catch((e=>{u({...p,loading:!1,message:e.response.message})}))}),[p,d,s]);return n.createElement(X,{y:t,x:e,width:a,height:i},n.createElement(V,{className:"note"},n.createElement(K,{src:""!==p.imageURL?p.imageURL:null},n.createElement(G,{size:i/r.height},n.createElement(J,{key:"headerInput",type:"text",placeholder:"타이틀을 입력해주세요.",value:s,onChange:c})),n.createElement(G,{size:i-i/r.height-20},n.createElement(O,{value:d,onChange:h,autoFocus:!0,placeholder:"본문 내용을 입력해주세요."}))),n.createElement($,{size:a/r.width,onClick:w},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(q,{onClick:x,size:a/r.width},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",ref:m,onChange:f}))))},ne=({imageInput:e,onChangeImg:t,onClick:a})=>n.createElement(Y,{onClick:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("p",null,"이미지 변경하기"),n.createElement("input",{style:{width:0,height:0},type:"file",ref:e,onChange:t})),ie=({boardData:e,dataReval:t,userData:a})=>{const i=n.useRef(),[r,l]=(0,n.useState)({x:0,y:0,dragged:!1}),[o,s]=(0,n.useState)({x:0,y:0}),[d,m]=(0,n.useState)({x:0,y:0}),[p,u]=(0,n.useState)({x:0,y:0,flg:!1,disp:!1}),[x,f]=(0,n.useState)({x:0,y:0,width:0,height:0}),[w,Y]=(0,n.useState)(0),[W,X]=(0,n.useState)({category:0,id:0,flg:!1,loadComment:!1,content:null}),[V,$]=(0,n.useState)(""),[q,O]=(0,n.useState)(window.innerWidth),[P,K]=(0,n.useState)(q/32),[G,J]=(0,n.useState)({width:P,height:P}),[ie,re,le]=ee(""),[oe,se]=(0,n.useState)(20*P),[ce,de]=(0,n.useState)(),[ge,he]=(0,n.useState)(!1),[me,pe]=(0,n.useState)(""),[ue,xe,fe]=ee(""),[we,be]=(0,n.useState)(""),[ye,je]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),ve=(0,n.useRef)(),ke=(0,n.useRef)(),Ee={transform:W.flg?"translateX(0%)":"translateX(-100%)"};(0,n.useEffect)((()=>{m({x:d.x/P*window.innerWidth/32,y:d.y/P*window.innerWidth/32}),J({width:G.width/P*window.innerWidth/32,height:G.height/P*window.innerWidth/32}),O(window.innerWidth),K(window.innerWidth/32),se(window.innerWidth/32*20)}),[window.innerWidth,P]);const ze=(0,n.useCallback)((e=>{const t=G.width/P,a=G.height/P;a*t<4?$("최소 4칸의 영역을 선택해야합니다."):3===e&&a*t<6?$("이미지는 최소 6칸의 영역을 선택해야합니다."):2===e&&a*t<20?$("노트는 최소 20칸이상의 영역을 선택해야합니다."):2===e&&(a<3||t<4)?$("노트는 4x3이상의 영역을 선택해야합니다."):(f({x:d.x/P,y:d.y/P,width:G.width/P,height:G.height/P}),Y(e))}),[G,P]),Ce=(0,n.useCallback)((()=>{if(r){let e=P*Math.floor(Math.abs(o.x-o.x%P-r.x)/P+1),t=P*Math.floor(Math.abs(o.y-o.y%P-r.y)/P+1);const a=o.x-r.x,n=o.y-r.y;a<0&&n>0?m({...d,x:o.x-o.x%P}):a>0&&n<0?m({...d,y:o.y-o.y%P}):a<0&&n<0&&m({x:o.x-o.x%P,y:o.y-o.y%P}),a>P&&(e+=P),n>P&&(t+=P),J({width:e,height:t})}}),[o,r,d,P]),Ze=({x:e=0,y:t=0})=>n.createElement(h.Rect,{width:G.width,height:G.height,fill:"rgba(255, 255, 255, 0.1)",x:e,y:t,cornerRadius:5}),Me=(0,n.useCallback)(((e,t,a)=>e>t&&e<a),[]),Re=(0,n.useCallback)((t=>{e?.TextContents&&e.TextContents.find((e=>(Me(e.x*P,d.x,d.x+G.width)||Me((e.x+e.width)*P,d.x,d.x+G.width))&&(Me(e.y*P,d.y,d.y+G.height)||Me((e.y+e.height)*P,d.y,d.y+G.height))))?$("곂치는 영역이 존재합니다."):ze(t)}),[G,d,P]),Se=(0,n.useCallback)((()=>{J({width:P,height:P}),l({...r,dragged:!1}),u({...p,flg:!1}),Y(0),$("")}),[P,r,p]),Le=(0,n.useCallback)(((e,t,a)=>{X({...W,flg:!0,category:e,id:t,content:a}),de(a.Comments)}),[W]),Ue=(0,n.useCallback)((e=>{e.preventDefault(),""!==ie&&g().post(`/api/comment/${W.category}/${W.content?.id}`,{content:ie}).then((e=>{le(""),g().get(`api/comment/${W.category}/${W.content?.id}`).then((e=>{de(e.data)})).catch((e=>{console.error(e)})),t()})).catch((e=>{console.error(e)}))}),[ie,W]),Be=(0,n.useCallback)((()=>{let e="";if(1===W.category)e="text";else if(2===W.category)e="note";else{if(3!==W.category)return;e="image"}g().delete(`api/delete/${e}/${W.content?.id}`).then((()=>{t(),X({category:0,id:0,flg:!1,loadComment:!1,content:null})})).catch((e=>{console.error(e)}))}),[W]),Ie=(0,n.useCallback)((e=>{he(!ge),ge?(pe(""),fe(""),be("")):1===e?(pe("string"==typeof W.content?.content?W.content?.content:""),ge&&Fe(ve.current.scrollHeight+"px")):2===e?(fe("string"==typeof W.content?.head?W.content?.head:""),pe("string"==typeof W.content?.paragraph?W.content?.paragraph:""),je({...ye,imageURL:"string"==typeof W.content?.background_img?W.content?.background_img:""}),ge&&Fe(ve.current.scrollHeight+"px")):3===e&&je({...ye,imageURL:"string"==typeof W.content?.url?W.content?.url:""})}),[ge,W,ve]),[De,Fe]=(0,n.useState)("auto"),He=(0,n.useCallback)((e=>{Fe(ve.current.scrollHeight+"px"),pe(e.target.value)}),[ve]),Ne=(0,n.useCallback)((()=>{X({category:0,id:0,flg:!1,loadComment:!1,content:null}),fe(""),pe(""),je({loading:!1,success:!1,message:"",imageURL:""}),he(!1)}),[]),_e=(0,n.useCallback)((()=>{fe(""),pe(""),je({loading:!1,success:!1,message:"",imageURL:""}),he(!1)}),[]),Ae=(0,n.useCallback)((()=>{ke.current.click()}),[ke.current]),Te=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await je({...ye,loading:!0}),await g().post("/api/uploadImage",t,{headers:{"Access-Control-Allow-Origin":"*"}}).then((e=>{je({...ye,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{je({...ye,loading:!1,message:e.response.message})}))}),[]),Ye=(0,n.useCallback)((async()=>{let e="",a={};if(""===ye.imageURL&&(await $("이미지를 다시 업로드해주세요"),await setTimeout((()=>{$("")}),2e3)),1===W.category)e="/api/text/"+W.id,a={content:me};else if(2===W.category)e="/api/note/"+W.id,a={background_img:ye.imageURL,head:ue,paragraph:me};else{if(3!==W.category)return await $("잘못된 접근입니다."),void await setTimeout((()=>{$("")}),2e3);e="/api/image/"+W.id,a={url:ye.imageURL}}await g().patch(e,a).then((()=>{X({category:0,id:0,flg:!1,loadComment:!1,content:null}),t()})).catch((e=>{$(e.response.message),setTimeout((()=>{$("")}),2e3)})),_e()}),[me,ue,W,ye]);return(0,n.useEffect)((()=>{0==w&&(r.dragged?Ce():m({x:o.x-o.x%P,y:o.y-o.y%P}))}),[o,r,w]),(0,n.useEffect)((()=>{0!==w&&u({...p,flg:!1})}),[w]),n.createElement(b,null,""!==V&&n.createElement(C,null,V),W.flg&&n.createElement(M,{onClick:Ne}),n.createElement(R,{style:Ee},n.createElement(S,null,0!==W.id&&n.createElement(n.Fragment,null,n.createElement(L,null,n.createElement(B,null,n.createElement("img",{src:W.content?.User.profile_img}),n.createElement("p",null,W.content?.User.username),W.content&&W.content.UserId===a.id&&n.createElement(I,null,n.createElement("button",{onClick:()=>Ie(W.category)},n.createElement("img",{src:"/public/edit.svg"})),n.createElement("button",{onClick:Be},n.createElement("img",{src:"/public/delete.svg"})))),n.createElement(D,null,n.createElement("div",null,"작성일 : ",n.createElement("p",null,c()(W.content?.createdAt).format("YYYY년 MM월 DD일"))),n.createElement("div",null,"만료일 : ",n.createElement("p",null,c()(W.content?.expiry_date).format("YYYY년 MM월 DD일")))),"Content :",n.createElement(F,null,1===W.category&&(ge?n.createElement(n.Fragment,null,n.createElement(_,null,n.createElement("textarea",{value:me,onChange:He,ref:ve,style:{height:De}}),n.createElement(A,null,n.createElement("div",{className:"button edit",onClick:Ye},"수정"),n.createElement("div",{className:"button",onClick:_e},"취소")))):n.createElement("div",null,W.content?.content)),2===W.category&&(ge?n.createElement(n.Fragment,null,n.createElement(_,null,n.createElement(T,null,""!==ye.imageURL?n.createElement("img",{src:ye.imageURL}):n.createElement("div",{className:"temp"}),n.createElement(ne,{onClick:Ae,imageInput:ke,onChangeImg:Te})),n.createElement("input",{value:ue,onChange:xe}),n.createElement("textarea",{value:me,onChange:He,ref:ve,style:{height:De}}),n.createElement(A,null,n.createElement("div",{className:"button edit",onClick:Ye},"수정"),n.createElement("div",{className:"button",onClick:_e},"취소")))):n.createElement(n.Fragment,null,W.content?.background_img&&n.createElement("img",{src:W.content?.background_img}),n.createElement("h2",null,W.content?.head),n.createElement("div",null,W.content?.paragraph))),3===W.category&&(ge?n.createElement(n.Fragment,null,n.createElement(_,null,n.createElement(T,null,n.createElement("img",{src:ye.imageURL}),n.createElement(ne,{onClick:Ae,imageInput:ke,onChangeImg:Te})),n.createElement(A,null,n.createElement("div",{className:"button edit",onClick:Ye},"수정"),n.createElement("div",{className:"button",onClick:_e},"취소")))):n.createElement("img",{src:W.content?.url})))),n.createElement("div",{style:{borderBottom:"1px solid #444",padding:".5rem 0"}},"Comment:"),n.createElement(H,null,ce?.map(((e,t)=>n.createElement(N,{key:t},n.createElement("img",{src:e.User.profile_img}),n.createElement("div",{className:"content"},n.createElement("p",null,e.User.username),n.createElement("div",null,n.createElement("div",null,e.content),n.createElement("p",null,c()(e.createdAt).diff(new Date,"days")<1?c()(e.createdAt).format("LT"):c()(e.createdAt).format("YYYY년 MM월 DD일")))))))))),n.createElement(U,{onClick:Ue},n.createElement("input",{type:"text",value:ie,onChange:re}),n.createElement("div",null,n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))))),n.createElement(y,{clicked:p.flg,x:p.x,y:p.y,disp:p.disp},n.createElement(j,{onClick:()=>Re(1)},"Text"),n.createElement(j,{onClick:()=>Re(2)},"Note"),n.createElement(j,{onClick:()=>Re(3)},"Image")),1===w&&n.createElement(te,{width:G.width,height:G.height,x:d.x,y:d.y,offset:x,initStates:Se,dataReval:t}),2===w&&n.createElement(ae,{width:G.width,height:G.height,x:d.x,y:d.y,offset:x,initStates:Se,dataReval:t}),3===w&&n.createElement(Q,{width:G.width,height:G.height,x:d.x,y:d.y,offset:x,initStates:Se,dataReval:t}),e?.TextContents&&e?.TextContents.map(((e,t)=>n.createElement(k,{key:t,width:P*e.width,height:P*e.height,x:P*e.x,y:P*e.y},n.createElement(E,{onClick:()=>Le(1,e.id,e)},e.content)))),e?.Images&&e?.Images.map(((e,t)=>n.createElement(k,{key:t,width:P*e.width,height:P*e.height,x:P*e.x,y:P*e.y},n.createElement(z,{onClick:()=>Le(3,e.id,e)},n.createElement("img",{src:e.url}))))),e?.Notes&&e?.Notes.map(((e,t)=>n.createElement(k,{key:t,width:P*e.width,height:P*e.height,x:P*e.x,y:P*e.y},n.createElement(Z,{onClick:()=>Le(2,e.id,e),src:e.background_img?e.background_img:""},n.createElement("div",{className:"head",style:{height:"fit-content"}},n.createElement("p",null,e.head)),n.createElement("div",{className:"para",style:{height:P*e.height-10}},n.createElement("p",null,e.paragraph)))))),n.createElement(h.Stage,{style:{height:oe,zIndex:1},width:q,height:oe,onMouseMove:e=>{if(!p.flg){i.current.getAbsoluteTransform().copy().invert();const t=e.target.getStage()?.getPointerPosition();s({x:t?.x,y:t?.y})}},onMouseDown:()=>{0===w&&l({x:o.x,y:o.y,dragged:!0})},onMouseUp:()=>{p.flg||0!=w?Se():u({x:o.x,y:o.y,flg:!0,disp:!0})}},n.createElement(h.Layer,{ref:i},n.createElement(Ze,{x:d.x,y:d.y}))),n.createElement(v,null,"designed by @han"))},re=()=>{const{data:e,revalidate:t}=(0,i.ZP)("/api/auth",r.Z),{data:a,revalidate:s,error:c}=(0,i.ZP)(e?"/api/board/42":null,r.Z);return console.log(e),!1===e?n.createElement(o.l_,{to:"/auth"}):e&&a?n.createElement(n.Fragment,null,n.createElement(ie,{boardData:a,dataReval:s,userData:e})):n.createElement(l.Z,null)},le=n.memo(re)},3564:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(3653),i=a.n(n);const r=e=>i().get(e,{withCredentials:!0}).then((e=>e.data))},6700:(e,t,a)=>{var n={"./af":2786,"./af.js":2786,"./ar":867,"./ar-dz":4130,"./ar-dz.js":4130,"./ar-kw":6135,"./ar-kw.js":6135,"./ar-ly":6440,"./ar-ly.js":6440,"./ar-ma":7702,"./ar-ma.js":7702,"./ar-sa":6040,"./ar-sa.js":6040,"./ar-tn":7100,"./ar-tn.js":7100,"./ar.js":867,"./az":1083,"./az.js":1083,"./be":9808,"./be.js":9808,"./bg":8338,"./bg.js":8338,"./bm":7438,"./bm.js":7438,"./bn":8905,"./bn-bd":6225,"./bn-bd.js":6225,"./bn.js":8905,"./bo":1560,"./bo.js":1560,"./br":1278,"./br.js":1278,"./bs":622,"./bs.js":622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":877,"./cv.js":877,"./cy":7373,"./cy.js":7373,"./da":4780,"./da.js":4780,"./de":9740,"./de-at":217,"./de-at.js":217,"./de-ch":894,"./de-ch.js":894,"./de.js":9740,"./dv":5300,"./dv.js":5300,"./el":837,"./el.js":837,"./en-au":8348,"./en-au.js":8348,"./en-ca":7925,"./en-ca.js":7925,"./en-gb":2243,"./en-gb.js":2243,"./en-ie":6436,"./en-ie.js":6436,"./en-il":7207,"./en-il.js":7207,"./en-in":4175,"./en-in.js":4175,"./en-nz":6319,"./en-nz.js":6319,"./en-sg":1662,"./en-sg.js":1662,"./eo":2915,"./eo.js":2915,"./es":5655,"./es-do":5251,"./es-do.js":5251,"./es-mx":6112,"./es-mx.js":6112,"./es-us":1146,"./es-us.js":1146,"./es.js":5655,"./et":5603,"./et.js":5603,"./eu":7763,"./eu.js":7763,"./fa":6959,"./fa.js":6959,"./fi":1897,"./fi.js":1897,"./fil":2549,"./fil.js":2549,"./fo":4694,"./fo.js":4694,"./fr":4470,"./fr-ca":3049,"./fr-ca.js":3049,"./fr-ch":2330,"./fr-ch.js":2330,"./fr.js":4470,"./fy":5044,"./fy.js":5044,"./ga":9295,"./ga.js":9295,"./gd":2101,"./gd.js":2101,"./gl":8794,"./gl.js":8794,"./gom-deva":7884,"./gom-deva.js":7884,"./gom-latn":3168,"./gom-latn.js":3168,"./gu":5349,"./gu.js":5349,"./he":4206,"./he.js":4206,"./hi":94,"./hi.js":94,"./hr":316,"./hr.js":316,"./hu":2138,"./hu.js":2138,"./hy-am":1423,"./hy-am.js":1423,"./id":9218,"./id.js":9218,"./is":8529,"./is.js":8529,"./it":626,"./it-ch":150,"./it-ch.js":150,"./it.js":626,"./ja":9183,"./ja.js":9183,"./jv":4286,"./jv.js":4286,"./ka":2105,"./ka.js":2105,"./kk":7772,"./kk.js":7772,"./km":8758,"./km.js":8758,"./kn":9282,"./kn.js":9282,"./ko":3730,"./ko.js":3730,"./ku":1408,"./ku.js":1408,"./ky":3291,"./ky.js":3291,"./lb":6841,"./lb.js":6841,"./lo":5466,"./lo.js":5466,"./lt":7010,"./lt.js":7010,"./lv":7595,"./lv.js":7595,"./me":9861,"./me.js":9861,"./mi":5493,"./mi.js":5493,"./mk":5966,"./mk.js":5966,"./ml":7341,"./ml.js":7341,"./mn":5115,"./mn.js":5115,"./mr":370,"./mr.js":370,"./ms":9847,"./ms-my":1237,"./ms-my.js":1237,"./ms.js":9847,"./mt":2126,"./mt.js":2126,"./my":6165,"./my.js":6165,"./nb":4924,"./nb.js":4924,"./ne":6744,"./ne.js":6744,"./nl":3901,"./nl-be":9814,"./nl-be.js":9814,"./nl.js":3901,"./nn":3877,"./nn.js":3877,"./oc-lnc":2135,"./oc-lnc.js":2135,"./pa-in":5858,"./pa-in.js":5858,"./pl":4495,"./pl.js":4495,"./pt":9520,"./pt-br":7971,"./pt-br.js":7971,"./pt.js":9520,"./ro":6459,"./ro.js":6459,"./ru":1793,"./ru.js":1793,"./sd":950,"./sd.js":950,"./se":490,"./se.js":490,"./si":124,"./si.js":124,"./sk":4249,"./sk.js":4249,"./sl":4985,"./sl.js":4985,"./sq":1104,"./sq.js":1104,"./sr":9131,"./sr-cyrl":9915,"./sr-cyrl.js":9915,"./sr.js":9131,"./ss":5893,"./ss.js":5893,"./sv":8760,"./sv.js":8760,"./sw":1172,"./sw.js":1172,"./ta":7333,"./ta.js":7333,"./te":3110,"./te.js":3110,"./tet":2095,"./tet.js":2095,"./tg":7321,"./tg.js":7321,"./th":9041,"./th.js":9041,"./tk":9005,"./tk.js":9005,"./tl-ph":5768,"./tl-ph.js":5768,"./tlh":9444,"./tlh.js":9444,"./tr":2397,"./tr.js":2397,"./tzl":8254,"./tzl.js":8254,"./tzm":1106,"./tzm-latn":699,"./tzm-latn.js":699,"./tzm.js":1106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":7691,"./uk.js":7691,"./ur":3795,"./ur.js":3795,"./uz":6791,"./uz-latn":588,"./uz-latn.js":588,"./uz.js":6791,"./vi":5666,"./vi.js":5666,"./x-pseudo":4378,"./x-pseudo.js":4378,"./yo":5805,"./yo.js":5805,"./zh-cn":3839,"./zh-cn.js":3839,"./zh-hk":5726,"./zh-hk.js":5726,"./zh-mo":9807,"./zh-mo.js":9807,"./zh-tw":4152,"./zh-tw.js":4152};function i(e){var t=r(e);return a(t)}function r(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=r,e.exports=i,i.id=6700}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,