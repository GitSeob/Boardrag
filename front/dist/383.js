(self.webpackChunk_42board_front=self.webpackChunk_42board_front||[]).push([[383],{2033:(e,t,a)=>{"use strict";a.d(t,{Z:()=>d});var n=a(7294),i=a(5366);const r=a(9911).F4`
    from {
        transform: rotate(0);
    }
    to {
        transform: rotate(359deg);
    }
`,l=(0,i.Z)("div",{target:"ekojj7n2",label:"LoadingCircleContainer"})({name:"8lbyj9",styles:"width:300px;height:300px;display:flex;justify-content:center;align-items:center;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)"}),o=(0,i.Z)("div",{target:"ekojj7n1",label:"LoadingCircleBox"})("width:150px;height:150px;padding:3px;display:flex;justify-content:center;align-items:center;border-radius:50%;background:rgb(63, 249, 200);background:linear-gradient(0deg, rgba(63, 249, 200, 0.1) 33%, rgba(63, 249, 220, 1) 100%);animation:",r," .8s linear 0s infinite;"),s=(0,i.Z)("div",{target:"ekojj7n0",label:"LoadingCircleCore"})({name:"1sudnkc",styles:"width:100%;height:100%;background:#001c29;border-radius:50%"}),d=()=>n.createElement(l,null,n.createElement(o,null,n.createElement(s,null)))},1524:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>we});var n=a(7294),i=a(8100),r=a(3564),l=a(2033),o=a(5977),s=a(381),d=a.n(s),c=a(3653),h=a.n(c),g=a(3286),m=a(5615);const p={},u=e=>{const t=(0,n.useCallback)((()=>{e&&p[e]&&(p[e].disconnect(),delete p[e])}),[e]);return e?(p[e]||(p[e]=(0,m.Z)("https://api.42board.com/ws-"+e,{transports:["websocket"]}),console.info("create socket",e,p[e].id)),[p[e],t]):[void 0,t]};var x=a(5366),f=a(9911);const w=f.F4`
    from {
        max-width: 0;
        max-height: 0;
    }
    to {
        max-width: 200px;
        max-height: 200px;
    }
`,y=f.F4`
    from {
        max-width: 200px;
        max-height: 200px;
    }
    to {
        max-width: 0px;
        max-height: 0px
    }
`,b=f.F4`
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
`,v=(f.F4`
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
`,f.F4`
    from {
        opacity: 0;
        transform: translateX(-10%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
`),k=f.F4`
    0% {
        width: 0%;
        height: 0%;
    }
    50% {
        width: 30%;
        height: 30%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,j=(0,x.Z)("div",{target:"e1jwxo3k31",label:"UserMenu"})({name:"11zbg1q",styles:"position:fixed;min-height:100vh;width:300px;right:0;background:#000;transition:.3s;z-index:9"}),E=(0,x.Z)("div",{target:"e1jwxo3k30",label:"MenuContainer"})({name:"kpkhq9",styles:"position:relative;padding-bottom:40px;height:100vh;div{color:#fff;}.up{position:absolute;cursor:pointer;top:1rem;padding:.5rem;transform:translateX(-150%);width:30px;height:30px;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px;}"}),z=((0,x.Z)("div",{target:"e1jwxo3k29",label:"OpenMenu"})({name:"164x91j",styles:"position:fixed;top:1rem;right:1rem;width:30px;height:30px;z-index:9;cursor:pointer;background:#000;box-shadow:0 0 4px 1px #ddd;display:flex;align-items:center;justify-content:center;border-radius:30px"}),(0,x.Z)("div",{target:"e1jwxo3k28",label:"KonvaContainer"})({name:"r3bm38",styles:"position:relative;display:flex;flex-direction:column;min-height:100vh;transition:.3s"})),C=(0,x.Z)("div",{target:"e1jwxo3k27",label:"MenuBox"})("display:flex;flex-direction:column;position:absolute;background:rgba(0, 0, 0, .85);display:",(e=>e.disp?"block":"none"),";overflow:hidden;color:#efefef;border-radius:5px;box-shadow:0 0 8px 1px rgb(0, 0, 0);max-width:",(e=>e.clicked?"200px":"0px"),";max-height:",(e=>e.clicked?"200px":"0px"),";top:",(e=>e.y),";left:",(e=>e.x),";animation:",(e=>e.clicked?w:y)," .3s ease-in-out 1;z-index:10;"),Z=(0,x.Z)("div",{target:"e1jwxo3k26",label:"MenuAttr"})({name:"1jdih7z",styles:"width:120px;padding:1rem;cursor:pointer;position:relative;&:hover{background:rgba(20, 20, 20, .5);}@media screen and (max-width: 800px){font-size:12px;width:100px;padding:.5rem;}@media screen and (max-width: 500px){font-size:10px;width:80px;padding:.3rem;}"}),M=(0,x.Z)("div",{target:"e1jwxo3k25",label:"BoardFooter"})({name:"uellsq",styles:"width:100%;align-items:center;justify-content:center;color:rgba(255, 255, 255, .6);font-weight:400;font-size:12px;text-align:center;display:flex;padding:1rem;height:100%;background:rgba(0, 0, 0, .1)"}),S=(0,x.Z)("div",{target:"e1jwxo3k24",label:"ComponentBox"})("position:absolute;width:",(e=>e.width),";height:",(e=>e.height),";left:",(e=>e.x),";top:",(e=>e.y),";display:flex;align-items:center;justify-content:center;background:transparent;z-index:4;padding:2px;"),R=(0,x.Z)("pre",{target:"e1jwxo3k23",label:"TextComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);background:rgba(0, 0, 0, .75);color:#fff;width:100%;height:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;animation:",k," .3s ease-in-out 1;overflow:hidden;padding:5px;white-space:break-spaces;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}"),L=(0,x.Z)("div",{target:"e1jwxo3k22",label:"ImageComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);display:flex;align-items:center;justify-content:center;cursor:pointer;border-radius:5px;overflow:hidden;width:100%;height:100%;animation:",k," .3s ease-in-out 1;@media screen and (max-width: 800px){font-size:10px;}@media screen and (max-width: 500px){font-size:8px;}&>img{width:100%;height:100%;}&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}"),U=(0,x.Z)("div",{target:"e1jwxo3k21",label:"WarnMessage"})({name:"16igor6",styles:"position:absolute;background:rgba(0, 0, 0, .6);z-index:5;border-radius:5px;color:#ff5555;font-weight:500;font-size:14px;padding:1rem 2rem;top:50%;left:50%;transform:translate(-50%, -50%)"}),B=(0,x.Z)("div",{target:"e1jwxo3k20",label:"NoteComponent"})("position:relative;border-radius:5px;box-shadow:0 0 4px 1px rgba(255, 255, 255, .3);color:#fff;display:flex;flex-direction:column;align-items:center;justify-content:center;cursor:pointer;animation:",k," .3s ease-in-out 1;width:100%;height:100%;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"rgba(0, 0, 0, .75)"),";background-size:cover;overflow:hidden;padding:5px;&:hover{box-shadow:0 0 20px 3px rgba(255, 255, 255, .3);z-index:5;.alt{display:flex;}}.head{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;height:auto;font-size:20px;font-weight:600;padding-bottom:.5rem;white-space:break-spaces;}@media screen and (max-width: 800px){font-size:10px;div.head{font-size:14px;}}@media screen and (max-width: 500px){font-size:8px;div.head{font-size:12px;}}&>pre{text-shadow:",(e=>e.src?"0 1px 5px #000":"none"),";width:100%;overflow:hidden;text-overflow:ellipsis;padding:5px;white-space:break-spaces;}"),I=(0,x.Z)("div",{target:"e1jwxo3k19",label:"DetailBackground"})("width:100%;height:100%;z-index:12;position:absolute;top:0;left:0;background:rgba(0, 0, 0, .4);animation:",b," .5s ease-in-out 1;"),N=(0,x.Z)("div",{target:"e1jwxo3k18",label:"DetailWindow"})({name:"b8x90n",styles:"position:fixed;min-height:100vh;height:100%;width:400px;background:rgba(0, 0, 0, .85);top:0;left:0;z-index:13;transition:.3s;color:#fff"}),D=(0,x.Z)("div",{target:"e1jwxo3k17",label:"DetailBox"})({name:"1b7ro16",styles:"position:relative;width:100%;height:100%;padding:1rem;padding-bottom:4rem;overflow:auto;&>div{margin:1rem 0;}"}),H=(0,x.Z)("div",{target:"e1jwxo3k16",label:"TopFixContent"})({name:"1i7bcd8",styles:"position:relative;width:100%;overflow:hidden"}),T=(0,x.Z)("div",{target:"e1jwxo3k15",label:"BottomFixContent"})({name:"14qk46b",styles:"position:fixed;bottom:0;display:flex;overflow:hidden;height:4rem;background:#000;padding:1rem .5rem;&>input{width:calc(400px - 4rem);padding:5px;border-radius:5px;box-shadow:0 0 4px 1px #ffffff;font-size:14px;margin-right:.5rem;}&>div{width:2rem;background:#radial-gradient(ellipse at bottom, #002534 0%, #090a0f 100%) no-repeat;cursor:pointer;color:#fff;transition:.3s;display:flex;justify-content:center;align-items:center;svg{fill:#fff;}}"}),F=(0,x.Z)("div",{target:"e1jwxo3k14",label:"UserInfo"})({name:"11lxd0m",styles:"width:100%;height:6rem;display:flex;justify-content:flex-start;align-items:center;&>img{width:5rem;height:5rem;border-radius:100%;margin-right:1rem;}&>p{font-size:18px;font-weight:700;width:100%;}"}),_=(0,x.Z)("div",{target:"e1jwxo3k13",label:"UDButtonBox"})({name:"tvvsuy",styles:"display:flex;align-items:center;justify-content:center;&>button{background:transparent!important;cursor:pointer;}"}),A=(0,x.Z)("div",{target:"e1jwxo3k12",label:"MomentBox"})({name:"1ndgiad",styles:"margin-top:.5rem;margin-bottom:1rem;&>div{font-size:12px;display:flex;align-items:center;color:#d5d5d5;p{margin-left:.5rem;font-size:14px;color:#fff;}}"}),W=(0,x.Z)("div",{target:"e1jwxo3k11",label:"DetailContentBox"})({name:"biqufq",styles:"border-radius:5px;background:#fff;color:#000;margin-top:.5rem;overflow:hidden;&>pre{padding:1rem .5rem;white-space:break-spaces;}&>img{width:100%;}&>h2{margin:0 .5rem;padding:1rem 0 .5rem 0;border-bottom:1px solid #ddd;}&>div{padding:1rem;}"}),Y=(0,x.Z)("div",{target:"e1jwxo3k10",label:"CommentBox"})(""),X=(0,x.Z)("div",{target:"e1jwxo3k9",label:"Comment"})("display:flex;min-height:3rem;margin-bottom:.5rem;animation:",v,' .5s ease-in-out 1;&>img{width:3rem;height:3rem;border-radius:100%;margin-right:1rem;}.content{width:100%;&>div{display:flex;align-items:flex-end;width:100%;div{background:#f8f8f8;border-radius:5px;color:#000;padding:.5rem;min-height:100%;width:100%;position:relative;&::before{content:"";transform:skewX(30deg);width:15px;left:0;height:15px;background:#f8f8f8;position:absolute;top:0;z-index:-1;}}&>p{color:#777;height:fit-content;font-size:10px;margin-left:.3rem;width:8rem;}}}'),q=(0,x.Z)("div",{target:"e1jwxo3k8",label:"EditArea"})({name:"ph2pyk",styles:"position:relative;padding:0!important;overflow:hidden;&>textarea{width:calc(100% - 50px);resize:none;padding:.5rem;}&>input{width:calc(100% - 50px);font-size:24px;padding:.5rem;font-weight:600;margin-bottom:1rem;}"}),O=(0,x.Z)("div",{target:"e1jwxo3k7",label:"EditButtonBox"})({name:"xp8khj",styles:"position:absolute;right:0;top:0;height:100%;width:50px;display:flex;flex-direction:column;align-items:center;justify-content:center;overflow:hidden;.button{height:50%;background:#777;color:#fff;width:100%;display:flex;align-items:center;justify-content:center;cursor:pointer;&.edit{background:#01babc;color:#000;}}"}),V=(0,x.Z)("div",{target:"e1jwxo3k6",label:"ImageBox"})({name:"16hwasf",styles:"position:relative;width:calc(100% - 50px);height:fit-content;&>img{width:100%;}.temp{width:100%;height:6rem;background:#eee;}"}),P=(0,x.Z)("div",{target:"e1jwxo3k5",label:"EditImageInput"})({name:"9jsky2",styles:"position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:50%;padding:.5rem 1rem;background:rgba(0, 0, 0, 0.4);color:#fff;border-radius:3px;display:flex;align-items:center;justify-content:center;height:2rem;cursor:pointer;&>svg{fill:#fff;height:2rem;}"}),$=(0,x.Z)("div",{target:"e1jwxo3k4",label:"LogOutButton"})({name:"7zeqew",styles:"position:absolute;width:100%;font-align:left;bottom:0;left:0;height:40px;cursor:pointer;display:flex;align-items:center;justify-content:center;&:hover{background:#111;}"}),G=(0,x.Z)("div",{target:"e1jwxo3k3",label:"UserList"})({name:"jiw9tn",styles:'width:100%;height:100%;padding:1rem;&>ul{list-style-type:none;li{position:relative;padding-left:1rem;&:before{position:absolute;content:"";top:50%;left:0;width:5px;height:5px;border-radius:5px;background:#66DD66;transform:translateY(-50%);}}}'}),K=(0,x.Z)("div",{target:"e1jwxo3k2",label:"AltBox"})({name:"tf3ob0",styles:"position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0, 0, 0, .8);display:none;justify-content:center;align-items:center;color:#fff;&>div{display:flex;}"}),J=(0,x.Z)("div",{target:"e1jwxo3k1",label:"OnModeAlt"})({name:"1ew80oi",styles:"position:relative;background:#000;display:flex;justify-content:center;align-items:center;z-index:21;color:#fff;padding:.5rem;border-radius:3px;line-height:1.2;border:1px solid #999;transition:.3s;cursor:pointer;width:fit-content;margin-bottom:1rem;&.resize{flex-direction:column;}&>img{background:transparent;}&>span{width:0;height:1rem;overflow:hidden;}&:hover{&>img{margin-left:.5rem;}&>span{width:fit-content;}}"}),Q=(0,x.Z)("div",{target:"e1jwxo3k0",label:"ResizeRemote"})({name:"1ej8yoa",styles:"display:flex;justify-content:center;align-items:center;&>span{width:4rem;}&>button{width:1.5rem;height:1.5rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;background:transparent;cursor:pointer;}button.decrease img{transform:rotate(180deg);}&>div{background:rgb(32, 178, 170);box-shadow:0 0 3px 1px rgb(32, 178, 170);width:1.5rem;height:1.5rem;border-radius:1rem;color:#fff;display:flex;justify-content:center;align-items:center;font-weight:600;}&:nth-of-type(2){margin-top:.5rem;}"}),ee=f.F4`
    0% {
        width: 0;
        height: 0;
    }
    30% {
        width: 10%;
        height: 10%;
    }
    100% {
        width: 100%;
        height: 100%;
    }
`,te=(0,x.Z)("div",{target:"er682az9",label:"AddContainer"})("position:absolute;z-index:4;display:flex;align-items:center;justify-content:center;top:",(e=>e.y+5),";left:",(e=>e.x+5),";width:",(e=>e.width-10),";height:",(e=>e.height-10),";z-index:6;"),ae=(0,x.Z)("div",{target:"er682az8",label:"AddBox"})("position:relative;display:flex;align-items:center;justify-content:center;border-radius:5px;background:#fff;box-shadow:0 0 4px 1px rgba(255, 255, 255, .5);color:#000;width:100%;animation:",ee," .3s ease-in-out 1;height:100%;&.note{padding:0;border-radius:5px;}&>img{width:100%;height:100%;border-radius:5px;}"),ne=(0,x.Z)("div",{target:"er682az7",label:"SubmitButton"})("position:absolute;display:flex;align-items:center;justify-content:center;top:0;right:",(e=>e.right),";transform:translateX(100%);width:",(e=>e.size-10),";height:",(e=>e.size-10),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");border-radius:5px;background:#01babc;color:#fff;box-shadow:0 0 4px 1px rgba(1, 186, 188, .7);cursor:pointer;padding:2px;&>svg{height:20px;fill:#fff;}@media screen and (max-width: 800px){border-radius:2px;}"),ie=(0,x.Z)("div",{target:"er682az6",label:"ImageInputButton"})("position:absolute;display:flex;align-items:center;justify-content:center;right:",(e=>e.right),";top:",(e=>e.size),";transform:translateX(",(e=>-5===e.right?"100%":"0"),");width:",(e=>e.size-10),";height:",(e=>e.size-10),";border-radius:5px;cursor:pointer;background:#34568B;box-shadow:0 0 4px 1px rgba(52, 86, 139, .7);padding:2px;&>svg{fill:#fff;height:20px;}@media screen and (max-width: 800px){border-radius:2px;}"),re=(0,x.Z)("textarea",{target:"er682az5",label:"TextArea"})({name:"kf3szx",styles:"width:100%;max-height:100%;overflow:auto;border:none;border-radius:5px;padding:0;white-space:normal;text-align:center;resize:none;padding:5px"}),le=(0,x.Z)("div",{target:"er682az4",label:"ImageAddBox"})({name:"kh4re2",styles:"width:100%;height:100%;display:flex;align-items:center;justify-content:center;font-size:12px;font-weight:500;overflow:hidden;text-align:center;word-break:keep-all;&>img{width:100%;height:100%;}"}),oe=(0,x.Z)("div",{target:"er682az3",label:"NoteAddBox"})("width:100%;heigth:100%;display:flex;align-items:center;justify-content:center;flex-direction:column;background:",(e=>e.src?"url('"+e.src+"') no-repeat center":"#fff"),";background-size:cover;overflow:hidden;animation:",ee," .3s ease-in-out 1;padding:5px;border-radius:5px;color:",(e=>e.src?"#fff":"000"),'!important;&>div{background:transparent;font-weight:500;}textarea{font-size:12px;}input[type="text"],textarea{color:',(e=>e.src?"#fff":"#000"),"!important;text-shadow:",(e=>e.src?"0 3px 10px #000":"none"),";}@media screen and (max-width: 800px){textarea{font-size:10px;}input{font-size:142x;}}@media screen and (max-width: 500px){textarea{font-size:8px;}input{font-size:10px;}}"),se=(0,x.Z)("div",{target:"er682az2",label:"InputBox"})("width:100%;height:",(e=>e.size),";overflow:hidden;&>textarea{background:none;}"),de=(0,x.Z)("input",{target:"er682az1",label:"InputArea"})({name:"16gi3ra",styles:"width:100%;height:100%;padding:5px;font-weight:600;background:inherit!important;color:inherit!important"}),ce=(0,x.Z)("div",{target:"er682az0",label:"WarnBox"})({name:"1ubbc98",styles:"width:100%;height:100%;background:rgba(0, 0, 0, .8);color:red;font-size:12px;display:flex;align-items:center;justify-content:center"}),he=({x:e,y:t,width:a,height:i,offset:r,initStates:l,dataReval:o})=>{const s=(0,n.useRef)(),[d]=u(42),[c,g]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),m=(0,n.useCallback)((()=>{s.current.click()}),[s.current]),p=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await g({...c,loading:!0}),await h().post("/api/uploadImage",t,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then((e=>{g({...c,success:!0,loading:!1,imageURL:e.data.url}),d?.emit("refresh")})).catch((e=>{g({...c,loading:!1,message:e.response.data})}))}),[]),x=(0,n.useCallback)((async()=>{g({...c,loading:!0}),await h().post("/api/write/image",{url:c.imageURL,x:r.x,y:r.y,width:r.width,height:r.height}).then((e=>{if(202===e.status)return g({...c,loading:!1,message:e.data.reason}),setTimeout((()=>{g({...c,message:""})}),2e3);g({...c,loading:!1,success:!0}),l(),o()})).catch((e=>{g({...c,loading:!1,message:e.response.reason})}))}),[c]);return n.createElement(te,{y:t,x:e,width:a,height:i},""===c.message?n.createElement(ae,null,""===c.imageURL?n.createElement(le,null,"오른쪽 버튼을 클릭해서 사진을 업로드해주세요."):n.createElement("img",{src:c.imageURL}),n.createElement(ne,{size:a/r.width,onClick:x,right:r.x+r.width<32?-5:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(ie,{onClick:m,size:a/r.width,right:r.x+r.width<32?-5:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:s,onChange:p}))):n.createElement(ce,null,c.message))},ge=({x:e,y:t,width:a,height:i,offset:r,initStates:l,dataReval:o})=>{const[s,d]=(0,n.useState)(""),[c]=u(42),[g,m]=(0,n.useState)({loading:!1,success:!1,warning:""}),p=(0,n.useRef)(),[x,f]=(0,n.useState)("auto"),w=(0,n.useCallback)((e=>{f(p.current.scrollHeight+"px"),d(e.target.value)}),[p]),y=(0,n.useCallback)((async e=>{e.preventDefault(),m({...g,loading:!0}),await h().post("api/write/text",{content:s,x:r.x,y:r.y,width:r.width,height:r.height}).then((e=>{if(202===e.status)return m({...g,warning:e.data.reason}),setTimeout((()=>{m({...g,warning:""})}),2e3);m({...g,loading:!1,success:!0}),l(),c?.emit("refresh"),o()})).catch((e=>{m({...g,loading:!1,warning:e.data.reason})}))}),[s]);return n.createElement(te,{y:t,x:e,width:a,height:i},""===g.warning?n.createElement(ae,null,g.loading?n.createElement("div",null,"loading..."):n.createElement(re,{style:{height:x},value:s,onChange:w,autoFocus:!0,ref:p}),n.createElement(ne,{size:a/r.width,onClick:y,right:r.x+r.width<32?-5:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"})))):n.createElement(ce,null,g.warning))},me=e=>{const[t,a]=(0,n.useState)(e);return[t,(0,n.useCallback)((e=>{a(e.target.value)}),[]),a]},pe=({x:e,y:t,width:a,height:i,offset:r,initStates:l,dataReval:o})=>{const[s,d]=me(""),[c,g]=me(""),[m]=u(42),p=(0,n.useRef)(),[x,f]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),w=(0,n.useCallback)((()=>{p.current.click()}),[p.current]),y=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await f({...x,loading:!0}),await h().post("/api/uploadImage",t).then((e=>{f({...x,success:!0,loading:!1,imageURL:e.data.url}),m?.emit("refresh")})).catch((e=>{f({...x,loading:!1,message:e.response.data})}))}),[x]),b=(0,n.useCallback)((async()=>{f({...x,loading:!0}),await h().post("/api/write/note",{background_img:x.imageURL,head:s,paragraph:c,x:r.x,y:r.y,width:r.width,height:r.height}).then((e=>{if(202===e.status)return f({...x,loading:!1,message:e.data.reason}),setTimeout((()=>{f({...x,message:""})}),2e3);f({...x,loading:!1,success:!0}),l(),o()})).catch((e=>{f({...x,loading:!1,message:e.response.data})}))}),[x,c,s]);return n.createElement(te,{y:t,x:e,width:a,height:i},""===x.message?n.createElement(ae,{className:"note"},n.createElement(oe,{src:""!==x.imageURL?x.imageURL:null},n.createElement(se,{size:i/r.height},n.createElement(de,{key:"headerInput",type:"text",placeholder:"타이틀을 입력해주세요.",value:s,onChange:d})),n.createElement(se,{size:i-i/r.height-20},n.createElement(re,{value:c,onChange:g,autoFocus:!0,placeholder:"본문 내용을 입력해주세요.",style:{textAlign:"left"}}))),n.createElement(ne,{size:a/r.width,onClick:b,right:r.x+r.width<32?-5:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))),n.createElement(ie,{onClick:w,size:a/r.width,right:r.x+r.width<32?-5:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:p,onChange:y}))):n.createElement(ce,null,x.message))},ue=({imageInput:e,onChangeImg:t,onClick:a})=>n.createElement(P,{onClick:a},n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"black",width:"18px",height:"18px"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M0 0h24v24H0V0z",fill:"none"}),n.createElement("path",{d:"M18 13v7H4V6h5.02c.05-.71.22-1.38.48-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5l-2-2zm-1.5 5h-11l2.75-3.53 1.96 2.36 2.75-3.54zm2.8-9.11c.44-.7.7-1.51.7-2.39C20 4.01 17.99 2 15.5 2S11 4.01 11 6.5s2.01 4.5 4.49 4.5c.88 0 1.7-.26 2.39-.7L21 13.42 22.42 12 19.3 8.89zM15.5 9C14.12 9 13 7.88 13 6.5S14.12 4 15.5 4 18 5.12 18 6.5 16.88 9 15.5 9z"})),n.createElement("p",null,"이미지 변경하기"),n.createElement("input",{style:{width:0,height:0},type:"file",accept:".gif, .jpg, .png",ref:e,onChange:t})),xe=({boardData:e,dataReval:t,userData:a})=>{const i=n.useRef(),[r,l]=(0,n.useState)({x:0,y:0,dragged:!1}),[o,s]=(0,n.useState)({x:0,y:0}),[c,m]=(0,n.useState)({x:0,y:0}),[p,u]=(0,n.useState)({x:0,y:0,flg:!1,disp:!1}),[x,f]=(0,n.useState)({x:0,y:0,width:0,height:0}),[w,y]=(0,n.useState)(0),[b,v]=(0,n.useState)({category:0,id:0,flg:!1,loadComment:!1,content:null}),[k,j]=(0,n.useState)(""),[E,P]=(0,n.useState)(window.innerWidth),[$,G]=(0,n.useState)(E/32),[ee,te]=(0,n.useState)({width:$,height:$}),[ae,ne,ie]=me(""),[re,le]=(0,n.useState)(20*$),[oe,se]=(0,n.useState)(),[de,ce]=(0,n.useState)(!1),[xe,fe]=(0,n.useState)(""),[we,ye,be]=me(""),[ve,ke]=(0,n.useState)(""),[je,Ee]=(0,n.useState)({loading:!1,success:!1,imageURL:"",message:""}),[ze,Ce]=(0,n.useState)(!1),[Ze,Me]=(0,n.useState)(!1),Se=(0,n.useRef)(),Re=(0,n.useRef)(),Le=new Date,Ue={transform:b.flg?"translateX(0%)":"translateX(-100%)"};(0,n.useEffect)((()=>{m({x:c.x/$*window.innerWidth/32,y:c.y/$*window.innerWidth/32}),te({width:ee.width/$*window.innerWidth/32,height:ee.height/$*window.innerWidth/32}),P(window.innerWidth),G(window.innerWidth/32),le(window.innerWidth/32*20)}),[window.innerWidth,$]);const Be=(0,n.useCallback)((e=>{const t=ee.width/$,a=ee.height/$;a*t<4?j("최소 4칸의 영역을 선택해야합니다."):3===e&&a*t<6?j("이미지는 최소 6칸의 영역을 선택해야합니다."):2===e&&a*t<20?j("노트는 최소 20칸이상의 영역을 선택해야합니다."):2===e&&(a<3||t<4)?j("노트는 4x3이상의 영역을 선택해야합니다."):(f({x:c.x/$,y:c.y/$,width:ee.width/$,height:ee.height/$}),y(e))}),[ee,$]),Ie=(0,n.useCallback)((()=>{if(r&&!ze){let e=$*Math.floor(Math.abs(o.x-o.x%$-r.x)/$+1),t=$*Math.floor(Math.abs(o.y-o.y%$-r.y)/$+1);const a=o.x-r.x,n=o.y-r.y;a<0&&n>0?m({...c,x:o.x-o.x%$}):a>0&&n<0?m({...c,y:o.y-o.y%$}):a<0&&n<0&&m({x:o.x-o.x%$,y:o.y-o.y%$}),a>$&&(e+=$),n>$&&(t+=$),te({width:e,height:t})}}),[o,r,c,$]),Ne=e=>{m({x:e.target.x()-e.target.x()%$,y:e.target.y()-e.target.y()%$})},De=({x:e=0,y:t=0})=>{const a=ze?"rgba(32, 178, 170, .5)":"rgba(255, 255, 255, 0.1)";return n.createElement(g.Rect,{width:ee.width,height:ee.height,fill:a,x:e,y:t,cornerRadius:5,draggable:!0,onDragEnd:Ne})},He=(0,n.useCallback)(((e,t,a)=>e>t&&e<a),[]),Te=(0,n.useCallback)((()=>!(e?.TextContents&&e.TextContents.filter((e=>!(1===b.category&&e.id===b.id))).find((e=>(He(e.x*$,c.x,c.x+ee.width)||He((e.x+e.width)*$,c.x,c.x+ee.width))&&(He(e.y*$,c.y,c.y+ee.height)||He((e.y+e.height)*$,c.y,c.y+ee.height))||(He(e.x*$,c.x,c.x+ee.width)||He((e.x+e.width)*$,c.x,c.x+ee.width))&&(He(c.y,e.y*$,(e.y+e.height)*$)||He(c.y+ee.height,e.y*$,(e.y+e.height)*$))||(He(c.x,e.x*$,(e.x+e.width)*$)||He(c.x+ee.width,e.x*$,(e.x+e.width)*$))&&(He(e.y*$,c.y,c.y+ee.height)||He((e.y+e.height)*$,c.y,c.y+ee.height))))||e?.Images&&e.Images.filter((e=>!(3===b.category&&e.id===b.id))).find((e=>(He(e.x*$,c.x,c.x+ee.width)||He((e.x+e.width)*$,c.x,c.x+ee.width))&&(He(e.y*$,c.y,c.y+ee.height)||He((e.y+e.height)*$,c.y,c.y+ee.height))||(He(e.x*$,c.x,c.x+ee.width)||He((e.x+e.width)*$,c.x,c.x+ee.width))&&(He(c.y,e.y*$,(e.y+e.height)*$)||He(c.y+ee.height,e.y*$,(e.y+e.height)*$))||(He(c.x,e.x*$,(e.x+e.width)*$)||He(c.x+ee.width,e.x*$,(e.x+e.width)*$))&&(He(e.y*$,c.y,c.y+ee.height)||He((e.y+e.height)*$,c.y,c.y+ee.height))))||e?.Notes&&e.Notes.filter((e=>!(2===b.category&&e.id===b.id))).find((e=>(He(e.x*$,c.x,c.x+ee.width)||He((e.x+e.width)*$,c.x,c.x+ee.width))&&(He(e.y*$,c.y,c.y+ee.height)||He((e.y+e.height)*$,c.y,c.y+ee.height))||(He(e.x*$,c.x,c.x+ee.width)||He((e.x+e.width)*$,c.x,c.x+ee.width))&&(He(c.y,e.y*$,(e.y+e.height)*$)||He(c.y+ee.height,e.y*$,(e.y+e.height)*$))||(He(c.x,e.x*$,(e.x+e.width)*$)||He(c.x+ee.width,e.x*$,(e.x+e.width)*$))&&(He(e.y*$,c.y,c.y+ee.height)||He((e.y+e.height)*$,c.y,c.y+ee.height)))))),[e,c,$,ee,b]),Fe=(e,t,a,n,i,r,l,o)=>!(i>=e&&r>=t&&i+l<=e+a&&r+o<=t+n),_e=(0,n.useCallback)((()=>!(!Te()||e?.TextContents?.filter((e=>!(1===b.category&&e.id===b.id))).find((e=>!Fe(e.x*$,e.y*$,e.width*$,e.height*$,c.x,c.y,ee.width,ee.height)))||e?.Images?.filter((e=>!(3===b.category&&e.id===b.id))).find((e=>!Fe(e.x*$,e.y*$,e.width*$,e.height*$,c.x,c.y,ee.width,ee.height)))||e?.Notes?.filter((e=>!(2===b.category&&e.id===b.id))).find((e=>!Fe(e.x*$,e.y*$,e.width*$,e.height*$,c.x,c.y,ee.width,ee.height))))),[e,c,ee,$,b]),Ae=(0,n.useCallback)((e=>{Te()?Be(e):j("겹치는 영역이 존재합니다.")}),[ee,c,$,ee]),We=(0,n.useCallback)((()=>{te({width:$,height:$}),l({...r,dragged:!1}),u({...p,flg:!1}),y(0),j("")}),[$,r,p]),Ye=(0,n.useCallback)(((e,t,a)=>{v({...b,flg:!0,category:e,id:t,content:a}),se(a.Comments)}),[b]),Xe=(0,n.useCallback)((e=>{e.preventDefault(),""!==ae&&h().post(`/api/comment/${b.category}/${b.content?.id}`,{content:ae}).then((()=>{ie(""),t()})).catch((e=>{console.error(e)}))}),[ae,b]),qe=(0,n.useCallback)((()=>{if(!confirm("정말 삭제하시겠습니까?"))return;let e="";if(1===b.category)e="text";else if(2===b.category)e="note";else{if(3!==b.category)return;e="image"}h().delete(`api/delete/${e}/${b.content?.id}`).then((()=>{t(),v({category:0,id:0,flg:!1,loadComment:!1,content:null})})).catch((e=>{console.error(e)}))}),[b]),Oe=(0,n.useCallback)((e=>{ce(!de),de?(fe(""),be(""),ke("")):1===e?(fe("string"==typeof b.content?.content?b.content?.content:""),de&&Pe(Se.current.scrollHeight+"px")):2===e?(be("string"==typeof b.content?.head?b.content?.head:""),fe("string"==typeof b.content?.paragraph?b.content?.paragraph:""),Ee({...je,imageURL:"string"==typeof b.content?.background_img?b.content?.background_img:""}),de&&Pe(Se.current.scrollHeight+"px")):3===e&&Ee({...je,imageURL:"string"==typeof b.content?.url?b.content?.url:""})}),[de,b,Se]),[Ve,Pe]=(0,n.useState)("auto"),$e=(0,n.useCallback)((e=>{Pe(Se.current.scrollHeight+"px"),fe(e.target.value)}),[Se]),Ge=(0,n.useCallback)((()=>{v({category:0,id:0,flg:!1,loadComment:!1,content:null}),be(""),fe(""),Ee({loading:!1,success:!1,message:"",imageURL:""}),ce(!1)}),[]),Ke=(0,n.useCallback)((()=>{be(""),fe(""),Ee({loading:!1,success:!1,message:"",imageURL:""}),ce(!1)}),[]),Je=(0,n.useCallback)((()=>{Re.current.click()}),[Re.current]),Qe=(0,n.useCallback)((async e=>{const t=new FormData;t.append("image",e.target.files[0]),await Ee({...je,loading:!0}),await h().post("/api/uploadImage",t,{headers:{"Access-Control-Allow-Origin":"*"}}).then((e=>{Ee({...je,success:!0,loading:!1,imageURL:e.data.url})})).catch((e=>{Ee({...je,loading:!1,message:e.response.data})}))}),[]),et=(0,n.useCallback)((async()=>{let e="",a={x:b.content?.x,y:b.content?.y,width:b.content?.width,height:b.content?.height,content:"",head:"",paragraph:"",background_img:"",url:""};if(1===b.category)e="/api/text/"+b.id,a={...a,content:xe};else if(2===b.category)e="/api/note/"+b.id,a={...a,background_img:je.imageURL,head:we,paragraph:xe};else{if(3!==b.category)return await j("잘못된 접근입니다."),void await setTimeout((()=>{j("")}),2e3);if(""===je.imageURL)return await j("이미지를 다시 업로드해주세요"),void await setTimeout((()=>{j("")}),2e3);e="/api/image/"+b.id,a={...a,url:je.imageURL}}await h().patch(e,a).then((()=>{v({category:0,id:0,flg:!1,loadComment:!1,content:null}),t()})).catch((e=>{j(e.response.data),setTimeout((()=>{j("")}),2e3)})),Ke()}),[xe,we,b,je]),tt=(0,n.useCallback)((()=>{b.content&&(u({...p,flg:!1,disp:!1}),v({...b,flg:!1}),Ce(!0),m({x:b.content.x*$,y:b.content.y*$}),te({width:b.content.width*$,height:b.content.height*$}))}),[b,$]);return(0,n.useEffect)((()=>{0!=w||ze||(r.dragged?Ie():m({x:o.x-o.x%$,y:o.y-o.y%$}))}),[o,r,w]),(0,n.useEffect)((()=>{0!==w&&u({...p,flg:!1})}),[w]),(0,n.useEffect)((()=>{let t;1===b.category?t=e?.TextContents?.find((e=>e.id===b.id))?.Comments:2===b.category?t=e?.Notes?.find((e=>e.id===b.id))?.Comments:3===b.category&&(t=e?.Images?.find((e=>e.id===b.id))?.Comments),t&&se(t)}),[e,b]),n.createElement(z,null,""!==k&&n.createElement(U,null,k),b.flg&&n.createElement(I,{onClick:Ge}),n.createElement(N,{style:Ue},n.createElement(D,null,0!==b.id&&n.createElement(n.Fragment,null,n.createElement(H,null,n.createElement(F,null,n.createElement("img",{src:b.content?.User.profile_img}),n.createElement("p",null,b.content?.User.username),(a.is_admin||b.content&&b.content.UserId===a.id)&&n.createElement(_,null,n.createElement("button",{onClick:()=>Oe(b.category)},n.createElement("img",{src:"/public/edit.svg"})),n.createElement("button",{onClick:qe},n.createElement("img",{src:"/public/delete.svg"})),n.createElement("button",{onClick:tt},n.createElement("img",{src:"/public/resize.svg"})))),n.createElement(A,null,n.createElement("div",null,"작성일 : ",n.createElement("p",null,d()(b.content?.createdAt).format("YYYY년 MM월 DD일"))),n.createElement("div",null,"만료일 : ",n.createElement("p",null,d()(b.content?.expiry_date).format("YYYY년 MM월 DD일")))),"Content :",n.createElement(W,null,1===b.category&&(de?n.createElement(n.Fragment,null,n.createElement(q,null,n.createElement("textarea",{value:xe,onChange:$e,ref:Se,style:{height:Ve}}),n.createElement(O,null,n.createElement("div",{className:"button edit",onClick:et},"수정"),n.createElement("div",{className:"button",onClick:Ke},"취소")))):n.createElement("pre",null,b.content?.content)),2===b.category&&(de?n.createElement(n.Fragment,null,n.createElement(q,null,n.createElement(V,null,""!==je.imageURL?n.createElement("img",{src:je.imageURL}):n.createElement("div",{className:"temp"}),n.createElement(ue,{onClick:Je,imageInput:Re,onChangeImg:Qe})),n.createElement("input",{value:we,onChange:ye}),n.createElement("textarea",{value:xe,onChange:$e,ref:Se,style:{height:Ve}}),n.createElement(O,null,n.createElement("div",{className:"button edit",onClick:et},"수정"),n.createElement("div",{className:"button",onClick:Ke},"취소")))):n.createElement(n.Fragment,null,b.content?.background_img&&n.createElement("img",{src:b.content?.background_img}),n.createElement("h2",null,b.content?.head),n.createElement("pre",null,b.content?.paragraph))),3===b.category&&(de?n.createElement(n.Fragment,null,n.createElement(q,null,n.createElement(V,null,n.createElement("img",{src:je.imageURL}),n.createElement(ue,{onClick:Je,imageInput:Re,onChangeImg:Qe})),n.createElement(O,null,n.createElement("div",{className:"button edit",onClick:et},"수정"),n.createElement("div",{className:"button",onClick:Ke},"취소")))):n.createElement("img",{src:b.content?.url})))),n.createElement("div",{style:{borderBottom:"1px solid #444",padding:".5rem 0"}},"Comment:"),n.createElement(Y,null,oe?.map(((e,t)=>n.createElement(X,{key:t},n.createElement("img",{src:e.User.profile_img}),n.createElement("div",{className:"content"},n.createElement("p",null,e.User.username),n.createElement("div",null,n.createElement("div",null,e.content),n.createElement("p",null,d()(e.createdAt).diff(Le,"days")>-1?d()(e.createdAt).format("LT"):d()(e.createdAt).format("YYYY년 MM월 DD일")))))))))),n.createElement(T,{onClick:Xe},n.createElement("input",{type:"text",value:ae,onChange:ne,onKeyPress:e=>{"Enter"===e.key&&Xe(e)}}),n.createElement("div",null,n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",height:"24",viewBox:"0 0 24 24",width:"24"},n.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),n.createElement("path",{d:"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"}))))),n.createElement(C,{clicked:p.flg,x:p.x,y:p.y,disp:p.disp},n.createElement(Z,{onClick:()=>Ae(1)},"Text"),n.createElement(Z,{onClick:()=>Ae(2)},"Note"),n.createElement(Z,{onClick:()=>Ae(3)},"Image")),1===w&&n.createElement(ge,{width:ee.width,height:ee.height,x:c.x,y:c.y,offset:x,initStates:We,dataReval:t}),2===w&&n.createElement(pe,{width:ee.width,height:ee.height,x:c.x,y:c.y,offset:x,initStates:We,dataReval:t}),3===w&&n.createElement(he,{width:ee.width,height:ee.height,x:c.x,y:c.y,offset:x,initStates:We,dataReval:t}),e?.TextContents&&e?.TextContents.map(((e,t)=>n.createElement(S,{key:t,width:$*e.width,height:$*e.height,x:$*e.x,y:$*e.y},n.createElement(R,{onClick:()=>Ye(1,e.id,e)},e.content,n.createElement(K,{className:"alt"},e.User.username))))),e?.Images&&e?.Images.map(((e,t)=>n.createElement(S,{key:t,width:$*e.width,height:$*e.height,x:$*e.x,y:$*e.y},n.createElement(L,{onClick:()=>Ye(3,e.id,e)},n.createElement(K,{className:"alt"},e.User.username),n.createElement("img",{src:e.url}))))),e?.Notes&&e?.Notes.map(((e,t)=>n.createElement(S,{key:t,width:$*e.width,height:$*e.height,x:$*e.x,y:$*e.y},n.createElement(B,{onClick:()=>Ye(2,e.id,e),src:e.background_img?e.background_img:""},n.createElement(K,{className:"alt"},e.User.username),n.createElement("h3",{className:"head"},e.head),n.createElement("pre",{className:"para",style:{height:$*e.height-10}},n.createElement("p",null,e.paragraph)))))),n.createElement(g.Stage,{style:{height:re,zIndex:ze?20:1,background:ze?"rgba(0, 0, 0, .2)":""},width:E,height:re,onMouseMove:ze?void 0:e=>{if(!p.flg){i.current.getAbsoluteTransform().copy().invert();const t=e.target.getStage()?.getPointerPosition();s({x:t?.x,y:t?.y})}},onMouseDown:ze?void 0:()=>{0!==w||ze||l({x:o.x,y:o.y,dragged:!0})},onMouseUp:ze?void 0:()=>{if(!ze)if(p.flg||0!=w)We();else{const e=o.x>window.innerWidth-140?o.x-140:o.x,t=o.y>window.innerHeight-140?o.y-140:o.y;u({x:e,y:t,flg:!0,disp:!0})}}},n.createElement(g.Layer,{ref:i},n.createElement(g.Group,null,n.createElement(De,{x:c.x,y:c.y})))),ze&&n.createElement("div",{style:{position:"absolute",top:"10px",left:"10px"}},n.createElement(J,{onClick:()=>{Ce(!1),We()}},n.createElement("span",null,"돌아가기"),n.createElement("img",{src:"/public/close.svg"})),n.createElement(J,{onClick:async()=>{if(!_e())return j("이동할 수 없는 위치입니다.");let e="";const a=ee.width/$,n=ee.height/$;if(n*a<4)return j("최소 4칸의 영역을 선택해야합니다.");if(3===b.category&&n*a<6)return j("이미지는 최소 6칸의 영역을 선택해야합니다.");if(2===b.category&&n*a<20)return j("노트는 최소 20칸이상의 영역을 선택해야합니다.");if(2===b.category&&(n<3||a<4))return j("노트는 4x3이상의 영역을 선택해야합니다.");let i={x:c.x/$,y:c.y/$,width:ee.width/$,height:ee.height/$,content:b.content?.content,head:b.content?.head,paragraph:b.content?.paragraph,background_img:b.content?.background_img,url:b.content?.url};if(1===b.category)e="/api/text/"+b.id;else if(2===b.category)e="/api/note/"+b.id;else{if(3!==b.category)return await j("잘못된 접근입니다."),void await setTimeout((()=>{j("")}),2e3);e="/api/image/"+b.id}await h().patch(e,i).then((()=>{t()})).catch((e=>{j(e.response.data),setTimeout((()=>{j("")}),2e3)})),Ge(),j(""),Ce(!1),We(),h().patch}},n.createElement("span",null,"수정하기"),n.createElement("img",{src:"/public/check.svg"})),Ze?n.createElement(J,{className:"resize",style:{cursor:"none"}},n.createElement(Q,null,n.createElement("span",null,"WIDTH -"),n.createElement("button",{className:"decrease",onClick:()=>te({...ee,width:ee.width-$})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,ee.width/$),n.createElement("button",{onClick:()=>te({...ee,width:ee.width+$})},n.createElement("img",{src:"/public/arrow.svg"}))),n.createElement(Q,null,n.createElement("span",null,"HEIGHT -"),n.createElement("button",{className:"decrease",onClick:()=>te({...ee,height:ee.height-$})},n.createElement("img",{src:"/public/arrow.svg"})),n.createElement("div",null,ee.height/$),n.createElement("button",{onClick:()=>te({...ee,height:ee.height+$})},n.createElement("img",{src:"/public/arrow.svg"})))):n.createElement(J,{onClick:()=>Me(!0)},n.createElement("span",null,"크기 변경하기"),n.createElement("img",{src:"/public/resize.svg"}))),n.createElement(M,null,"designed by @han"))},fe=()=>{const[e,t]=u(42),{data:a,revalidate:s}=(0,i.ZP)("/api/auth",r.Z),{data:d,revalidate:c,error:g}=(0,i.ZP)(a?"/api/board/42":null,r.Z),[m,p]=(0,n.useState)(!1),[x,f]=(0,n.useState)(),w=(0,n.useCallback)((()=>{h().post("/api/logout").then((()=>{s(),window.location.reload(!1)})).catch((e=>{console.error(e)}))}),[]);return(0,n.useEffect)((()=>()=>{console.info("disconnect socket",42),t()}),[t]),(0,n.useEffect)((()=>{d&&a&&(console.info("로그인"),e?.emit("login",{id:a?.id,username:a?.username,boards:42}))}),[e,a,d]),(0,n.useEffect)((()=>{e?.on("onlineList",(async e=>{const t=[];await e.forEach((e=>{t.find((t=>t.id===e.id))||t.push(e)})),f(t)})),e?.on("refresh",(()=>{console.log("refresh"),c()}))}),[e]),a?d?n.createElement(n.Fragment,null,m&&n.createElement(I,{style:{zIndex:8},onClick:()=>p(!1)}),n.createElement(j,{style:{transform:`translateX(${m?"0":"100%"})`}},n.createElement(E,null,n.createElement($,{onClick:w},"로그아웃"),n.createElement(G,null,n.createElement("p",null,"User List"),n.createElement("ul",null,x?.map(((e,t)=>n.createElement("li",{key:t},e.id===a.id?e.username+" (me)":e.username))))),n.createElement("div",{className:"up",onClick:()=>p(!m)},m?n.createElement("img",{src:"/public/arrow.svg"}):n.createElement("img",{src:"/public/person.svg"})))),n.createElement(xe,{boardData:d,dataReval:c,userData:a})):n.createElement(l.Z,null):n.createElement(o.l_,{to:"/auth"})},we=n.memo(fe)},3564:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(3653),i=a.n(n);const r=e=>i().get(e,{withCredentials:!0}).then((e=>e.data))},6700:(e,t,a)=>{var n={"./af":2786,"./af.js":2786,"./ar":867,"./ar-dz":4130,"./ar-dz.js":4130,"./ar-kw":6135,"./ar-kw.js":6135,"./ar-ly":6440,"./ar-ly.js":6440,"./ar-ma":7702,"./ar-ma.js":7702,"./ar-sa":6040,"./ar-sa.js":6040,"./ar-tn":7100,"./ar-tn.js":7100,"./ar.js":867,"./az":1083,"./az.js":1083,"./be":9808,"./be.js":9808,"./bg":8338,"./bg.js":8338,"./bm":7438,"./bm.js":7438,"./bn":8905,"./bn-bd":6225,"./bn-bd.js":6225,"./bn.js":8905,"./bo":1560,"./bo.js":1560,"./br":1278,"./br.js":1278,"./bs":622,"./bs.js":622,"./ca":2468,"./ca.js":2468,"./cs":5822,"./cs.js":5822,"./cv":877,"./cv.js":877,"./cy":7373,"./cy.js":7373,"./da":4780,"./da.js":4780,"./de":9740,"./de-at":217,"./de-at.js":217,"./de-ch":894,"./de-ch.js":894,"./de.js":9740,"./dv":5300,"./dv.js":5300,"./el":837,"./el.js":837,"./en-au":8348,"./en-au.js":8348,"./en-ca":7925,"./en-ca.js":7925,"./en-gb":2243,"./en-gb.js":2243,"./en-ie":6436,"./en-ie.js":6436,"./en-il":7207,"./en-il.js":7207,"./en-in":4175,"./en-in.js":4175,"./en-nz":6319,"./en-nz.js":6319,"./en-sg":1662,"./en-sg.js":1662,"./eo":2915,"./eo.js":2915,"./es":5655,"./es-do":5251,"./es-do.js":5251,"./es-mx":6112,"./es-mx.js":6112,"./es-us":1146,"./es-us.js":1146,"./es.js":5655,"./et":5603,"./et.js":5603,"./eu":7763,"./eu.js":7763,"./fa":6959,"./fa.js":6959,"./fi":1897,"./fi.js":1897,"./fil":2549,"./fil.js":2549,"./fo":4694,"./fo.js":4694,"./fr":4470,"./fr-ca":3049,"./fr-ca.js":3049,"./fr-ch":2330,"./fr-ch.js":2330,"./fr.js":4470,"./fy":5044,"./fy.js":5044,"./ga":9295,"./ga.js":9295,"./gd":2101,"./gd.js":2101,"./gl":8794,"./gl.js":8794,"./gom-deva":7884,"./gom-deva.js":7884,"./gom-latn":3168,"./gom-latn.js":3168,"./gu":5349,"./gu.js":5349,"./he":4206,"./he.js":4206,"./hi":94,"./hi.js":94,"./hr":316,"./hr.js":316,"./hu":2138,"./hu.js":2138,"./hy-am":1423,"./hy-am.js":1423,"./id":9218,"./id.js":9218,"./is":8529,"./is.js":8529,"./it":626,"./it-ch":150,"./it-ch.js":150,"./it.js":626,"./ja":9183,"./ja.js":9183,"./jv":4286,"./jv.js":4286,"./ka":2105,"./ka.js":2105,"./kk":7772,"./kk.js":7772,"./km":8758,"./km.js":8758,"./kn":9282,"./kn.js":9282,"./ko":3730,"./ko.js":3730,"./ku":1408,"./ku.js":1408,"./ky":3291,"./ky.js":3291,"./lb":6841,"./lb.js":6841,"./lo":5466,"./lo.js":5466,"./lt":7010,"./lt.js":7010,"./lv":7595,"./lv.js":7595,"./me":9861,"./me.js":9861,"./mi":5493,"./mi.js":5493,"./mk":5966,"./mk.js":5966,"./ml":7341,"./ml.js":7341,"./mn":5115,"./mn.js":5115,"./mr":370,"./mr.js":370,"./ms":9847,"./ms-my":1237,"./ms-my.js":1237,"./ms.js":9847,"./mt":2126,"./mt.js":2126,"./my":6165,"./my.js":6165,"./nb":4924,"./nb.js":4924,"./ne":6744,"./ne.js":6744,"./nl":3901,"./nl-be":9814,"./nl-be.js":9814,"./nl.js":3901,"./nn":3877,"./nn.js":3877,"./oc-lnc":2135,"./oc-lnc.js":2135,"./pa-in":5858,"./pa-in.js":5858,"./pl":4495,"./pl.js":4495,"./pt":9520,"./pt-br":7971,"./pt-br.js":7971,"./pt.js":9520,"./ro":6459,"./ro.js":6459,"./ru":1793,"./ru.js":1793,"./sd":950,"./sd.js":950,"./se":490,"./se.js":490,"./si":124,"./si.js":124,"./sk":4249,"./sk.js":4249,"./sl":4985,"./sl.js":4985,"./sq":1104,"./sq.js":1104,"./sr":9131,"./sr-cyrl":9915,"./sr-cyrl.js":9915,"./sr.js":9131,"./ss":5893,"./ss.js":5893,"./sv":8760,"./sv.js":8760,"./sw":1172,"./sw.js":1172,"./ta":7333,"./ta.js":7333,"./te":3110,"./te.js":3110,"./tet":2095,"./tet.js":2095,"./tg":7321,"./tg.js":7321,"./th":9041,"./th.js":9041,"./tk":9005,"./tk.js":9005,"./tl-ph":5768,"./tl-ph.js":5768,"./tlh":9444,"./tlh.js":9444,"./tr":2397,"./tr.js":2397,"./tzl":8254,"./tzl.js":8254,"./tzm":1106,"./tzm-latn":699,"./tzm-latn.js":699,"./tzm.js":1106,"./ug-cn":9288,"./ug-cn.js":9288,"./uk":7691,"./uk.js":7691,"./ur":3795,"./ur.js":3795,"./uz":6791,"./uz-latn":588,"./uz-latn.js":588,"./uz.js":6791,"./vi":5666,"./vi.js":5666,"./x-pseudo":4378,"./x-pseudo.js":4378,"./yo":5805,"./yo.js":5805,"./zh-cn":3839,"./zh-cn.js":3839,"./zh-hk":5726,"./zh-hk.js":5726,"./zh-mo":9807,"./zh-mo.js":9807,"./zh-tw":4152,"./zh-tw.js":4152};function i(e){var t=r(e);return a(t)}function r(e){if(!a.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=r,e.exports=i,i.id=6700}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,