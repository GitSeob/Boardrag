/*! For license information please see app.js.LICENSE.txt */
(()=>{var e,t,n={3653:(e,t,n)=>{e.exports=n(1555)},9685:(e,t,n)=>{"use strict";var r=n(501),o=n(3063),a=n(9233),l=n(4306),i=n(5938),u=n(2644),s=n(3977),c=n(135);e.exports=function(e){return new Promise((function(t,n){var f=e.data,d=e.headers;r.isFormData(f)&&delete d["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",m=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(h+":"+m)}var v=i(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),l(v,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in p?u(p.getAllResponseHeaders()):null,a={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:r,config:e,request:p};o(t,n,a),p=null}},p.onabort=function(){p&&(n(c("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){n(c("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(c(t,e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var y=(e.withCredentials||s(v))&&e.xsrfCookieName?a.read(e.xsrfCookieName):void 0;y&&(d[e.xsrfHeaderName]=y)}if("setRequestHeader"in p&&r.forEach(d,(function(e,t){void 0===f&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),n(e),p=null)})),f||(f=null),p.send(f)}))}},1555:(e,t,n)=>{"use strict";var r=n(501),o=n(2958),a=n(7303),l=n(2445);function i(e){var t=new a(e),n=o(a.prototype.request,t);return r.extend(n,a.prototype,t),r.extend(n,t),n}var u=i(n(2036));u.Axios=a,u.create=function(e){return i(l(u.defaults,e))},u.Cancel=n(5930),u.CancelToken=n(9939),u.isCancel=n(8414),u.all=function(e){return Promise.all(e)},u.spread=n(363),e.exports=u,e.exports.default=u},5930:e=>{"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},9939:(e,t,n)=>{"use strict";var r=n(5930);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},8414:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},7303:(e,t,n)=>{"use strict";var r=n(501),o=n(4306),a=n(6942),l=n(6158),i=n(2445);function u(e){this.defaults=e,this.interceptors={request:new a,response:new a}}u.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=i(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[l,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},u.prototype.getUri=function(e){return e=i(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(t,n){return this.request(i(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(t,n,r){return this.request(i(r||{},{method:e,url:t,data:n}))}})),e.exports=u},6942:(e,t,n)=>{"use strict";var r=n(501);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},5938:(e,t,n)=>{"use strict";var r=n(3473),o=n(533);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},135:(e,t,n)=>{"use strict";var r=n(7889);e.exports=function(e,t,n,o,a){var l=new Error(e);return r(l,t,n,o,a)}},6158:(e,t,n)=>{"use strict";var r=n(501),o=n(4097),a=n(8414),l=n(2036);function i(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return i(e),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||l.adapter)(e).then((function(t){return i(e),t.data=o(t.data,t.headers,e.transformResponse),t}),(function(t){return a(t)||(i(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},7889:e=>{"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},2445:(e,t,n)=>{"use strict";var r=n(501);e.exports=function(e,t){t=t||{};var n={},o=["url","method","data"],a=["headers","auth","proxy","params"],l=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],i=["validateStatus"];function u(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function s(o){r.isUndefined(t[o])?r.isUndefined(e[o])||(n[o]=u(void 0,e[o])):n[o]=u(e[o],t[o])}r.forEach(o,(function(e){r.isUndefined(t[e])||(n[e]=u(void 0,t[e]))})),r.forEach(a,s),r.forEach(l,(function(o){r.isUndefined(t[o])?r.isUndefined(e[o])||(n[o]=u(void 0,e[o])):n[o]=u(void 0,t[o])})),r.forEach(i,(function(r){r in t?n[r]=u(e[r],t[r]):r in e&&(n[r]=u(void 0,e[r]))}));var c=o.concat(a).concat(l).concat(i),f=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===c.indexOf(e)}));return r.forEach(f,s),n}},3063:(e,t,n)=>{"use strict";var r=n(135);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},4097:(e,t,n)=>{"use strict";var r=n(501);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},2036:(e,t,n)=>{"use strict";var r=n(501),o=n(4799),a={"Content-Type":"application/x-www-form-urlencoded"};function l(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var i,u={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(i=n(9685)),i),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(l(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(l(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(a)})),e.exports=u},2958:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},4306:(e,t,n)=>{"use strict";var r=n(501);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var a;if(n)a=n(t);else if(r.isURLSearchParams(t))a=t.toString();else{var l=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),l.push(o(t)+"="+o(e))})))})),a=l.join("&")}if(a){var i=e.indexOf("#");-1!==i&&(e=e.slice(0,i)),e+=(-1===e.indexOf("?")?"?":"&")+a}return e}},533:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},9233:(e,t,n)=>{"use strict";var r=n(501);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,a,l){var i=[];i.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&i.push("expires="+new Date(n).toGMTString()),r.isString(o)&&i.push("path="+o),r.isString(a)&&i.push("domain="+a),!0===l&&i.push("secure"),document.cookie=i.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},3473:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},3977:(e,t,n)=>{"use strict";var r=n(501);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},4799:(e,t,n)=>{"use strict";var r=n(501);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},2644:(e,t,n)=>{"use strict";var r=n(501),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,a,l={};return e?(r.forEach(e.split("\n"),(function(e){if(a=e.indexOf(":"),t=r.trim(e.substr(0,a)).toLowerCase(),n=r.trim(e.substr(a+1)),t){if(l[t]&&o.indexOf(t)>=0)return;l[t]="set-cookie"===t?(l[t]?l[t]:[]).concat([n]):l[t]?l[t]+", "+n:n}})),l):l}},363:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},501:(e,t,n)=>{"use strict";var r=n(2958),o=Object.prototype.toString;function a(e){return"[object Array]"===o.call(e)}function l(e){return void 0===e}function i(e){return null!==e&&"object"==typeof e}function u(e){if("[object Object]"!==o.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function s(e){return"[object Function]"===o.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),a(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:a,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!l(e)&&null!==e.constructor&&!l(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:i,isPlainObject:u,isUndefined:l,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:s,isStream:function(e){return i(e)&&s(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:c,merge:function e(){var t={};function n(n,r){u(t[r])&&u(n)?t[r]=e(t[r],n):u(n)?t[r]=e({},n):a(n)?t[r]=n.slice():t[r]=n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},2122:(e,t,n)=>{"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,{Z:()=>r})},1788:(e,t,n)=>{"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,{Z:()=>r})},9756:(e,t,n)=>{"use strict";function r(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,{Z:()=>r})},71:(e,t,n)=>{"use strict";n.d(t,{lX:()=>E,q_:()=>T,ob:()=>h,PP:()=>N,Ep:()=>p,Hp:()=>m});var r=n(2122);function o(e){return"/"===e.charAt(0)}function a(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}function l(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}const i=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=l(t),o=l(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};var u=n(2177);function s(e){return"/"===e.charAt(0)?e:"/"+e}function c(e){return"/"===e.charAt(0)?e.substr(1):e}function f(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function p(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function h(e,t,n,l){var i;"string"==typeof e?(i=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var a=t.indexOf("?");return-1!==a&&(n=t.substr(a),t=t.substr(0,a)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(i=(0,r.Z)({},e)).pathname&&(i.pathname=""),i.search?"?"!==i.search.charAt(0)&&(i.search="?"+i.search):i.search="",i.hash?"#"!==i.hash.charAt(0)&&(i.hash="#"+i.hash):i.hash="",void 0!==t&&void 0===i.state&&(i.state=t));try{i.pathname=decodeURI(i.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+i.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(i.key=n),l?i.pathname?"/"!==i.pathname.charAt(0)&&(i.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],l=t&&t.split("/")||[],i=e&&o(e),u=t&&o(t),s=i||u;if(e&&o(e)?l=r:r.length&&(l.pop(),l=l.concat(r)),!l.length)return"/";if(l.length){var c=l[l.length-1];n="."===c||".."===c||""===c}else n=!1;for(var f=0,d=l.length;d>=0;d--){var p=l[d];"."===p?a(l,d):".."===p?(a(l,d),f++):f&&(a(l,d),f--)}if(!s)for(;f--;f)l.unshift("..");!s||""===l[0]||l[0]&&o(l[0])||l.unshift("");var h=l.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(i.pathname,l.pathname)):i.pathname=l.pathname:i.pathname||(i.pathname="/"),i}function m(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&i(e.state,t.state)}function v(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var a="function"==typeof e?e(t,n):e;"string"==typeof a?"function"==typeof r?r(a,o):o(!0):o(!1!==a)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var y=!("undefined"==typeof window||!window.document||!window.document.createElement);function g(e,t){t(window.confirm(e))}var b="popstate",w="hashchange";function k(){try{return window.history.state||{}}catch(e){return{}}}function E(e){void 0===e&&(e={}),y||(0,u.Z)(!1);var t,n=window.history,o=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),l=e,i=l.forceRefresh,c=void 0!==i&&i,m=l.getUserConfirmation,E=void 0===m?g:m,S=l.keyLength,x=void 0===S?6:S,C=e.basename?d(s(e.basename)):"";function _(e){var t=e||{},n=t.key,r=t.state,o=window.location,a=o.pathname+o.search+o.hash;return C&&(a=f(a,C)),h(a,r,n)}function P(){return Math.random().toString(36).substr(2,x)}var T=v();function O(e){(0,r.Z)(B,e),B.length=n.length,T.notifyListeners(B.location,B.action)}function N(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||z(_(e.state))}function L(){z(_(k()))}var R=!1;function z(e){R?(R=!1,O()):T.confirmTransitionTo(e,"POP",E,(function(t){t?O({action:"POP",location:e}):function(e){var t=B.location,n=A.indexOf(t.key);-1===n&&(n=0);var r=A.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(R=!0,D(o))}(e)}))}var M=_(k()),A=[M.key];function U(e){return C+p(e)}function D(e){n.go(e)}var j=0;function F(e){1===(j+=e)&&1===e?(window.addEventListener(b,N),a&&window.addEventListener(w,L)):0===j&&(window.removeEventListener(b,N),a&&window.removeEventListener(w,L))}var I=!1,B={length:n.length,action:"POP",location:M,createHref:U,push:function(e,t){var r="PUSH",a=h(e,t,P(),B.location);T.confirmTransitionTo(a,r,E,(function(e){if(e){var t=U(a),l=a.key,i=a.state;if(o)if(n.pushState({key:l,state:i},null,t),c)window.location.href=t;else{var u=A.indexOf(B.location.key),s=A.slice(0,u+1);s.push(a.key),A=s,O({action:r,location:a})}else window.location.href=t}}))},replace:function(e,t){var r="REPLACE",a=h(e,t,P(),B.location);T.confirmTransitionTo(a,r,E,(function(e){if(e){var t=U(a),l=a.key,i=a.state;if(o)if(n.replaceState({key:l,state:i},null,t),c)window.location.replace(t);else{var u=A.indexOf(B.location.key);-1!==u&&(A[u]=a.key),O({action:r,location:a})}else window.location.replace(t)}}))},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return I||(F(1),I=!0),function(){return I&&(I=!1,F(-1)),t()}},listen:function(e){var t=T.appendListener(e);return F(1),function(){F(-1),t()}}};return B}var S="hashchange",x={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+c(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:c,decodePath:s},slash:{encodePath:s,decodePath:s}};function C(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function _(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function P(e){window.location.replace(C(window.location.href)+"#"+e)}function T(e){void 0===e&&(e={}),y||(0,u.Z)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),o=n.getUserConfirmation,a=void 0===o?g:o,l=n.hashType,i=void 0===l?"slash":l,c=e.basename?d(s(e.basename)):"",m=x[i],b=m.encodePath,w=m.decodePath;function k(){var e=w(_());return c&&(e=f(e,c)),h(e)}var E=v();function T(e){(0,r.Z)(I,e),I.length=t.length,E.notifyListeners(I.location,I.action)}var O=!1,N=null;function L(){var e,t,n=_(),r=b(n);if(n!==r)P(r);else{var o=k(),l=I.location;if(!O&&(t=o,(e=l).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(N===p(o))return;N=null,function(e){if(O)O=!1,T();else{E.confirmTransitionTo(e,"POP",a,(function(t){t?T({action:"POP",location:e}):function(e){var t=I.location,n=A.lastIndexOf(p(t));-1===n&&(n=0);var r=A.lastIndexOf(p(e));-1===r&&(r=0);var o=n-r;o&&(O=!0,U(o))}(e)}))}}(o)}}var R=_(),z=b(R);R!==z&&P(z);var M=k(),A=[p(M)];function U(e){t.go(e)}var D=0;function j(e){1===(D+=e)&&1===e?window.addEventListener(S,L):0===D&&window.removeEventListener(S,L)}var F=!1,I={length:t.length,action:"POP",location:M,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=C(window.location.href)),n+"#"+b(c+p(e))},push:function(e,t){var n="PUSH",r=h(e,void 0,void 0,I.location);E.confirmTransitionTo(r,n,a,(function(e){if(e){var t=p(r),o=b(c+t);if(_()!==o){N=t,function(e){window.location.hash=e}(o);var a=A.lastIndexOf(p(I.location)),l=A.slice(0,a+1);l.push(t),A=l,T({action:n,location:r})}else T()}}))},replace:function(e,t){var n="REPLACE",r=h(e,void 0,void 0,I.location);E.confirmTransitionTo(r,n,a,(function(e){if(e){var t=p(r),o=b(c+t);_()!==o&&(N=t,P(o));var a=A.indexOf(p(I.location));-1!==a&&(A[a]=t),T({action:n,location:r})}}))},go:U,goBack:function(){U(-1)},goForward:function(){U(1)},block:function(e){void 0===e&&(e=!1);var t=E.setPrompt(e);return F||(j(1),F=!0),function(){return F&&(F=!1,j(-1)),t()}},listen:function(e){var t=E.appendListener(e);return j(1),function(){j(-1),t()}}};return I}function O(e,t,n){return Math.min(Math.max(e,t),n)}function N(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,o=t.initialEntries,a=void 0===o?["/"]:o,l=t.initialIndex,i=void 0===l?0:l,u=t.keyLength,s=void 0===u?6:u,c=v();function f(e){(0,r.Z)(w,e),w.length=w.entries.length,c.notifyListeners(w.location,w.action)}function d(){return Math.random().toString(36).substr(2,s)}var m=O(i,0,a.length-1),y=a.map((function(e){return h(e,void 0,"string"==typeof e?d():e.key||d())})),g=p;function b(e){var t=O(w.index+e,0,w.entries.length-1),r=w.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var w={length:y.length,action:"POP",location:y[m],index:m,entries:y,createHref:g,push:function(e,t){var r="PUSH",o=h(e,t,d(),w.location);c.confirmTransitionTo(o,r,n,(function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,o):n.push(o),f({action:r,location:o,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",o=h(e,t,d(),w.location);c.confirmTransitionTo(o,r,n,(function(e){e&&(w.entries[w.index]=o,f({action:r,location:o}))}))},go:b,goBack:function(){b(-1)},goForward:function(){b(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return w}},8679:(e,t,n)=>{"use strict";var r=n(9864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},a={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||o}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var l=c(n);f&&(l=l.concat(f(n)));for(var i=u(t),m=u(n),v=0;v<l.length;++v){var y=l[v];if(!(a[y]||r&&r[y]||m&&m[y]||i&&i[y])){var g=d(n,y);try{s(t,y,g)}catch(e){}}}}return t}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var l,i,u=o(e),s=1;s<arguments.length;s++){for(var c in l=Object(arguments[s]))n.call(l,c)&&(u[c]=l[c]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},4779:(e,t,n)=>{var r=n(6173);e.exports=function e(t,n,o){return r(n)||(o=n||o,n=[]),o=o||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var o=[],a=0;a<t.length;a++)o.push(e(t[a],n,r).source);return c(new RegExp("(?:"+o.join("|")+")",f(r)),n)}(t,n,o):function(e,t,n){return d(a(e,n),t,n)}(t,n,o)},e.exports.parse=a,e.exports.compile=function(e,t){return i(a(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(e,t){for(var n,r=[],a=0,l=0,i="",c=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(l,p),l=p+f.length,d)i+=d[1];else{var h=e[l],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,S="?"===b||"*"===b,x=n[2]||c,C=y||g;r.push({name:v||a++,prefix:m||"",delimiter:x,optional:S,repeat:E,partial:k,asterisk:!!w,pattern:C?s(C):w?".*":"[^"+u(x)+"]+?"})}}return l<e.length&&(i+=e.substr(l)),i&&r.push(i),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var a="",i=t||{},u=(o||{}).pretty?l:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var f,d=i[c.name];if(null==d){if(c.optional){c.partial&&(a+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(d)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[s].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");a+=(0===p?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[s].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');a+=c.prefix+f}}else a+=c}return a}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,a=!1!==n.end,l="",i=0;i<e.length;i++){var s=e[i];if("string"==typeof s)l+=u(s);else{var d=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+d+p+")*"),l+=p=s.optional?s.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=l.slice(-h.length)===h;return o||(l=(m?l.slice(0,-h.length):l)+"(?:"+h+"(?=$))?"),l+=a?"$":o&&m?"":"(?="+h+"|$)",c(new RegExp("^"+l,f(n)),t)}},6173:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},2703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},5697:(e,t,n)=>{e.exports=n(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:(e,t,n)=>{"use strict";var r=n(7294),o=n(7418),a=n(3840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,o,a,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=y.hasOwnProperty(t)?y[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,x=60107,C=60108,_=60114,P=60109,T=60110,O=60112,N=60113,L=60120,R=60115,z=60116,M=60121,A=60128,U=60129,D=60130,j=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;E=F("react.element"),S=F("react.portal"),x=F("react.fragment"),C=F("react.strict_mode"),_=F("react.profiler"),P=F("react.provider"),T=F("react.context"),O=F("react.forward_ref"),N=F("react.suspense"),L=F("react.suspense_list"),R=F("react.memo"),z=F("react.lazy"),M=F("react.block"),F("react.scope"),A=F("react.opaque.id"),U=F("react.debug_trace_mode"),D=F("react.offscreen"),j=F("react.legacy_hidden")}var I,B="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}function V(e){if(void 0===I)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);I=t&&t[1]||""}return"\n"+I+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),l=o.length-1,i=a.length-1;1<=l&&0<=i&&o[l]!==a[i];)i--;for(;1<=l&&0<=i;l--,i--)if(o[l]!==a[i]){if(1!==l||1!==i)do{if(l--,0>--i||o[l]!==a[i])return"\n"+o[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case _:return"Profiler";case C:return"StrictMode";case N:return"Suspense";case L:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return Q(e.type);case M:return Q(e._render);case z:t=e._payload,e=e._init;try{return Q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Z(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Z(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Z(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function se(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var _e=null,Pe=null,Te=null;function Oe(e){if(e=Jr(e)){if("function"!=typeof _e)throw Error(l(280));var t=e.stateNode;t&&(t=to(t),_e(e.stateNode,e.type,t))}}function Ne(e){Pe?Te?Te.push(e):Te=[e]:Pe=e}function Le(){if(Pe){var e=Pe,t=Te;if(Te=Pe=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Re(e,t){return e(t)}function ze(e,t,n,r,o){return e(t,n,r,o)}function Me(){}var Ae=Re,Ue=!1,De=!1;function je(){null===Pe&&null===Te||(Me(),Le())}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var r=to(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Ie=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Ie=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(me){Ie=!1}function $e(e,t,n,r,o,a,l,i,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ve=!1,He=null,We=!1,qe=null,Qe={onError:function(e){Ve=!0,He=e}};function Ke(e,t,n,r,o,a,l,i,u){Ve=!1,He=null,$e.apply(Qe,arguments)}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ye(e){if(Ze(e)!==e)throw Error(l(188))}function Ge(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Ye(o),e;if(a===r)return Ye(o),t;a=a.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=a;else{for(var i=!1,u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i){for(u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,at=[],lt=null,it=null,ut=null,st=new Map,ct=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function mt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=pt(t,n,r,o,a),null!==t&&null!==(t=Jr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function vt(e){var t=Gr(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function gt(e,t,n){yt(e)&&n.delete(t)}function bt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==lt&&yt(lt)&&(lt=null),null!==it&&yt(it)&&(it=null),null!==ut&&yt(ut)&&(ut=null),st.forEach(gt),ct.forEach(gt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&wt(lt,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),st.forEach(t),ct.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function Et(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:Et("Animation","AnimationEnd"),animationiteration:Et("Animation","AnimationIteration"),animationstart:Et("Animation","AnimationStart"),transitionend:Et("Transition","TransitionEnd")},xt={},Ct={};function _t(e){if(xt[e])return xt[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ct)return xt[e]=n[t];return e}f&&(Ct=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Pt=_t("animationend"),Tt=_t("animationiteration"),Ot=_t("animationstart"),Nt=_t("transitionend"),Lt=new Map,Rt=new Map,zt=["abort","abort",Pt,"animationEnd",Tt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function Mt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Rt.set(r,t),Lt.set(r,o),s(o,[r])}}(0,a.unstable_now)();var At=8;function Ut(e){if(0!=(1&e))return At=15,1;if(0!=(2&e))return At=14,2;if(0!=(4&e))return At=13,4;var t=24&e;return 0!==t?(At=12,t):0!=(32&e)?(At=11,32):0!=(t=192&e)?(At=10,t):0!=(256&e)?(At=9,256):0!=(t=3584&e)?(At=8,t):0!=(4096&e)?(At=7,4096):0!=(t=4186112&e)?(At=6,t):0!=(t=62914560&e)?(At=5,t):67108864&e?(At=4,67108864):0!=(134217728&e)?(At=3,134217728):0!=(t=805306368&e)?(At=2,t):0!=(1073741824&e)?(At=1,1073741824):(At=8,e)}function Dt(e,t){var n=e.pendingLanes;if(0===n)return At=0;var r=0,o=0,a=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==a)r=a,o=At=15;else if(0!=(a=134217727&n)){var u=a&~l;0!==u?(r=Ut(u),o=At):0!=(i&=a)&&(r=Ut(i),o=At)}else 0!=(a=n&~l)?(r=Ut(a),o=At):0!==i&&(r=Ut(i),o=At);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(Ut(t),o<=At)return t;At=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Vt(t)),r|=e[n],t&=~o;return r}function jt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=It(24&~t))?Ft(10,t):e;case 10:return 0===(e=It(192&~t))?Ft(8,t):e;case 8:return 0===(e=It(3584&~t))&&0===(e=It(4186112&~t))&&(e=512),e;case 2:return 0===(t=It(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function It(e){return e&-e}function Bt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function $t(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Wt|0)|0},Ht=Math.log,Wt=Math.LN2,qt=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Kt=!0;function Zt(e,t,n,r){Ue||Me();var o=Yt,a=Ue;Ue=!0;try{ze(o,e,t,n,r)}finally{(Ue=a)||je()}}function Xt(e,t,n,r){Qt(qt,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){var o;if(Kt)if((o=0==(4&t))&&0<at.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var a=Gt(e,t,n,r);if(null===a)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(a,e,t,n,r),void at.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return lt=mt(lt,e,t,n,r,o),!0;case"dragenter":return it=mt(it,e,t,n,r,o),!0;case"mouseover":return ut=mt(ut,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,mt(st.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,ct.set(a,mt(ct.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ht(e,r)}Lr(e,t,r,null,n)}}}function Gt(e,t,n,r){var o=Ce(r);if(null!==(o=Gr(o))){var a=Ze(o);if(null===a)o=null;else{var l=a.tag;if(13===l){if(null!==(o=Xe(a)))return o;o=null}else if(3===l){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Lr(e,t,r,o,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Jt?Jt.value:Jt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[a-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,a){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(o):o[l]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,sn,cn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),mn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_n,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(un=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=un=0,cn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),vn=ln(mn),yn=ln(o({},mn,{dataTransfer:0})),gn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=ln(o({},fn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function _n(){return Cn}var Pn=ln(o({},pn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_n,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Tn=ln(o({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_n})),Nn=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=ln(o({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Rn=[9,13,27,32],zn=f&&"CompositionEvent"in window,Mn=null;f&&"documentMode"in document&&(Mn=document.documentMode);var An=f&&"TextEvent"in window&&!Mn,Un=f&&(!zn||Mn&&8<Mn&&11>=Mn),Dn=String.fromCharCode(32),jn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function In(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Bn=!1,$n={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!$n[e.type]:"textarea"===t}function Hn(e,t,n,r){Ne(r),0<(t=zr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,qn=null;function Qn(e){Cr(e,0)}function Kn(e){if(Y(eo(e)))return e}function Zn(e,t){if("change"===e)return t}var Xn=!1;if(f){var Yn;if(f){var Gn="oninput"in document;if(!Gn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Gn="function"==typeof Jn.oninput}Yn=Gn}else Yn=!1;Xn=Yn&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent("onpropertychange",tr),qn=Wn=null)}function tr(e){if("value"===e.propertyName&&Kn(qn)){var t=[];if(Hn(t,qn,e,Ce(e)),e=Qn,Ue)e(t);else{Ue=!0;try{Re(e,t)}finally{Ue=!1,je()}}}}function nr(e,t,n){"focusin"===e?(er(),qn=n,(Wn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(qn)}function or(e,t){if("click"===e)return Kn(t)}function ar(e,t){if("input"===e||"change"===e)return Kn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!lr(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,vr=null,yr=null,gr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;gr||null==mr||mr!==G(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=zr(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Mt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Mt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Mt(zt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)Rt.set(wr[kr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Er="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Er));function xr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,i,u,s){if(Ke.apply(this,arguments),Ve){if(!Ve)throw Error(l(198));var c=He;Ve=!1,He=null,We||(We=!0,qe=c)}}(r,t,void 0,e),e.currentTarget=null}function Cr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,s=i.currentTarget;if(i=i.listener,u!==a&&o.isPropagationStopped())break e;xr(o,i,s),a=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,s=i.currentTarget,i=i.listener,u!==a&&o.isPropagationStopped())break e;xr(o,i,s),a=u}}}if(We)throw e=qe,We=!1,qe=null,e}function _r(e,t){var n=no(t),r=e+"__bubble";n.has(r)||(Nr(t,e,2,!1),n.add(r))}var Pr="_reactListening"+Math.random().toString(36).slice(2);function Tr(e){e[Pr]||(e[Pr]=!0,i.forEach((function(t){Sr.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;o|=2,a=r}var l=no(a),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(o|=4),Nr(a,e,o,t),l.add(i))}function Nr(e,t,n,r){var o=Rt.get(t);switch(void 0===o?2:o){case 0:o=Zt;break;case 1:o=Xt;break;default:o=Yt}n=o.bind(null,t,n,e),o=void 0,!Ie||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Lr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===o||8===i.nodeType&&i.parentNode===o)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;l=l.return}for(;null!==i;){if(null===(l=Gr(i)))return;if(5===(u=l.tag)||6===u){r=a=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(De)return e();De=!0;try{Ae(e,t,n)}finally{De=!1,je()}}((function(){var r=a,o=Ce(n),l=[];e:{var i=Lt.get(e);if(void 0!==i){var u=dn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":s="focus",u=gn;break;case"focusout":s="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case Pt:case Tt:case Ot:u=bn;break;case Nt:u=Nn;break;case"scroll":u=hn;break;case"wheel":u=Ln;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Tn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Fe(h,d))&&c.push(Rr(h,m,p))),f)break;h=h.return}0<c.length&&(i=new u(i,s,null,n,o),l.push({event:i,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Gr(s)&&!s[Xr])&&(u||i)&&(i=o.window===o?o:(i=o.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Gr(s):null)&&(s!==(f=Ze(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=vn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Tn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:eo(u),p=null==s?i:eo(s),(i=new c(m,h+"leave",u,n,o)).target=f,i.relatedTarget=p,m=null,Gr(o)===r&&((c=new c(d,h+"enter",s,n,o)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Mr(p))h++;for(p=0,m=d;m;m=Mr(m))p++;for(;0<h-p;)c=Mr(c),h--;for(;0<p-h;)d=Mr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Mr(c),d=Mr(d)}c=null}else c=null;null!==u&&Ar(l,i,u,c,!1),null!==s&&null!==f&&Ar(l,f,s,c,!0)}if("select"===(u=(i=r?eo(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Zn;else if(Vn(i))if(Xn)v=ar;else{v=rr;var y=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=or);switch(v&&(v=v(e,r))?Hn(l,v,n,o):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&oe(i,"number",i.value)),y=r?eo(r):window,e){case"focusin":(Vn(y)||"true"===y.contentEditable)&&(mr=y,vr=r,yr=null);break;case"focusout":yr=vr=mr=null;break;case"mousedown":gr=!0;break;case"contextmenu":case"mouseup":case"dragend":gr=!1,br(l,n,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(l,n,o)}var g;if(zn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Bn?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Un&&"ko"!==n.locale&&(Bn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Bn&&(g=nn()):(en="value"in(Jt=o)?Jt.value:Jt.textContent,Bn=!0)),0<(y=zr(r,b)).length&&(b=new kn(b,e,null,n,o),l.push({event:b,listeners:y}),(g||null!==(g=In(n)))&&(b.data=g))),(g=An?function(e,t){switch(e){case"compositionend":return In(t);case"keypress":return 32!==t.which?null:(jn=!0,Dn);case"textInput":return(e=t.data)===Dn&&jn?null:e;default:return null}}(e,n):function(e,t){if(Bn)return"compositionend"===e||!zn&&Fn(e,t)?(e=nn(),tn=en=Jt=null,Bn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Un&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=zr(r,"onBeforeInput")).length&&(o=new kn("onBeforeInput","beforeinput",null,n,o),l.push({event:o,listeners:r}),o.data=g)}Cr(l,t)}))}function Rr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function zr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Fe(e,n))&&r.unshift(Rr(e,a,o)),null!=(a=Fe(e,t))&&r.push(Rr(e,a,o))),e=e.return}return r}function Mr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ar(e,t,n,r,o){for(var a=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,s=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==s&&(i=s,o?null!=(u=Fe(n,a))&&l.unshift(Rr(n,u,i)):o||null!=(u=Fe(n,a))&&l.push(Rr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Ur(){}var Dr=null,jr=null;function Fr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ir(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Br="function"==typeof setTimeout?setTimeout:void 0,$r="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var qr=0,Qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+Qr,Zr="__reactProps$"+Qr,Xr="__reactContainer$"+Qr,Yr="__reactEvents$"+Qr;function Gr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Xr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[Kr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Kr]||e[Xr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function eo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function to(e){return e[Zr]||null}function no(e){var t=e[Yr];return void 0===t&&(t=e[Yr]=new Set),t}var ro=[],oo=-1;function ao(e){return{current:e}}function lo(e){0>oo||(e.current=ro[oo],ro[oo]=null,oo--)}function io(e,t){oo++,ro[oo]=e.current,e.current=t}var uo={},so=ao(uo),co=ao(!1),fo=uo;function po(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function ho(e){return null!=e.childContextTypes}function mo(){lo(co),lo(so)}function vo(e,t,n){if(so.current!==uo)throw Error(l(168));io(so,t),io(co,n)}function yo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(l(108,Q(t)||"Unknown",a));return o({},n,r)}function go(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,fo=so.current,io(so,e),io(co,co.current),!0}function bo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=yo(e,t,fo),r.__reactInternalMemoizedMergedChildContext=e,lo(co),lo(so),io(so,e)):lo(co),io(co,n)}var wo=null,ko=null,Eo=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,xo=a.unstable_cancelCallback,Co=a.unstable_shouldYield,_o=a.unstable_requestPaint,Po=a.unstable_now,To=a.unstable_getCurrentPriorityLevel,Oo=a.unstable_ImmediatePriority,No=a.unstable_UserBlockingPriority,Lo=a.unstable_NormalPriority,Ro=a.unstable_LowPriority,zo=a.unstable_IdlePriority,Mo={},Ao=void 0!==_o?_o:function(){},Uo=null,Do=null,jo=!1,Fo=Po(),Io=1e4>Fo?Po:function(){return Po()-Fo};function Bo(){switch(To()){case Oo:return 99;case No:return 98;case Lo:return 97;case Ro:return 96;case zo:return 95;default:throw Error(l(332))}}function $o(e){switch(e){case 99:return Oo;case 98:return No;case 97:return Lo;case 96:return Ro;case 95:return zo;default:throw Error(l(332))}}function Vo(e,t){return e=$o(e),Eo(e,t)}function Ho(e,t,n){return e=$o(e),So(e,t,n)}function Wo(){if(null!==Do){var e=Do;Do=null,xo(e)}qo()}function qo(){if(!jo&&null!==Uo){jo=!0;var e=0;try{var t=Uo;Vo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Uo=null}catch(t){throw null!==Uo&&(Uo=Uo.slice(e+1)),So(Oo,Wo),t}finally{jo=!1}}}var Qo=k.ReactCurrentBatchConfig;function Ko(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Zo=ao(null),Xo=null,Yo=null,Go=null;function Jo(){Go=Yo=Xo=null}function ea(e){var t=Zo.current;lo(Zo),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function na(e,t){Xo=e,Go=Yo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(zl=!0),e.firstContext=null)}function ra(e,t){if(Go!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Go=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Yo){if(null===Xo)throw Error(l(308));Yo=t,Xo.dependencies={lanes:0,firstContext:t,responders:null}}else Yo=Yo.next=t;return e._currentValue}var oa=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ia(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ua(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function sa(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ca(e,t,n,r){var a=e.updateQueue;oa=!1;var l=a.firstBaseUpdate,i=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var s=u,c=s.next;s.next=null,null===i?l=c:i.next=c,i=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==l){for(d=a.baseState,i=0,f=c=s=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:oa=!0}}null!==l.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=a.shared.pending))break;l=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(s=d),a.baseState=s,a.firstBaseUpdate=c,a.lastBaseUpdate=f,Ai|=i,e.lanes=i,e.memoizedState=d}}function fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(l(191,o));o.call(r)}}}var da=(new r.Component).refs;function pa(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ha={isMounted:function(e){return!!(e=e._reactInternals)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=lu(),o=iu(e),a=ia(r,o);a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=lu(),o=iu(e),a=ia(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=lu(),r=iu(e),o=ia(n,r);o.tag=2,null!=t&&(o.callback=t),ua(e,o),uu(e,r,n)}};function ma(e,t,n,r,o,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(o,a))}function va(e,t,n){var r=!1,o=uo,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(o=ho(t)?fo:so.current,a=(r=null!=(r=t.contextTypes))?po(e,o):uo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ha,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ha.enqueueReplaceState(t,t.state,null)}function ga(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=da,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=ra(a):(a=ho(t)?fo:so.current,o.context=po(e,a)),ca(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(pa(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ha.enqueueReplaceState(o,o.state,null),ca(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var ba=Array.isArray;function wa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===da&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ka(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Ea(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=ju(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=$u(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=wa(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=wa(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Iu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=$u(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=wa(e,null,t),n.return=e,n;case S:return(t=Vu(t,e.mode,n)).return=e,t}if(ba(t)||$(t))return(t=Iu(t,e.mode,n,null)).return=e,t;ka(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===o?n.type===x?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case S:return n.key===o?c(e,t,n,r):null}if(ba(n)||$(n))return null!==o?null:f(e,t,n,r,null);ka(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ba(r)||$(r))return f(t,e=e.get(n)||null,r,o,null);ka(t,r)}return null}function m(o,l,i,u){for(var s=null,c=null,f=l,m=l=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(o,f,i[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),l=a(y,l,m),null===c?s=y:c.sibling=y,c=y,f=v}if(m===i.length)return n(o,f),s;if(null===f){for(;m<i.length;m++)null!==(f=d(o,i[m],u))&&(l=a(f,l,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);m<i.length;m++)null!==(v=h(f,o,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),l=a(v,l,m),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(o,e)})),s}function v(o,i,u,s){var c=$(u);if("function"!=typeof c)throw Error(l(150));if(null==(u=c.call(u)))throw Error(l(151));for(var f=c=null,m=i,v=i=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,s);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,v),null===f?c=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(o,g.value,s))&&(i=a(g,i,v),null===f?c=g:f.sibling=g,f=g);return c}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,s))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=a(g,i,v),null===f?c=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,a,u){var s="object"==typeof a&&null!==a&&a.type===x&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case E:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(a.type===x){n(e,s.sibling),(r=o(s,a.props.children)).return=e,e=r;break e}break;default:if(s.elementType===a.type){n(e,s.sibling),(r=o(s,a.props)).ref=wa(e,s,a),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}a.type===x?((r=Iu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Fu(a.type,a.key,a.props,null,e.mode,u)).ref=wa(e,r,a),u.return=e,e=u)}return i(e);case S:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(a,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=$u(a,e.mode,u)).return=e,e=r),i(e);if(ba(a))return m(e,r,a,u);if($(a))return v(e,r,a,u);if(c&&ka(e,a),void 0===a&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,Q(e.type)||"Component"))}return n(e,r)}}var Sa=Ea(!0),xa=Ea(!1),Ca={},_a=ao(Ca),Pa=ao(Ca),Ta=ao(Ca);function Oa(e){if(e===Ca)throw Error(l(174));return e}function Na(e,t){switch(io(Ta,t),io(Pa,e),io(_a,Ca),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(_a),io(_a,t)}function La(){lo(_a),lo(Pa),lo(Ta)}function Ra(e){Oa(Ta.current);var t=Oa(_a.current),n=pe(t,e.type);t!==n&&(io(Pa,e),io(_a,n))}function za(e){Pa.current===e&&(lo(_a),lo(Pa))}var Ma=ao(0);function Aa(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ua=null,Da=null,ja=!1;function Fa(e,t){var n=Uu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ia(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ba(e){if(ja){var t=Da;if(t){var n=t;if(!Ia(e,t)){if(!(t=Hr(n.nextSibling))||!Ia(e,t))return e.flags=-1025&e.flags|2,ja=!1,void(Ua=e);Fa(Ua,n)}Ua=e,Da=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,ja=!1,Ua=e}}function $a(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ua=e}function Va(e){if(e!==Ua)return!1;if(!ja)return $a(e),ja=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ir(t,e.memoizedProps))for(t=Da;t;)Fa(e,t),t=Hr(t.nextSibling);if($a(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Da=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Da=null}}else Da=Ua?Hr(e.stateNode.nextSibling):null;return!0}function Ha(){Da=Ua=null,ja=!1}var Wa=[];function qa(){for(var e=0;e<Wa.length;e++)Wa[e]._workInProgressVersionPrimary=null;Wa.length=0}var Qa=k.ReactCurrentDispatcher,Ka=k.ReactCurrentBatchConfig,Za=0,Xa=null,Ya=null,Ga=null,Ja=!1,el=!1;function tl(){throw Error(l(321))}function nl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function rl(e,t,n,r,o,a){if(Za=a,Xa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qa.current=null===e||null===e.memoizedState?Ol:Nl,e=n(r,o),el){a=0;do{if(el=!1,!(25>a))throw Error(l(301));a+=1,Ga=Ya=null,t.updateQueue=null,Qa.current=Ll,e=n(r,o)}while(el)}if(Qa.current=Tl,t=null!==Ya&&null!==Ya.next,Za=0,Ga=Ya=Xa=null,Ja=!1,t)throw Error(l(300));return e}function ol(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ga?Xa.memoizedState=Ga=e:Ga=Ga.next=e,Ga}function al(){if(null===Ya){var e=Xa.alternate;e=null!==e?e.memoizedState:null}else e=Ya.next;var t=null===Ga?Xa.memoizedState:Ga.next;if(null!==t)Ga=t,Ya=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Ya=e).memoizedState,baseState:Ya.baseState,baseQueue:Ya.baseQueue,queue:Ya.queue,next:null},null===Ga?Xa.memoizedState=Ga=e:Ga=Ga.next=e}return Ga}function ll(e,t){return"function"==typeof t?t(e):t}function il(e){var t=al(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Ya,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var i=o.next;o.next=a.next,a.next=i}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=i=a=null,s=o;do{var c=s.lane;if((Za&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(i=u=f,a=r):u=u.next=f,Xa.lanes|=c,Ai|=c}s=s.next}while(null!==s&&s!==o);null===u?a=r:u.next=i,lr(r,t.memoizedState)||(zl=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ul(e){var t=al(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var i=o=o.next;do{a=e(a,i.action),i=i.next}while(i!==o);lr(a,t.memoizedState)||(zl=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function sl(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Za&e)===e)&&(t._workInProgressVersionPrimary=r,Wa.push(t))),e)return n(t._source);throw Wa.push(t),Error(l(350))}function cl(e,t,n,r){var o=Pi;if(null===o)throw Error(l(349));var a=t._getVersion,i=a(t._source),u=Qa.current,s=u.useState((function(){return sl(o,t,n)})),c=s[1],f=s[0];s=Ga;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Xa;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=a(t._source);if(!lr(i,e)){e=n(t._source),lr(f,e)||(c(e),e=iu(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,l=e;0<l;){var u=31-Vt(l),s=1<<u;r[u]|=e,l&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(v);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),lr(h,n)&&lr(m,t)&&lr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:f}).dispatch=c=Pl.bind(null,Xa,e),s.queue=e,s.baseQueue=null,f=sl(o,t,n),s.memoizedState=s.baseState=f),f}function fl(e,t,n){return cl(al(),e,t,n)}function dl(e){var t=ol();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:e}).dispatch=Pl.bind(null,Xa,e),[t.memoizedState,e]}function pl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Xa.updateQueue)?(t={lastEffect:null},Xa.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function hl(e){return e={current:e},ol().memoizedState=e}function ml(){return al().memoizedState}function vl(e,t,n,r){var o=ol();Xa.flags|=e,o.memoizedState=pl(1|t,n,void 0,void 0===r?null:r)}function yl(e,t,n,r){var o=al();r=void 0===r?null:r;var a=void 0;if(null!==Ya){var l=Ya.memoizedState;if(a=l.destroy,null!==r&&nl(r,l.deps))return void pl(t,n,a,r)}Xa.flags|=e,o.memoizedState=pl(1|t,n,a,r)}function gl(e,t){return vl(516,4,e,t)}function bl(e,t){return yl(516,4,e,t)}function wl(e,t){return yl(4,2,e,t)}function kl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function El(e,t,n){return n=null!=n?n.concat([e]):null,yl(4,2,kl.bind(null,t,e),n)}function Sl(){}function xl(e,t){var n=al();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Cl(e,t){var n=al();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function _l(e,t){var n=Bo();Vo(98>n?98:n,(function(){e(!0)})),Vo(97<n?97:n,(function(){var n=Ka.transition;Ka.transition=1;try{e(!1),t()}finally{Ka.transition=n}}))}function Pl(e,t,n){var r=lu(),o=iu(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?a.next=a:(a.next=l.next,l.next=a),t.pending=a,l=e.alternate,e===Xa||null!==l&&l===Xa)el=Ja=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(a.eagerReducer=l,a.eagerState=u,lr(u,i))return}catch(e){}uu(e,o,r)}}var Tl={readContext:ra,useCallback:tl,useContext:tl,useEffect:tl,useImperativeHandle:tl,useLayoutEffect:tl,useMemo:tl,useReducer:tl,useRef:tl,useState:tl,useDebugValue:tl,useDeferredValue:tl,useTransition:tl,useMutableSource:tl,useOpaqueIdentifier:tl,unstable_isNewReconciler:!1},Ol={readContext:ra,useCallback:function(e,t){return ol().memoizedState=[e,void 0===t?null:t],e},useContext:ra,useEffect:gl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vl(4,2,kl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vl(4,2,e,t)},useMemo:function(e,t){var n=ol();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ol();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Pl.bind(null,Xa,e),[r.memoizedState,e]},useRef:hl,useState:dl,useDebugValue:Sl,useDeferredValue:function(e){var t=dl(e),n=t[0],r=t[1];return gl((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=dl(!1),t=e[0];return hl(e=_l.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ol();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},cl(r,e,t,n)},useOpaqueIdentifier:function(){if(ja){var e=!1,t=function(e){return{$$typeof:A,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(qr++).toString(36))),Error(l(355))})),n=dl(t)[1];return 0==(2&Xa.mode)&&(Xa.flags|=516,pl(5,(function(){n("r:"+(qr++).toString(36))}),void 0,null)),t}return dl(t="r:"+(qr++).toString(36)),t},unstable_isNewReconciler:!1},Nl={readContext:ra,useCallback:xl,useContext:ra,useEffect:bl,useImperativeHandle:El,useLayoutEffect:wl,useMemo:Cl,useReducer:il,useRef:ml,useState:function(){return il(ll)},useDebugValue:Sl,useDeferredValue:function(e){var t=il(ll),n=t[0],r=t[1];return bl((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=il(ll)[0];return[ml().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return il(ll)[0]},unstable_isNewReconciler:!1},Ll={readContext:ra,useCallback:xl,useContext:ra,useEffect:bl,useImperativeHandle:El,useLayoutEffect:wl,useMemo:Cl,useReducer:ul,useRef:ml,useState:function(){return ul(ll)},useDebugValue:Sl,useDeferredValue:function(e){var t=ul(ll),n=t[0],r=t[1];return bl((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=ul(ll)[0];return[ml().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return ul(ll)[0]},unstable_isNewReconciler:!1},Rl=k.ReactCurrentOwner,zl=!1;function Ml(e,t,n,r){t.child=null===e?xa(t,null,n,r):Sa(t,e.child,n,r)}function Al(e,t,n,r,o){n=n.render;var a=t.ref;return na(t,o),r=rl(e,t,n,r,a,o),null===e||zl?(t.flags|=1,Ml(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Jl(e,t,o))}function Ul(e,t,n,r,o,a){if(null===e){var l=n.type;return"function"!=typeof l||Du(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Dl(e,t,l,r,o,a))}return l=e.child,0==(o&a)&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)?Jl(e,t,a):(t.flags|=1,(e=ju(l,r)).ref=t.ref,e.return=t,t.child=e)}function Dl(e,t,n,r,o,a){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(zl=!1,0==(a&o))return t.lanes=e.lanes,Jl(e,t,a);0!=(16384&e.flags)&&(zl=!0)}return Il(e,t,n,r,a)}function jl(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},hu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},hu(0,e),null;t.memoizedState={baseLanes:0},hu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,hu(0,r);return Ml(e,t,o,n),t.child}function Fl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Il(e,t,n,r,o){var a=ho(n)?fo:so.current;return a=po(t,a),na(t,o),n=rl(e,t,n,r,a,o),null===e||zl?(t.flags|=1,Ml(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Jl(e,t,o))}function Bl(e,t,n,r,o){if(ho(n)){var a=!0;go(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),va(t,n,r),ga(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,s=n.contextType;s="object"==typeof s&&null!==s?ra(s):po(t,s=ho(n)?fo:so.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==s)&&ya(t,l,r,s),oa=!1;var d=t.memoizedState;l.state=d,ca(t,r,l,o),u=t.memoizedState,i!==r||d!==u||co.current||oa?("function"==typeof c&&(pa(t,n,c,r),u=t.memoizedState),(i=oa||ma(t,n,i,r,d,u,s))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=s,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,la(e,t),i=t.memoizedProps,s=t.type===t.elementType?i:Ko(t.type,i),l.props=s,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?ra(u):po(t,u=ho(n)?fo:so.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&ya(t,l,r,u),oa=!1,d=t.memoizedState,l.state=d,ca(t,r,l,o);var h=t.memoizedState;i!==f||d!==h||co.current||oa?("function"==typeof p&&(pa(t,n,p,r),h=t.memoizedState),(s=oa||ma(t,n,s,r,d,h,u))?(c||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=s):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return $l(e,t,n,r,a,o)}function $l(e,t,n,r,o,a){Fl(e,t);var l=0!=(64&t.flags);if(!r&&!l)return o&&bo(t,n,!1),Jl(e,t,a);r=t.stateNode,Rl.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Sa(t,e.child,null,a),t.child=Sa(t,null,i,a)):Ml(e,t,i,a),t.memoizedState=r.state,o&&bo(t,n,!0),t.child}function Vl(e){var t=e.stateNode;t.pendingContext?vo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vo(0,t.context,!1),Na(e,t.containerInfo)}var Hl,Wl,ql,Ql={dehydrated:null,retryLane:0};function Kl(e,t,n){var r,o=t.pendingProps,a=Ma.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),io(Ma,1&a),null===e?(void 0!==o.fallback&&Ba(t),e=o.children,a=o.fallback,l?(e=Zl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Ql,e):"number"==typeof o.unstable_expectedLoadTime?(e=Zl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Ql,t.lanes=33554432,e):((n=Bu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(o=function(e,t,n,r,o){var a=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&a)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=ju(l,i),null!==e?r=ju(e,r):(r=Iu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),l=t.child,a=e.child.memoizedState,l.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=Ql,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=ju(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Zl(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Bu(t,o,0,null),n=Iu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Xl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ta(e.return,t)}function Yl(e,t,n,r,o,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=o,l.lastEffect=a)}function Gl(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Ml(e,t,r.children,n),0!=(2&(r=Ma.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Xl(e,n);else if(19===e.tag)Xl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(io(Ma,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Aa(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Yl(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Aa(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Yl(t,!0,n,null,a,t.lastEffect);break;case"together":Yl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ai|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=ju(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=ju(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!ja)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(t.type)&&mo(),null;case 3:return La(),lo(co),lo(so),qa(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Va(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:za(t);var a=Oa(Ta.current);if(n=t.type,null!==e&&null!=t.stateNode)Wl(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Oa(_a.current),Va(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Kr]=t,r[Zr]=i,n){case"dialog":_r("cancel",r),_r("close",r);break;case"iframe":case"object":case"embed":_r("load",r);break;case"video":case"audio":for(e=0;e<Er.length;e++)_r(Er[e],r);break;case"source":_r("error",r);break;case"img":case"image":case"link":_r("error",r),_r("load",r);break;case"details":_r("toggle",r);break;case"input":ee(r,i),_r("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},_r("invalid",r);break;case"textarea":ue(r,i),_r("invalid",r)}for(var s in Se(n,i),e=null,i)i.hasOwnProperty(s)&&(a=i[s],"children"===s?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(s)&&null!=a&&"onScroll"===s&&_r("scroll",r));switch(n){case"input":X(r),re(r,i,!0);break;case"textarea":X(r),ce(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Ur)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Kr]=t,e[Zr]=r,Hl(e,t),t.stateNode=e,s=xe(n,r),n){case"dialog":_r("cancel",e),_r("close",e),a=r;break;case"iframe":case"object":case"embed":_r("load",e),a=r;break;case"video":case"audio":for(a=0;a<Er.length;a++)_r(Er[a],e);a=r;break;case"source":_r("error",e),a=r;break;case"img":case"image":case"link":_r("error",e),_r("load",e),a=r;break;case"details":_r("toggle",e),a=r;break;case"input":ee(e,r),a=J(e,r),_r("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),_r("invalid",e);break;case"textarea":ue(e,r),a=ie(e,r),_r("invalid",e);break;default:a=r}Se(n,a);var c=a;for(i in c)if(c.hasOwnProperty(i)){var f=c[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&_r("scroll",e):null!=f&&w(e,i,f,s))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Ur)}Fr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)ql(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Oa(Ta.current),Oa(_a.current),Va(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return lo(Ma),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Va(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ma.current)?0===Ri&&(Ri=3):(0!==Ri&&3!==Ri||(Ri=4),null===Pi||0==(134217727&Ai)&&0==(134217727&Ui)||du(Pi,Oi))),(r||n)&&(t.flags|=4),null);case 4:return La(),null===e&&Tr(t.stateNode.containerInfo),null;case 10:return ea(t),null;case 17:return ho(t.type)&&mo(),null;case 19:if(lo(Ma),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(s=r.rendering))if(i)ei(r,!1);else{if(0!==Ri||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Aa(e))){for(t.flags|=64,ei(r,!1),null!==(i=s.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return io(Ma,1&Ma.current|2),t.child}e=e.sibling}null!==r.tail&&Io()>Ii&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Aa(s))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!ja)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Io()-r.renderingStartTime>Ii&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Io(),n.sibling=null,t=Ma.current,io(Ma,i?1&t|2:1&t),n):null;case 23:case 24:return mu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ni(e){switch(e.tag){case 1:ho(e.type)&&mo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(La(),lo(co),lo(so),qa(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return za(e),null;case 13:return lo(Ma),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lo(Ma),null;case 4:return La(),null;case 10:return ea(e),null;case 23:case 24:return mu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function oi(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Hl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wl=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Oa(_a.current);var l,i=null;switch(n){case"input":a=J(e,a),r=J(e,r),i=[];break;case"option":a=ae(e,a),r=ae(e,r),i=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),i=[];break;case"textarea":a=ie(e,a),r=ie(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Ur)}for(f in Se(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var s=a[f];for(l in s)s.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(i||(i=[]),i.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(i=i||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&_r("scroll",e),i||s===c||(i=[])):"object"==typeof c&&null!==c&&c.$$typeof===A?c.toString():(i=i||[]).push(f,c))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},ql=function(e,t,n,r){n!==r&&(t.flags|=4)};var ai="function"==typeof WeakMap?WeakMap:Map;function li(e,t,n){(n=ia(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hi||(Hi=!0,Wi=r),oi(0,t)},n}function ii(e,t,n){(n=ia(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return oi(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===qi?qi=new Set([this]):qi.add(this),oi(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function si(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function ci(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ko(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(l(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Ou(n,e),Tu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ko(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&fa(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fa(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Fr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(l(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(ko&&"function"==typeof ko.onCommitFiberUnmount)try{ko.onCommitFiberUnmount(wo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Ou(t,n);else{r=t;try{o()}catch(e){Ru(r,e)}}n=n.next}while(n!==e)}break;case 1:if(si(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ru(t,e)}break;case 5:si(t);break;case 4:bi(e,t)}}function hi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function mi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(mi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||mi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?yi(e,n,t):gi(e,n,t)}function yi(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Ur));else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function gi(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(l(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var i=e,u=o,s=u;;)if(pi(i,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(i=n,u=o.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(pi(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function wi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Zr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,o),t=xe(e,r),o=0;o<a.length;o+=2){var i=a[o],u=a[o+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ye(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?le(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Fi=Io(),di(t.child,!0)),void ki(t);case 19:return void ki(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(l(163))}function ki(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=Mu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Ei(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Si=Math.ceil,xi=k.ReactCurrentDispatcher,Ci=k.ReactCurrentOwner,_i=0,Pi=null,Ti=null,Oi=0,Ni=0,Li=ao(0),Ri=0,zi=null,Mi=0,Ai=0,Ui=0,Di=0,ji=null,Fi=0,Ii=1/0;function Bi(){Ii=Io()+500}var $i,Vi=null,Hi=!1,Wi=null,qi=null,Qi=!1,Ki=null,Zi=90,Xi=[],Yi=[],Gi=null,Ji=0,eu=null,tu=-1,nu=0,ru=0,ou=null,au=!1;function lu(){return 0!=(48&_i)?Io():-1!==tu?tu:tu=Io()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Bo()?1:2;if(0===nu&&(nu=Mi),0!==Qo.transition){0!==ru&&(ru=null!==ji?ji.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Bo(),e=Ft(0!=(4&_i)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Ji)throw Ji=0,eu=null,Error(l(185));if(null===(e=su(e,t)))return null;$t(e,t,n),e===Pi&&(Ui|=t,4===Ri&&du(e,Oi));var r=Bo();1===t?0!=(8&_i)&&0==(48&_i)?pu(e):(cu(e,n),0===_i&&(Bi(),Wo())):(0==(4&_i)||98!==r&&99!==r||(null===Gi?Gi=new Set([e]):Gi.add(e)),cu(e,n)),ji=e}function su(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Vt(i),s=1<<u,c=a[u];if(-1===c){if(0==(s&r)||0!=(s&o)){c=t,Ut(s);var f=At;a[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);i&=~s}if(r=Dt(e,e===Pi?Oi:0),t=At,0===r)null!==n&&(n!==Mo&&xo(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Mo&&xo(n)}15===t?(n=pu.bind(null,e),null===Uo?(Uo=[n],Do=So(Oo,qo)):Uo.push(n),n=Mo):n=14===t?Ho(99,pu.bind(null,e)):Ho(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&_i))throw Error(l(327));var t=e.callbackNode;if(Pu()&&e.callbackNode!==t)return null;var n=Dt(e,e===Pi?Oi:0);if(0===n)return null;var r=n,o=_i;_i|=16;var a=gu();for(Pi===e&&Oi===r||(Bi(),vu(e,r));;)try{ku();break}catch(t){yu(e,t)}if(Jo(),xi.current=a,_i=o,null!==Ti?r=0:(Pi=null,Oi=0,r=Ri),0!=(Mi&Ui))vu(e,0);else if(0!==r){if(2===r&&(_i|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=jt(e))&&(r=bu(e,n))),1===r)throw t=zi,vu(e,0),du(e,n),cu(e,Io()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:xu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Fi+500-Io())){if(0!==Dt(e,0))break;if(((o=e.suspendedLanes)&n)!==n){lu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Br(xu.bind(null,e),r);break}xu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var i=31-Vt(n);a=1<<i,(i=r[i])>o&&(o=i),n&=~a}if(n=o,10<(n=(120>(n=Io()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Si(n/1960))-n)){e.timeoutHandle=Br(xu.bind(null,e),n);break}xu(e);break;case 5:xu(e);break;default:throw Error(l(329))}}return cu(e,Io()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Di,t&=~Ui,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&_i))throw Error(l(327));if(Pu(),e===Pi&&0!=(e.expiredLanes&Oi)){var t=Oi,n=bu(e,t);0!=(Mi&Ui)&&(n=bu(e,t=Dt(e,t)))}else n=bu(e,t=Dt(e,0));if(0!==e.tag&&2===n&&(_i|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=jt(e))&&(n=bu(e,t))),1===n)throw n=zi,vu(e,0),du(e,t),cu(e,Io()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,xu(e),cu(e,Io()),null}function hu(e,t){io(Li,Ni),Ni|=t,Mi|=t}function mu(){Ni=Li.current,lo(Li)}function vu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,$r(n)),null!==Ti)for(n=Ti.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&mo();break;case 3:La(),lo(co),lo(so),qa();break;case 5:za(r);break;case 4:La();break;case 13:case 19:lo(Ma);break;case 10:ea(r);break;case 23:case 24:mu()}n=n.return}Pi=e,Ti=ju(e.current,null),Oi=Ni=Mi=t,Ri=0,zi=null,Di=Ui=Ai=0}function yu(e,t){for(;;){var n=Ti;try{if(Jo(),Qa.current=Tl,Ja){for(var r=Xa.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Ja=!1}if(Za=0,Ga=Ya=Xa=null,el=!1,Ci.current=null,null===n||null===n.return){Ri=1,zi=t,Ti=null;break}e:{var a=e,l=n.return,i=n,u=t;if(t=Oi,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&i.mode)){var c=i.alternate;c?(i.updateQueue=c.updateQueue,i.memoizedState=c.memoizedState,i.lanes=c.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Ma.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(s),d.updateQueue=y}else v.add(s);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=ia(-1,1);g.tag=2,ua(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ai,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(i)){u.add(i);var w=zu.bind(null,a,s,i);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((Q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ri&&(Ri=2),u=ri(u,i),d=l;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,li(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===qi||!qi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,ii(d,a,t));break e}}d=d.return}while(null!==d)}Su(n)}catch(e){t=e,Ti===n&&null!==n&&(Ti=n=n.return);continue}break}}function gu(){var e=xi.current;return xi.current=Tl,null===e?Tl:e}function bu(e,t){var n=_i;_i|=16;var r=gu();for(Pi===e&&Oi===t||vu(e,t);;)try{wu();break}catch(t){yu(e,t)}if(Jo(),_i=n,xi.current=r,null!==Ti)throw Error(l(261));return Pi=null,Oi=0,Ri}function wu(){for(;null!==Ti;)Eu(Ti)}function ku(){for(;null!==Ti&&!Co();)Eu(Ti)}function Eu(e){var t=$i(e.alternate,e,Ni);e.memoizedProps=e.pendingProps,null===t?Su(e):Ti=t,Ci.current=null}function Su(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Ni)))return void(Ti=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ni)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(Ti=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ti=t);Ti=t=e}while(null!==t);0===Ri&&(Ri=5)}function xu(e){var t=Bo();return Vo(99,Cu.bind(null,e,t)),null}function Cu(e,t){do{Pu()}while(null!==Ki);if(0!=(48&_i))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<a;){var s=31-Vt(a),c=1<<s;o[s]=0,i[s]=-1,u[s]=-1,a&=~c}if(null!==Gi&&0==(24&r)&&Gi.has(e)&&Gi.delete(e),e===Pi&&(Ti=Pi=null,Oi=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=_i,_i|=32,Ci.current=null,Dr=Kt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,a=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==s||0!==c&&3!==v.nodeType||(p=f+c),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++h===a&&(d=f),y===s&&++m===c&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;jr={focusedElem:i,selectionRange:u},Kt=!1,ou=null,au=!1,Vi=r;do{try{_u()}catch(e){if(null===Vi)throw Error(l(330));Ru(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);ou=null,Vi=r;do{try{for(i=e;null!==Vi;){var b=Vi.flags;if(16&b&&ye(Vi.stateNode,""),128&b){var w=Vi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:vi(Vi),Vi.flags&=-3;break;case 6:vi(Vi),Vi.flags&=-3,wi(Vi.alternate,Vi);break;case 1024:Vi.flags&=-1025;break;case 1028:Vi.flags&=-1025,wi(Vi.alternate,Vi);break;case 4:wi(Vi.alternate,Vi);break;case 8:bi(i,u=Vi);var E=u.alternate;hi(u),null!==E&&hi(E)}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(l(330));Ru(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);if(k=jr,w=dr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=cr(b,E),a=cr(b,i),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Dr,jr=Dr=null,e.current=n,Vi=r;do{try{for(b=e;null!==Vi;){var S=Vi.flags;if(36&S&&fi(b,Vi.alternate,Vi),128&S){w=void 0;var x=Vi.ref;if(null!==x){var C=Vi.stateNode;switch(Vi.tag){case 5:w=C;break;default:w=C}"function"==typeof x?x(w):x.current=w}}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(l(330));Ru(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);Vi=null,Ao(),_i=o}else e.current=n;if(Qi)Qi=!1,Ki=e,Zi=t;else for(Vi=r;null!==Vi;)t=Vi.nextEffect,Vi.nextEffect=null,8&Vi.flags&&((S=Vi).sibling=null,S.stateNode=null),Vi=t;if(0===(r=e.pendingLanes)&&(qi=null),1===r?e===eu?Ji++:(Ji=0,eu=e):Ji=0,n=n.stateNode,ko&&"function"==typeof ko.onCommitFiberRoot)try{ko.onCommitFiberRoot(wo,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,Io()),Hi)throw Hi=!1,e=Wi,Wi=null,e;return 0!=(8&_i)||Wo(),null}function _u(){for(;null!==Vi;){var e=Vi.alternate;au||null===ou||(0!=(8&Vi.flags)?Je(Vi,ou)&&(au=!0):13===Vi.tag&&Ei(e,Vi)&&Je(Vi,ou)&&(au=!0));var t=Vi.flags;0!=(256&t)&&ci(e,Vi),0==(512&t)||Qi||(Qi=!0,Ho(97,(function(){return Pu(),null}))),Vi=Vi.nextEffect}}function Pu(){if(90!==Zi){var e=97<Zi?97:Zi;return Zi=90,Vo(e,Nu)}return!1}function Tu(e,t){Xi.push(t,e),Qi||(Qi=!0,Ho(97,(function(){return Pu(),null})))}function Ou(e,t){Yi.push(t,e),Qi||(Qi=!0,Ho(97,(function(){return Pu(),null})))}function Nu(){if(null===Ki)return!1;var e=Ki;if(Ki=null,0!=(48&_i))throw Error(l(331));var t=_i;_i|=32;var n=Yi;Yi=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],i=o.destroy;if(o.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===a)throw Error(l(330));Ru(a,e)}}for(n=Xi,Xi=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(l(330));Ru(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return _i=t,Wo(),!0}function Lu(e,t,n){ua(e,t=li(0,t=ri(n,t),1)),t=lu(),null!==(e=su(e,1))&&($t(e,1,t),cu(e,t))}function Ru(e,t){if(3===e.tag)Lu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Lu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qi||!qi.has(r))){var o=ii(n,e=ri(t,e),1);if(ua(n,o),o=lu(),null!==(n=su(n,1)))$t(n,1,o),cu(n,o);else if("function"==typeof r.componentDidCatch&&(null===qi||!qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function zu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=lu(),e.pingedLanes|=e.suspendedLanes&n,Pi===e&&(Oi&n)===n&&(4===Ri||3===Ri&&(62914560&Oi)===Oi&&500>Io()-Fi?vu(e,0):Di|=n),cu(e,t)}function Mu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Bo()?1:2:(0===nu&&(nu=Mi),0===(t=It(62914560&~nu))&&(t=4194304))),n=lu(),null!==(e=su(e,t))&&($t(e,t,n),cu(e,n))}function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Uu(e,t,n,r){return new Au(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function ju(e,t){var n=e.alternate;return null===n?((n=Uu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,o,a){var i=2;if(r=e,"function"==typeof e)Du(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Iu(n.children,o,a,t);case U:i=8,o|=16;break;case C:i=8,o|=1;break;case _:return(e=Uu(12,n,t,8|o)).elementType=_,e.type=_,e.lanes=a,e;case N:return(e=Uu(13,n,t,o)).type=N,e.elementType=N,e.lanes=a,e;case L:return(e=Uu(19,n,t,o)).elementType=L,e.lanes=a,e;case D:return Bu(n,o,a,t);case j:return(e=Uu(24,n,t,o)).elementType=j,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case T:i=9;break e;case O:i=11;break e;case R:i=14;break e;case z:i=16,r=null;break e;case M:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Uu(i,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function Iu(e,t,n,r){return(e=Uu(7,e,r,t)).lanes=n,e}function Bu(e,t,n,r){return(e=Uu(23,e,r,t)).elementType=D,e.lanes=n,e}function $u(e,t,n){return(e=Uu(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=Uu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Hu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Wu(e,t,n,r){var o=t.current,a=lu(),i=iu(o);e:if(n){t:{if(Ze(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ho(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var s=n.type;if(ho(s)){n=yo(n,s,u);break e}}n=u}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=ia(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ua(o,t),uu(o,i,a),i}function qu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Qu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ku(e,t){Qu(e,t),(e=e.alternate)&&Qu(e,t)}function Zu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Hu(e,t,null!=n&&!0===n.hydrate),t=Uu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,aa(t),e[Xr]=n.current,Tr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function Xu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Yu(e,t,n,r,o){var a=n._reactRootContainer;if(a){var l=a._internalRoot;if("function"==typeof o){var i=o;o=function(){var e=qu(l);i.call(e)}}Wu(t,l,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Zu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=qu(l);u.call(e)}}!function(e,t){var n=_i;_i&=-2,_i|=8;try{e(t)}finally{0===(_i=n)&&(Bi(),Wo())}}((function(){Wu(t,l,e,o)}))}return qu(l)}$i=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||co.current)zl=!0;else{if(0==(n&r)){switch(zl=!1,t.tag){case 3:Vl(t),Ha();break;case 5:Ra(t);break;case 1:ho(t.type)&&go(t);break;case 4:Na(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;io(Zo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Kl(e,t,n):(io(Ma,1&Ma.current),null!==(t=Jl(e,t,n))?t.sibling:null);io(Ma,1&Ma.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Gl(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),io(Ma,Ma.current),r)break;return null;case 23:case 24:return t.lanes=0,jl(e,t,n)}return Jl(e,t,n)}zl=0!=(16384&e.flags)}else zl=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=po(t,so.current),na(t,n),o=rl(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ho(r)){var a=!0;go(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,aa(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&pa(t,r,i,e),o.updater=ha,t.stateNode=o,o._reactInternals=t,ga(t,r,e,n),t=$l(null,t,r,!0,a,n)}else t.tag=0,Ml(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===R)return 14}return 2}(o),e=Ko(o,e),a){case 0:t=Il(null,t,o,e,n);break e;case 1:t=Bl(null,t,o,e,n);break e;case 11:t=Al(null,t,o,e,n);break e;case 14:t=Ul(null,t,o,Ko(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Il(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 1:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 3:if(Vl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,la(e,t),ca(t,r,null,n),(r=t.memoizedState.element)===o)Ha(),t=Jl(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Da=Hr(t.stateNode.containerInfo.firstChild),Ua=t,a=ja=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Wa.push(a);for(n=xa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ml(e,t,r,n),Ha();t=t.child}return t;case 5:return Ra(t),null===e&&Ba(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,i=o.children,Ir(r,o)?i=null:null!==a&&Ir(r,a)&&(t.flags|=16),Fl(e,t),Ml(e,t,i,n),t.child;case 6:return null===e&&Ba(t),null;case 13:return Kl(e,t,n);case 4:return Na(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Sa(t,null,r,n):Ml(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Al(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 7:return Ml(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ml(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=o.value;var u=t.type._context;if(io(Zo,u._currentValue),u._currentValue=a,null!==i)if(u=i.value,0==(a=lr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(i.children===o.children&&!co.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){i=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===u.tag&&((c=ia(-1,n&-n)).tag=2,ua(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),ta(u.return,n),s.lanes|=n;break}c=c.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Ml(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(o=ra(o,a.unstable_observedBits)),t.flags|=1,Ml(e,t,r,n),t.child;case 14:return a=Ko(o=t.type,t.pendingProps),Ul(e,t,o,a=Ko(o.type,a),r,n);case 15:return Dl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Ko(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ho(r)?(e=!0,go(t)):e=!1,na(t,n),va(t,r,o),ga(t,r,o,n),$l(null,t,r,!0,e,n);case 19:return Gl(e,t,n);case 23:case 24:return jl(e,t,n)}throw Error(l(156,t.tag))},Zu.prototype.render=function(e){Wu(e,this._internalRoot,null,null)},Zu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Wu(null,e,null,(function(){t[Xr]=null}))},et=function(e){13===e.tag&&(uu(e,4,lu()),Ku(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,lu()),Ku(e,67108864))},nt=function(e){if(13===e.tag){var t=lu(),n=iu(e);uu(e,n,t),Ku(e,n)}},rt=function(e,t){return t()},_e=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=to(r);if(!o)throw Error(l(90));Y(r),ne(r,o)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},Re=function(e,t){var n=_i;_i|=1;try{return e(t)}finally{0===(_i=n)&&(Bi(),Wo())}},ze=function(e,t,n,r,o){var a=_i;_i|=4;try{return Vo(98,e.bind(null,t,n,r,o))}finally{0===(_i=a)&&(Bi(),Wo())}},Me=function(){0==(49&_i)&&(function(){if(null!==Gi){var e=Gi;Gi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,Io())}))}Wo()}(),Pu())},Ae=function(e,t){var n=_i;_i|=2;try{return e(t)}finally{0===(_i=n)&&(Bi(),Wo())}};var Gu={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Ju={bundleType:Gu.bundleType,version:Gu.version,rendererPackageName:Gu.rendererPackageName,rendererConfig:Gu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:Gu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var es=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!es.isDisabled&&es.supportsFiber)try{wo=es.inject(Ju),ko=es}catch(me){}}t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Ge(t))?null:e.stateNode},t.render=function(e,t,n){if(!Xu(t))throw Error(l(200));return Yu(null,e,t,!1,n)}},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case a:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case v:case m:case u:return e;default:return t}}case o:return t}}}function E(e){return k(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=a,t.Lazy=v,t.Memo=m,t.Portal=o,t.Profiler=i,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===c},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===o},t.isProfiler=function(e){return k(e)===i},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===f||e===i||e===l||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},5977:(e,t,n)=>{"use strict";n.d(t,{l_:()=>S,AW:()=>P,F0:()=>g,rs:()=>T,s6:()=>y,LX:()=>_,UO:()=>N});var r=n(1788),o=n(7294),a=n(5697),l=n.n(a),i=n(71),u=1073741823,s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function c(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const f=o.createContext||function(e,t){var n,a,i,f="__create-react-context-"+((s[i="__global_unique_id__"]=(s[i]||0)+1)+"__"),d=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=c(t.props.value),t}(0,r.Z)(n,e);var o=n.prototype;return o.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},o.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((a=r)===(l=o)?0!==a||1/a==1/l:a!=a&&l!=l)?n=0:(n="function"==typeof t?t(r,o):u,0!=(n|=0)&&this.emitter.set(e.value,n))}var a,l},o.render=function(){return this.props.children},n}(o.Component);d.childContextTypes=((n={})[f]=l().object.isRequired,n);var p=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}(0,r.Z)(n,t);var o=n.prototype;return o.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?u:t},o.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?u:e},o.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},o.getValue=function(){return this.context[f]?this.context[f].get():e},o.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(o.Component);return p.contextTypes=((a={})[f]=l().object,a),{Provider:d,Consumer:p}};var d=n(2177),p=n(2122),h=n(4779),m=n.n(h),v=(n(9864),n(9756),n(8679),function(e){var t=f();return t.displayName="Router-History",t}()),y=function(e){var t=f();return t.displayName="Router",t}(),g=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}(0,r.Z)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.createElement(y.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.createElement(v.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.Component);o.Component;var b=function(e){function t(){return e.apply(this,arguments)||this}(0,r.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(o.Component),w={},k=0;function E(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(w[e])return w[e];var t=m().compile(e);return k<1e4&&(w[e]=t,k++),t}(e)(t,{pretty:!0})}function S(e){var t=e.computedMatch,n=e.to,r=e.push,a=void 0!==r&&r;return o.createElement(y.Consumer,null,(function(e){e||(0,d.Z)(!1);var r=e.history,l=e.staticContext,u=a?r.push:r.replace,s=(0,i.ob)(t?"string"==typeof n?E(n,t.params):(0,p.Z)({},n,{pathname:E(n.pathname,t.params)}):n);return l?(u(s),null):o.createElement(b,{onMount:function(){u(s)},onUpdate:function(e,t){var n=(0,i.ob)(t.to);(0,i.Hp)(n,(0,p.Z)({},s,{key:n.key}))||u(s)},to:n})}))}var x={},C=0;function _(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,a=void 0!==o&&o,l=n.strict,i=void 0!==l&&l,u=n.sensitive,s=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=x[n]||(x[n]={});if(r[e])return r[e];var o=[],a={regexp:m()(e,o,t),keys:o};return C<1e4&&(r[e]=a,C++),a}(n,{end:a,strict:i,sensitive:s}),o=r.regexp,l=r.keys,u=o.exec(e);if(!u)return null;var c=u[0],f=u.slice(1),d=e===c;return a&&!d?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var P=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return o.createElement(y.Consumer,null,(function(t){t||(0,d.Z)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?_(n.pathname,e.props):t.match,a=(0,p.Z)({},t,{location:n,match:r}),l=e.props,i=l.children,u=l.component,s=l.render;return Array.isArray(i)&&0===i.length&&(i=null),o.createElement(y.Provider,{value:a},a.match?i?"function"==typeof i?i(a):i:u?o.createElement(u,a):s?s(a):null:"function"==typeof i?i(a):null)}))},t}(o.Component);o.Component;var T=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return o.createElement(y.Consumer,null,(function(t){t||(0,d.Z)(!1);var n,r,a=e.props.location||t.location;return o.Children.forEach(e.props.children,(function(e){if(null==r&&o.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?_(a.pathname,(0,p.Z)({},e.props,{path:l})):t.match}})),r?o.cloneElement(n,{location:a,computedMatch:r}):null}))},t}(o.Component),O=o.useContext;function N(){var e=O(y).match;return e?e.params:{}}},2408:(e,t,n)=>{"use strict";var r=n(7418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,a={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:l,ref:i,props:a,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g;function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return l=l(u=e),e=""===r?"."+_(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),P(l,t,n,"",(function(e){return e}))):null!=l&&(x(l)&&(l=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(C,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+_(i=e[s],s);u+=P(i,t,n,c,l)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(i=e.next()).done;)u+=P(i=i.value,t,n,c=r+_(i,s++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function T(e,t,n){if(null==e)return e;var r=[],o=0;return P(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var N={current:null};function L(){var e=N.current;if(null===e)throw Error(p(321));return e}var R={ReactCurrentDispatcher:N,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!E.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:o,type:e.type,key:l,ref:i,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="17.0.1"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},53:(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},o=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<C(o,t)))break e;e[r]=t,e[n]=o,n=r}}function S(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,l=e[a],i=a+1,u=e[i];if(void 0!==l&&0>C(l,n))void 0!==u&&0>C(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[a]=n,r=a);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],P=[],T=1,O=null,N=3,L=!1,R=!1,z=!1;function M(e){for(var t=S(P);null!==t;){if(null===t.callback)x(P);else{if(!(t.startTime<=e))break;x(P),t.sortIndex=t.expirationTime,E(_,t)}t=S(P)}}function A(e){if(z=!1,M(e),!R)if(null!==S(_))R=!0,n(U);else{var t=S(P);null!==t&&r(A,t.startTime-e)}}function U(e,n){R=!1,z&&(z=!1,o()),L=!0;var a=N;try{for(M(n),O=S(_);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=O.callback;if("function"==typeof l){O.callback=null,N=O.priorityLevel;var i=l(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?O.callback=i:O===S(_)&&x(_),M(n)}else x(_);O=S(_)}if(null!==O)var u=!0;else{var s=S(P);null!==s&&r(A,s.startTime-n),u=!1}return u}finally{O=null,N=a,L=!1}}var D=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||L||(R=!0,n(U))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(_)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var n=N;N=t;try{return e()}finally{N=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=N;N=e;try{return t()}finally{N=n}},t.unstable_scheduleCallback=function(e,a,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:T++,callback:a,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,E(P,e),null===S(_)&&e===S(P)&&(z?o():z=!0,r(A,l-i))):(e.sortIndex=u,E(_,e),R||L||(R=!0,n(U))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var n=N;N=t;try{return e.apply(this,arguments)}finally{N=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},2177:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r=function(e,t){if(!e)throw new Error("Invariant failed")}}},r={};function o(e){if(r[e])return r[e].exports;var t=r[e]={id:e,loaded:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.loaded=!0,t.exports}o.m=n,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,n)=>(o.f[n](e,t),t)),[])),o.u=e=>e+".js",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="42board-front:",o.l=(n,r,a)=>{if(e[n])e[n].push(r);else{var l,i;if(void 0!==a)for(var u=document.getElementsByTagName("script"),s=0;s<u.length;s++){var c=u[s];if(c.getAttribute("src")==n||c.getAttribute("data-webpack")==t+a){l=c;break}}l||(i=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,o.nc&&l.setAttribute("nonce",o.nc),l.setAttribute("data-webpack",t+a),l.src=n),e[n]=[r];var f=(t,r)=>{l.onerror=l.onload=null,clearTimeout(d);var o=e[n];if(delete e[n],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(r))),t)return t(r)},d=setTimeout(f.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=f.bind(null,l.onerror),l.onload=f.bind(null,l.onload),i&&document.head.appendChild(l)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),o.p="/dist/",(()=>{var e={143:0};o.f.j=(t,n)=>{var r=o.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var a=new Promise(((n,o)=>{r=e[t]=[n,o]}));n.push(r[2]=a);var l=o.p+o.u(t),i=new Error;o.l(l,(n=>{if(o.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var a=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;i.message="Loading chunk "+t+" failed.\n("+a+": "+l+")",i.name="ChunkLoadError",i.type=a,i.request=l,r[1](i)}}),"chunk-"+t)}};var t=self.webpackChunk_42board_front=self.webpackChunk_42board_front||[],n=t.push.bind(t);t.push=t=>{for(var r,a,[l,i,u]=t,s=0,c=[];s<l.length;s++)a=l[s],o.o(e,a)&&e[a]&&c.push(e[a][0]),e[a]=0;for(r in i)o.o(i,r)&&(o.m[r]=i[r]);for(u&&u(o),n(t);c.length;)c.shift()()}})(),(()=>{"use strict";var e=o(7294),t=o(3935),n=o(5977),r=o(1788),a=o(71),l=(o(5697),o(2122)),i=o(9756),u=o(2177),s=function(t){function o(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).history=(0,a.lX)(e.props),e}return(0,r.Z)(o,t),o.prototype.render=function(){return e.createElement(n.F0,{history:this.history,children:this.props.children})},o}(e.Component);e.Component;var c=function(e,t){return"function"==typeof e?e(t):e},f=function(e,t){return"string"==typeof e?(0,a.ob)(e,null,null,t):e},d=function(e){return e},p=e.forwardRef;void 0===p&&(p=d);var h=p((function(t,n){var r=t.innerRef,o=t.navigate,a=t.onClick,u=(0,i.Z)(t,["innerRef","navigate","onClick"]),s=u.target,c=(0,l.Z)({},u,{onClick:function(e){try{a&&a(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||s&&"_self"!==s||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),o())}});return c.ref=d!==p&&n||r,e.createElement("a",c)})),m=p((function(t,r){var o=t.component,a=void 0===o?h:o,s=t.replace,m=t.to,v=t.innerRef,y=(0,i.Z)(t,["component","replace","to","innerRef"]);return e.createElement(n.s6.Consumer,null,(function(t){t||(0,u.Z)(!1);var n=t.history,o=f(c(m,t.location),t.location),i=o?n.createHref(o):"",h=(0,l.Z)({},y,{href:i,navigate:function(){var e=c(m,t.location);(s?n.replace:n.push)(e)}});return d!==p?h.ref=r||v:h.innerRef=v,e.createElement(a,h)}))})),v=function(e){return e},y=e.forwardRef;void 0===y&&(y=v),y((function(t,r){var o=t["aria-current"],a=void 0===o?"page":o,s=t.activeClassName,d=void 0===s?"active":s,p=t.activeStyle,h=t.className,g=t.exact,b=t.isActive,w=t.location,k=t.sensitive,E=t.strict,S=t.style,x=t.to,C=t.innerRef,_=(0,i.Z)(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement(n.s6.Consumer,null,(function(t){t||(0,u.Z)(!1);var o=w||t.location,i=f(c(x,o),o),s=i.pathname,P=s&&s.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),T=P?(0,n.LX)(o.pathname,{path:P,exact:g,sensitive:k,strict:E}):null,O=!!(b?b(T,o):T),N=O?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(h,d):h,L=O?(0,l.Z)({},S,{},p):S,R=(0,l.Z)({"aria-current":O&&a||null,className:N,style:L,to:i},_);return v!==y?R.ref=r||C:R.innerRef=C,e.createElement(m,R)}))}));var g=o(3653),b=o.n(g);var w=o(9864),k=o(8679),E=o.n(k);var S=e.createContext(),x={},C="PENDING",_="REJECTED",P=function(e){return e};function T(t){var n=t.defaultResolveComponent,o=void 0===n?P:n,a=t.render,u=t.onLoad;function s(t,n){void 0===n&&(n={});var s=function(e){return"function"==typeof e?{requireAsync:e,resolve:function(){},chunkName:function(){}}:e}(t),c={};function f(e){return n.cacheKey?n.cacheKey(e):s.resolve?s.resolve(e):"static"}function d(e,t,r){var a=n.resolveComponent?n.resolveComponent(e,t):o(e);if(n.resolveComponent&&!(0,w.isValidElementType)(a))throw new Error("resolveComponent returned something that is not a React component!");return E()(r,a,{preload:!0}),a}var p,h=function(e){function t(t){var r;return(r=e.call(this,t)||this).state={result:null,error:null,loading:!0,cacheKey:f(t)},function(e,t){if(!e){var n=new Error("loadable: "+t);throw n.framesToPop=1,n.name="Invariant Violation",n}}(!t.__chunkExtractor||s.requireSync,"SSR requires `@loadable/babel-plugin`, please install it"),t.__chunkExtractor?(!1===n.ssr||(s.requireAsync(t).catch((function(){return null})),r.loadSync(),t.__chunkExtractor.addChunk(s.chunkName(t))),function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r)):(!1!==n.ssr&&(s.isReady&&s.isReady(t)||s.chunkName&&x[s.chunkName(t)])&&r.loadSync(),r)}(0,r.Z)(t,e),t.getDerivedStateFromProps=function(e,t){var n=f(e);return(0,l.Z)({},t,{cacheKey:n,loading:t.loading||t.cacheKey!==n})};var o=t.prototype;return o.componentDidMount=function(){this.mounted=!0;var e=this.getCache();e&&e.status===_&&this.setCache(),this.state.loading&&this.loadAsync()},o.componentDidUpdate=function(e,t){t.cacheKey!==this.state.cacheKey&&this.loadAsync()},o.componentWillUnmount=function(){this.mounted=!1},o.safeSetState=function(e,t){this.mounted&&this.setState(e,t)},o.getCacheKey=function(){return f(this.props)},o.getCache=function(){return c[this.getCacheKey()]},o.setCache=function(e){void 0===e&&(e=void 0),c[this.getCacheKey()]=e},o.triggerOnLoad=function(){var e=this;u&&setTimeout((function(){u(e.state.result,e.props)}))},o.loadSync=function(){if(this.state.loading)try{var e=d(s.requireSync(this.props),this.props,v);this.state.result=e,this.state.loading=!1}catch(e){console.error("loadable-components: failed to synchronously load component, which expected to be available",{fileName:s.resolve(this.props),chunkName:s.chunkName(this.props),error:e?e.message:e}),this.state.error=e}},o.loadAsync=function(){var e=this,t=this.resolveAsync();return t.then((function(t){var n=d(t,e.props,{Loadable:v});e.safeSetState({result:n,loading:!1},(function(){return e.triggerOnLoad()}))})).catch((function(t){return e.safeSetState({error:t,loading:!1})})),t},o.resolveAsync=function(){var e=this,t=this.props,n=(t.__chunkExtractor,t.forwardedRef,(0,i.Z)(t,["__chunkExtractor","forwardedRef"])),r=this.getCache();return r||((r=s.requireAsync(n)).status=C,this.setCache(r),r.then((function(){r.status="RESOLVED"}),(function(t){console.error("loadable-components: failed to asynchronously load component",{fileName:s.resolve(e.props),chunkName:s.chunkName(e.props),error:t?t.message:t}),r.status=_}))),r},o.render=function(){var e=this.props,t=e.forwardedRef,r=e.fallback,o=(e.__chunkExtractor,(0,i.Z)(e,["forwardedRef","fallback","__chunkExtractor"])),u=this.state,s=u.error,c=u.loading,f=u.result;if(n.suspense&&(this.getCache()||this.loadAsync()).status===C)throw this.loadAsync();if(s)throw s;var d=r||n.fallback||null;return c?d:a({fallback:d,result:f,options:n,props:(0,l.Z)({},o,{ref:t})})},t}(e.Component),m=(p=h,function(t){return e.createElement(S.Consumer,null,(function(n){return e.createElement(p,Object.assign({__chunkExtractor:n},t))}))}),v=e.forwardRef((function(t,n){return e.createElement(m,Object.assign({forwardedRef:n},t))}));return v.preload=function(e){s.requireAsync(e)},v.load=function(e){return s.requireAsync(e)},v}return{loadable:s,lazy:function(e,t){return s(e,(0,l.Z)({},t,{suspense:!0}))}}}var O=T({defaultResolveComponent:function(e){return e.__esModule?e.default:e.default||e},render:function(t){var n=t.result,r=t.props;return e.createElement(n,r)}}),N=O.loadable,L=O.lazy,R=T({onLoad:function(e,t){e&&t.forwardedRef&&("function"==typeof t.forwardedRef?t.forwardedRef(e):t.forwardedRef.current=e)},render:function(e){var t=e.result,n=e.props;return n.children?n.children(t):null}}),z=R.loadable,M=R.lazy,A=N;A.lib=z,L.lib=M;const U=A,D=U((()=>Promise.all([o.e(471),o.e(379)]).then(o.bind(o,9379)))),j=U((()=>Promise.all([o.e(471),o.e(202),o.e(174),o.e(628)]).then(o.bind(o,7628)))),F=U((()=>Promise.all([o.e(471),o.e(754),o.e(438)]).then(o.bind(o,6754)))),I=U((()=>Promise.all([o.e(471),o.e(202),o.e(754),o.e(370)]).then(o.bind(o,3370)))),B=()=>e.createElement(n.rs,null,e.createElement(n.AW,{exact:!0,path:"/"},e.createElement(n.l_,{to:"/auth"})),e.createElement(n.AW,{path:"/auth",component:D}),e.createElement(n.AW,{path:"/main",component:F}),e.createElement(n.AW,{path:"/board/:board",component:j}),e.createElement(n.AW,{path:"/manage",component:I}));b().defaults.withCredentials=!0,b().defaults.baseURL="https://api.42board.com",b().defaults.headers["Access-Control-Allow-Origin"]="*",(0,t.render)(e.createElement(s,null,e.createElement(B,null)),document.querySelector("#app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly80MmJvYXJkLWZyb250L3dlYnBhY2svcnVudGltZS9sb2FkIHNjcmlwdCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMveGhyLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbFRva2VuLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9yZXNvbHZlLXBhdGhuYW1lL2VzbS9yZXNvbHZlLXBhdGhuYW1lLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvZXNtL3ZhbHVlLWVxdWFsLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvaGlzdG9yeS9lc20vaGlzdG9yeS5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzbS9yZWFjdC1yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvd2VicGFjay9ydW50aW1lL2Vuc3VyZSBjaHVuayIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250L3dlYnBhY2svcnVudGltZS9nZXQgamF2YXNjcmlwdCBjaHVuayBmaWxlbmFtZSIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250L3dlYnBhY2svcnVudGltZS9ub2RlIG1vZHVsZSBkZWNvcmF0b3IiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250L3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovLzQyYm9hcmQtZnJvbnQvLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lc20vcmVhY3Qtcm91dGVyLWRvbS5qcyIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vbm9kZV9tb2R1bGVzL0Bsb2FkYWJsZS9jb21wb25lbnQvZGlzdC9sb2FkYWJsZS5lc20uanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vNDJib2FyZC1mcm9udC8uL2xheW91dHMvQXBwL2luZGV4LnRzeCIsIndlYnBhY2s6Ly80MmJvYXJkLWZyb250Ly4vY2xpZW50LnRzeCJdLCJuYW1lcyI6WyJpblByb2dyZXNzIiwiZGF0YVdlYnBhY2tQcmVmaXgiLCJtb2R1bGUiLCJleHBvcnRzIiwidXRpbHMiLCJzZXR0bGUiLCJjb29raWVzIiwiYnVpbGRVUkwiLCJidWlsZEZ1bGxQYXRoIiwicGFyc2VIZWFkZXJzIiwiaXNVUkxTYW1lT3JpZ2luIiwiY3JlYXRlRXJyb3IiLCJjb25maWciLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInJlcXVlc3REYXRhIiwiZGF0YSIsInJlcXVlc3RIZWFkZXJzIiwiaGVhZGVycyIsImlzRm9ybURhdGEiLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJhdXRoIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiQXV0aG9yaXphdGlvbiIsImJ0b2EiLCJmdWxsUGF0aCIsImJhc2VVUkwiLCJ1cmwiLCJvcGVuIiwibWV0aG9kIiwidG9VcHBlckNhc2UiLCJwYXJhbXMiLCJwYXJhbXNTZXJpYWxpemVyIiwidGltZW91dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZVVSTCIsImluZGV4T2YiLCJyZXNwb25zZUhlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZSIsInJlc3BvbnNlVHlwZSIsInJlc3BvbnNlVGV4dCIsInN0YXR1c1RleHQiLCJvbmFib3J0Iiwib25lcnJvciIsIm9udGltZW91dCIsInRpbWVvdXRFcnJvck1lc3NhZ2UiLCJpc1N0YW5kYXJkQnJvd3NlckVudiIsInhzcmZWYWx1ZSIsIndpdGhDcmVkZW50aWFscyIsInhzcmZDb29raWVOYW1lIiwicmVhZCIsInVuZGVmaW5lZCIsInhzcmZIZWFkZXJOYW1lIiwiZm9yRWFjaCIsInZhbCIsImtleSIsInRvTG93ZXJDYXNlIiwic2V0UmVxdWVzdEhlYWRlciIsImlzVW5kZWZpbmVkIiwiZSIsIm9uRG93bmxvYWRQcm9ncmVzcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvblVwbG9hZFByb2dyZXNzIiwidXBsb2FkIiwiY2FuY2VsVG9rZW4iLCJwcm9taXNlIiwidGhlbiIsImNhbmNlbCIsImFib3J0Iiwic2VuZCIsImJpbmQiLCJBeGlvcyIsIm1lcmdlQ29uZmlnIiwiY3JlYXRlSW5zdGFuY2UiLCJkZWZhdWx0Q29uZmlnIiwiY29udGV4dCIsImluc3RhbmNlIiwicHJvdG90eXBlIiwiZXh0ZW5kIiwiYXhpb3MiLCJjcmVhdGUiLCJpbnN0YW5jZUNvbmZpZyIsImRlZmF1bHRzIiwiQ2FuY2VsIiwiQ2FuY2VsVG9rZW4iLCJpc0NhbmNlbCIsImFsbCIsInByb21pc2VzIiwic3ByZWFkIiwiZGVmYXVsdCIsIm1lc3NhZ2UiLCJ0aGlzIiwidG9TdHJpbmciLCJfX0NBTkNFTF9fIiwiZXhlY3V0b3IiLCJUeXBlRXJyb3IiLCJyZXNvbHZlUHJvbWlzZSIsInRva2VuIiwicmVhc29uIiwidGhyb3dJZlJlcXVlc3RlZCIsInNvdXJjZSIsImMiLCJ2YWx1ZSIsIkludGVyY2VwdG9yTWFuYWdlciIsImRpc3BhdGNoUmVxdWVzdCIsImludGVyY2VwdG9ycyIsImFyZ3VtZW50cyIsImNoYWluIiwiaW50ZXJjZXB0b3IiLCJ1bnNoaWZ0IiwiZnVsZmlsbGVkIiwicmVqZWN0ZWQiLCJwdXNoIiwibGVuZ3RoIiwic2hpZnQiLCJnZXRVcmkiLCJyZXBsYWNlIiwiaGFuZGxlcnMiLCJ1c2UiLCJlamVjdCIsImlkIiwiZm4iLCJoIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwicmVxdWVzdGVkVVJMIiwiZW5oYW5jZUVycm9yIiwiY29kZSIsImVycm9yIiwiRXJyb3IiLCJ0cmFuc2Zvcm1EYXRhIiwidGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZCIsInRyYW5zZm9ybVJlcXVlc3QiLCJtZXJnZSIsImNvbW1vbiIsImFkYXB0ZXIiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsImlzQXhpb3NFcnJvciIsInRvSlNPTiIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsIm51bWJlciIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImNvbHVtbk51bWJlciIsInN0YWNrIiwiY29uZmlnMSIsImNvbmZpZzIiLCJ2YWx1ZUZyb21Db25maWcyS2V5cyIsIm1lcmdlRGVlcFByb3BlcnRpZXNLZXlzIiwiZGVmYXVsdFRvQ29uZmlnMktleXMiLCJkaXJlY3RNZXJnZUtleXMiLCJnZXRNZXJnZWRWYWx1ZSIsInRhcmdldCIsImlzUGxhaW5PYmplY3QiLCJpc0FycmF5Iiwic2xpY2UiLCJtZXJnZURlZXBQcm9wZXJ0aWVzIiwicHJvcCIsImF4aW9zS2V5cyIsImNvbmNhdCIsIm90aGVyS2V5cyIsIk9iamVjdCIsImtleXMiLCJmaWx0ZXIiLCJ2YWxpZGF0ZVN0YXR1cyIsImZucyIsIm5vcm1hbGl6ZUhlYWRlck5hbWUiLCJERUZBVUxUX0NPTlRFTlRfVFlQRSIsInNldENvbnRlbnRUeXBlSWZVbnNldCIsInByb2Nlc3MiLCJjYWxsIiwiaXNBcnJheUJ1ZmZlciIsImlzQnVmZmVyIiwiaXNTdHJlYW0iLCJpc0ZpbGUiLCJpc0Jsb2IiLCJpc0FycmF5QnVmZmVyVmlldyIsImJ1ZmZlciIsImlzVVJMU2VhcmNoUGFyYW1zIiwiaXNPYmplY3QiLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJtYXhDb250ZW50TGVuZ3RoIiwibWF4Qm9keUxlbmd0aCIsInRoaXNBcmciLCJhcmdzIiwiQXJyYXkiLCJpIiwiYXBwbHkiLCJlbmNvZGUiLCJzZXJpYWxpemVkUGFyYW1zIiwicGFydHMiLCJ2IiwiaXNEYXRlIiwidG9JU09TdHJpbmciLCJqb2luIiwiaGFzaG1hcmtJbmRleCIsInJlbGF0aXZlVVJMIiwid3JpdGUiLCJleHBpcmVzIiwicGF0aCIsImRvbWFpbiIsInNlY3VyZSIsImNvb2tpZSIsImlzTnVtYmVyIiwiRGF0ZSIsInRvR01UU3RyaW5nIiwiaXNTdHJpbmciLCJkb2N1bWVudCIsIm1hdGNoIiwiUmVnRXhwIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwibm93IiwidGVzdCIsIm9yaWdpblVSTCIsIm1zaWUiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ1cmxQYXJzaW5nTm9kZSIsImNyZWF0ZUVsZW1lbnQiLCJyZXNvbHZlVVJMIiwiaHJlZiIsInNldEF0dHJpYnV0ZSIsInByb3RvY29sIiwiaG9zdCIsInNlYXJjaCIsImhhc2giLCJob3N0bmFtZSIsInBvcnQiLCJwYXRobmFtZSIsImNoYXJBdCIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVxdWVzdFVSTCIsInBhcnNlZCIsIm5vcm1hbGl6ZWROYW1lIiwiaWdub3JlRHVwbGljYXRlT2YiLCJzcGxpdCIsImxpbmUiLCJ0cmltIiwic3Vic3RyIiwiY2FsbGJhY2siLCJhcnIiLCJnZXRQcm90b3R5cGVPZiIsImlzRnVuY3Rpb24iLCJvYmoiLCJsIiwiaGFzT3duUHJvcGVydHkiLCJjb25zdHJ1Y3RvciIsIkZvcm1EYXRhIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJwaXBlIiwiVVJMU2VhcmNoUGFyYW1zIiwicHJvZHVjdCIsInJlc3VsdCIsImFzc2lnblZhbHVlIiwiYSIsImIiLCJzdHIiLCJzdHJpcEJPTSIsImNvbnRlbnQiLCJjaGFyQ29kZUF0IiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIl9fcHJvdG9fXyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiaXNBYnNvbHV0ZSIsInNwbGljZU9uZSIsImxpc3QiLCJpbmRleCIsImsiLCJuIiwicG9wIiwidmFsdWVPZiIsInZhbHVlRXF1YWwiLCJldmVyeSIsIml0ZW0iLCJhVmFsdWUiLCJiVmFsdWUiLCJhZGRMZWFkaW5nU2xhc2giLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJwcmVmaXgiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJjcmVhdGVMb2NhdGlvbiIsInN0YXRlIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsInRvIiwiZnJvbSIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJsYXN0IiwidXAiLCJwYXJ0IiwibG9jYXRpb25zQXJlRXF1YWwiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiYWN0aW9uIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJfa2V5IiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJwcm9wcyIsInVhIiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl9yZWYiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwiTWF0aCIsInJhbmRvbSIsInRyYW5zaXRpb25NYW5hZ2VyIiwic2V0U3RhdGUiLCJuZXh0U3RhdGUiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJvayIsImZyb21Mb2NhdGlvbiIsInRvTG9jYXRpb24iLCJ0b0luZGV4IiwiYWxsS2V5cyIsImZyb21JbmRleCIsImRlbHRhIiwiZ28iLCJyZXZlcnRQb3AiLCJpbml0aWFsTG9jYXRpb24iLCJjcmVhdGVIcmVmIiwibGlzdGVuZXJDb3VudCIsImNoZWNrRE9NTGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzQmxvY2tlZCIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoQ2hhbmdlRXZlbnQkMSIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsInN0cmlwSGFzaCIsImdldEhhc2hQYXRoIiwic3Vic3RyaW5nIiwicmVwbGFjZUhhc2hQYXRoIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJiYXNlVGFnIiwicXVlcnlTZWxlY3RvciIsImdldEF0dHJpYnV0ZSIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtaW4iLCJtYXgiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiX3Byb3BzJGluaXRpYWxFbnRyaWVzIiwiaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiaW5pdGlhbEluZGV4IiwiZW50cmllcyIsIm1hcCIsImVudHJ5IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJzcGxpY2UiLCJjYW5HbyIsInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsInJlbmRlciIsIk1lbW8iLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidGVzdDEiLCJTdHJpbmciLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInMiLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwib3B0aW9ucyIsImdyb3VwcyIsImRlbGltaXRlciIsIm9wdGlvbmFsIiwicmVwZWF0IiwicGFydGlhbCIsImFzdGVyaXNrIiwicGF0dGVybiIsImF0dGFjaEtleXMiLCJyZWdleHBUb1JlZ2V4cCIsImZsYWdzIiwiYXJyYXlUb1JlZ2V4cCIsInRva2Vuc1RvUmVnRXhwIiwic3RyaW5nVG9SZWdleHAiLCJjb21waWxlIiwidG9rZW5zVG9GdW5jdGlvbiIsIlBBVEhfUkVHRVhQIiwicmVzIiwidG9rZW5zIiwiZGVmYXVsdERlbGltaXRlciIsImV4ZWMiLCJtIiwiZXNjYXBlZCIsIm9mZnNldCIsIm5leHQiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwibWF0Y2hlcyIsIm9wdHMiLCJwcmV0dHkiLCJzZWdtZW50IiwiaiIsInJlIiwic2Vuc2l0aXZlIiwic3RyaWN0IiwiZW5kIiwicm91dGUiLCJlbmRzV2l0aERlbGltaXRlciIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsInIiLCJ5IiwiYmEiLCJTZXQiLCJjYSIsImRhIiwiZWEiLCJhZGQiLCJmYSIsImhhIiwiaWEiLCJqYSIsImthIiwiQiIsImQiLCJmIiwiZyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwiRCIsIm9hIiwicGEiLCJxYSIsIm1hIiwiaXNOYU4iLCJuYSIsImxhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ4bGlua0hyZWYiLCJyYSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwic2EiLCJ0YSIsIndhIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJTeW1ib2wiLCJmb3IiLCJFIiwiTWEiLCJLYSIsIml0ZXJhdG9yIiwiTGEiLCJOYSIsIk9hIiwiUGEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsInNldCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJRYSIsInRhZyIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiZ2V0IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiZGIiLCJmYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJnYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwicGIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsInFiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJyYiIsInNiIiwidGIiLCJzdHlsZSIsInNldFByb3BlcnR5IiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJPYiIsIlBiIiwiUWIiLCJSYiIsIm9uRXJyb3IiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJaYiIsImFsdGVybmF0ZSIsInJldHVybiIsIiRiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJhYyIsImNjIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsImJjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIk1hcCIsIm9jIiwicGMiLCJxYyIsInJjIiwiYmxvY2tlZE9uIiwiZG9tRXZlbnROYW1lIiwiZXZlbnRTeXN0ZW1GbGFncyIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0Q29udGFpbmVycyIsInNjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwidGMiLCJ2YyIsIndjIiwibGFuZVByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiY29udGFpbmVySW5mbyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJDYyIsIkRjIiwiRWMiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJGYyIsIkdjIiwiSGMiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIlFjIiwidW5zdGFibGVfbm93IiwiRiIsIlJjIiwiVWMiLCJwZW5kaW5nTGFuZXMiLCJleHBpcmVkTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiVmMiLCJlbnRhbmdsZWRMYW5lcyIsImVudGFuZ2xlbWVudHMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiZXZlbnRUaW1lcyIsImNsejMyIiwiYmQiLCJjZCIsImxvZyIsIkxOMiIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsInVjIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50Iiwid2QiLCJ4ZCIsInlkIiwic2QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwibG9jYWxlIiwid2hpY2giLCJUZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlhkIiwiWmQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsIm1lIiwibmUiLCJvZSIsInBlIiwicWUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwibmV4dFNpYmxpbmciLCJNZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJOZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsIk9lIiwiY29udGVudEVkaXRhYmxlIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJaZSIsIlliIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJwYXNzaXZlIiwiTmIiLCJ4IiwidyIsInoiLCJ1IiwicSIsInQiLCJlZiIsImZmIiwicGFyZW50V2luZG93IiwiZ2YiLCJoZiIsIkoiLCJLIiwiUSIsIkwiLCJqZSIsImNoYXIiLCJrZSIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInNldFRpbWVvdXQiLCJwZiIsImNsZWFyVGltZW91dCIsInFmIiwicmYiLCJzZiIsInByZXZpb3VzU2libGluZyIsInRmIiwidmYiLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJIIiwiSSIsIkNmIiwiTSIsIk4iLCJEZiIsIkVmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsIk8iLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJfY3VycmVudFZhbHVlIiwic2ciLCJjaGlsZExhbmVzIiwidGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsInVnIiwidmciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsIkFnIiwiQmciLCJDZyIsIkEiLCJwIiwiQyIsIkRnIiwiRWciLCJGZyIsIkNvbXBvbmVudCIsInJlZnMiLCJHZyIsIktnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiSGciLCJJZyIsIkpnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJNZyIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJQZyIsIlFnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlJnIiwiU2ciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiVGciLCJVZyIsIm1vZGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsImRvbmUiLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwicXVldWUiLCJJaCIsIkpoIiwiS2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJMaCIsIk1oIiwiX2dldFZlcnNpb24iLCJfc291cmNlIiwibXV0YWJsZVJlYWRMYW5lcyIsIk5oIiwiVSIsInVzZVN0YXRlIiwiZ2V0U25hcHNob3QiLCJzdWJzY3JpYmUiLCJ1c2VFZmZlY3QiLCJzZXRTbmFwc2hvdCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiZGVzdHJveSIsImRlcHMiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlRGVidWdWYWx1ZSIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJ1ZiIsImVpIiwiUmVhY3RDdXJyZW50T3duZXIiLCJmaSIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJ0YWlsIiwidGFpbE1vZGUiLCJBaSIsIkZpIiwiR2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJWIiwiSGkiLCJJaSIsIlciLCJKaSIsIktpIiwiTGkiLCJNaSIsIk5pIiwiY29uc29sZSIsIk9pIiwiV2Vha01hcCIsIlBpIiwiUWkiLCJSaSIsIlNpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJUaSIsImNvbXBvbmVudFN0YWNrIiwiVWkiLCJXZWFrU2V0IiwiVmkiLCJXaSIsIlhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJZaSIsIlppIiwiJGkiLCJmb2N1cyIsImFqIiwiZGlzcGxheSIsImJqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJpaiIsImpqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJjZWlsIiwib2oiLCJwaiIsIlgiLCJZIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwiSW5maW5pdHkiLCJ3aiIsImNrIiwiWiIsInhqIiwieWoiLCJ6aiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJJaiIsIkpqIiwiU2MiLCJLaiIsIkxqIiwiTWoiLCJjYWxsYmFja05vZGUiLCJleHBpcmF0aW9uVGltZXMiLCJjYWxsYmFja1ByaW9yaXR5IiwiVGMiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsInRpbWVvdXRIYW5kbGUiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJvbkNvbW1pdEZpYmVyUm9vdCIsImZrIiwiZ2siLCJpayIsImlzUmVhY3RDb21wb25lbnQiLCJwZW5kaW5nQ2hpbGRyZW4iLCJqayIsIm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEiLCJsayIsIm1rIiwibmsiLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJyayIsInRrIiwiaGFzQXR0cmlidXRlIiwic2siLCJYaiIsImhrIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiVmoiLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwieGsiLCJyZW5kZXJlckNvbmZpZyIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoIiwib3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoIiwib3ZlcnJpZGVQcm9wcyIsIm92ZXJyaWRlUHJvcHNEZWxldGVQYXRoIiwib3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGgiLCJzZXRTdXNwZW5zZUhhbmRsZXIiLCJzY2hlZHVsZVVwZGF0ZSIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2giLCJzY2hlZHVsZVJlZnJlc2giLCJzY2hlZHVsZVJvb3QiLCJzZXRSZWZyZXNoSGFuZGxlciIsImdldEN1cnJlbnRGaWJlciIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsInlrIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJmaW5kRE9NTm9kZSIsImNoZWNrRENFIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJvbiIsImhhbmRsZXIiLCJvZmYiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIlByb3ZpZGVyIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwiQ29uc3VtZXIiLCJfQ29tcG9uZW50MiIsIl90aGlzMiIsIm9uVXBkYXRlIiwiX3Byb3RvMiIsImhpc3RvcnlDb250ZXh0IiwiY3JlYXRlTmFtZWRDb250ZXh0IiwiY3JlYXRlTmFtZWRDb250ZXh0JDEiLCJSb3V0ZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiX2lzTW91bnRlZCIsIl9wZW5kaW5nTG9jYXRpb24iLCJzdGF0aWNDb250ZXh0IiwiY29tcHV0ZVJvb3RNYXRjaCIsImlzRXhhY3QiLCJMaWZlY3ljbGUiLCJvbk1vdW50IiwicHJldlByb3BzIiwib25Vbm1vdW50IiwiY2FjaGUiLCJjYWNoZUNvdW50IiwiZ2VuZXJhdGVQYXRoIiwiZ2VuZXJhdG9yIiwiY29tcGlsZVBhdGgiLCJSZWRpcmVjdCIsImNvbXB1dGVkTWF0Y2giLCJfcmVmJHB1c2giLCJzZWxmIiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwidmFsdWVzIiwibWVtbyIsIlJvdXRlIiwiY29udGV4dCQxIiwiX3RoaXMkcHJvcHMiLCJTd2l0Y2giLCJ1c2VQYXJhbXMiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJwZXJmb3JtYW5jZSIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZsb29yIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwic29ydEluZGV4Iiwic3RhcnRUaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiY29uZGl0aW9uIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwibG9hZGVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwibyIsImNodW5rSWQiLCJGdW5jdGlvbiIsInNjcmlwdCIsIm5lZWRBdHRhY2giLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJjaGFyc2V0Iiwic3JjIiwib25TY3JpcHRDb21wbGV0ZSIsInByZXYiLCJvbmxvYWQiLCJkb25lRm5zIiwiaGVhZCIsInRvU3RyaW5nVGFnIiwibm1kIiwicGF0aHMiLCJpbnN0YWxsZWRDaHVua3MiLCIxNDMiLCJpbnN0YWxsZWRDaHVua0RhdGEiLCJlcnJvclR5cGUiLCJyZWFsU3JjIiwiY2h1bmtMb2FkaW5nR2xvYmFsIiwicGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24iLCJjaHVua0lkcyIsIm1vcmVNb2R1bGVzIiwicnVudGltZSIsInJlc29sdmVzIiwiQnJvd3NlclJvdXRlciIsInJlc29sdmVUb0xvY2F0aW9uIiwibm9ybWFsaXplVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiTGlua0FuY2hvciIsImZvcndhcmRlZFJlZiIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJfb25DbGljayIsInJlc3QiLCJleCIsImlzTW9kaWZpZWRFdmVudCIsIkxpbmsiLCJfcmVmMiIsIl9yZWYyJGNvbXBvbmVudCIsImZvcndhcmRSZWZTaGltJDEiLCJmb3J3YXJkUmVmJDEiLCJfcmVmJGFyaWFDdXJyZW50IiwiYXJpYUN1cnJlbnQiLCJfcmVmJGFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiY2xhc3NOYW1lUHJvcCIsImNsYXNzTmFtZSIsImlzQWN0aXZlUHJvcCIsImxvY2F0aW9uUHJvcCIsInN0eWxlUHJvcCIsImVzY2FwZWRQYXRoIiwiY2xhc3NuYW1lcyIsImpvaW5DbGFzc25hbWVzIiwiQ29udGV4dCIsIkxPQURBQkxFX1NIQVJFRCIsIlNUQVRVU19QRU5ESU5HIiwiU1RBVFVTX1JFSkVDVEVEIiwiaWRlbnRpdHkiLCJjcmVhdGVMb2FkYWJsZSIsIl9yZWYkZGVmYXVsdFJlc29sdmVDbyIsImRlZmF1bHRSZXNvbHZlQ29tcG9uZW50Iiwib25Mb2FkIiwibG9hZGFibGUiLCJsb2FkYWJsZUNvbnN0cnVjdG9yIiwiY3RvciIsInJlcXVpcmVBc3luYyIsImNodW5rTmFtZSIsInJlc29sdmVDb25zdHJ1Y3RvciIsIl9nZXRDYWNoZUtleSIsIkxvYWRhYmxlIiwicmVzb2x2ZUNvbXBvbmVudCIsInByZWxvYWQiLCJJbm5lckxvYWRhYmxlIiwibG9hZGluZyIsImZyYW1lc1RvUG9wIiwiaW52YXJpYW50IiwiX19jaHVua0V4dHJhY3RvciIsInJlcXVpcmVTeW5jIiwic3NyIiwibG9hZFN5bmMiLCJhZGRDaHVuayIsIlJlZmVyZW5jZUVycm9yIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsImlzUmVhZHkiLCJtb3VudGVkIiwiY2FjaGVkUHJvbWlzZSIsImdldENhY2hlIiwic2V0Q2FjaGUiLCJsb2FkQXN5bmMiLCJwcmV2U3RhdGUiLCJzYWZlU2V0U3RhdGUiLCJnZXRDYWNoZUtleSIsInRyaWdnZXJPbkxvYWQiLCJfdGhpczMiLCJyZXNvbHZlQXN5bmMiLCJsb2FkZWRNb2R1bGUiLCJfdGhpczQiLCJfdGhpcyRwcm9wczIiLCJwcm9wRmFsbGJhY2siLCJfdGhpcyRzdGF0ZSIsInN1c3BlbnNlIiwiRW5oYW5jZWRJbm5lckxvYWRhYmxlIiwiZXh0cmFjdG9yIiwibG9hZCIsIl9jcmVhdGVMb2FkYWJsZSIsIl9jcmVhdGVMb2FkYWJsZSQxIiwibG9hZGFibGUkMSIsImxhenkkMSIsImxvYWRhYmxlJDIiLCJsaWIiLCJBdXRoIiwiQm9hcmQiLCJNYWluIiwiTWFuYWdlIl0sIm1hcHBpbmdzIjoiO1VB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SUFBTSwwRUFDdkJrRCxFQUFPbEQsR0FBUyxJQUFNLGlFQUN0Qm1ELEVBQVNuRCxHQUFTLElBQU0sMEVBYzlCLEVBWmdCLElBQ2YsZ0JBQUMsS0FBRCxLQUNDLGdCQUFDLEtBQUQsQ0FBTzF3QyxPQUFLLEVBQUNuVyxLQUFLLEtBQ2pCLGdCQUFDLEtBQUQsQ0FBVXFHLEdBQUcsV0FFZCxnQkFBQyxLQUFELENBQU9yRyxLQUFLLFFBQVEyUCxVQUFXazZDLElBQy9CLGdCQUFDLEtBQUQsQ0FBTzdwRCxLQUFLLFFBQVEyUCxVQUFXbzZDLElBQy9CLGdCQUFDLEtBQUQsQ0FBTy9wRCxLQUFLLGdCQUFnQjJQLFVBQVdtNkMsSUFDdkMsZ0JBQUMsS0FBRCxDQUFPOXBELEtBQUssVUFBVTJQLFVBQVdxNkMsS0NWbkMzeEQsOEJBQWlDLEVBQ2pDQSxxQkFBaUUsMEJBQ2pFQSxvREFBd0QsS0FFeER5WCxZQUNDLGdCQUFDdzBDLEVBQUQsS0FDQyxnQkFBQyxFQUFELE9BRUQ5akQsU0FBU3lNLGNBQWMsVSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5Qcm9ncmVzcyA9IHt9O1xudmFyIGRhdGFXZWJwYWNrUHJlZml4ID0gXCI0MmJvYXJkLWZyb250OlwiO1xuLy8gbG9hZFNjcmlwdCBmdW5jdGlvbiB0byBsb2FkIGEgc2NyaXB0IHZpYSBzY3JpcHQgdGFnXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmwgPSAodXJsLCBkb25lLCBrZXkpID0+IHtcblx0aWYoaW5Qcm9ncmVzc1t1cmxdKSB7IGluUHJvZ3Jlc3NbdXJsXS5wdXNoKGRvbmUpOyByZXR1cm47IH1cblx0dmFyIHNjcmlwdCwgbmVlZEF0dGFjaDtcblx0aWYoa2V5ICE9PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzY3JpcHRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgcyA9IHNjcmlwdHNbaV07XG5cdFx0XHRpZihzLmdldEF0dHJpYnV0ZShcInNyY1wiKSA9PSB1cmwgfHwgcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIikgPT0gZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpIHsgc2NyaXB0ID0gczsgYnJlYWs7IH1cblx0XHR9XG5cdH1cblx0aWYoIXNjcmlwdCkge1xuXHRcdG5lZWRBdHRhY2ggPSB0cnVlO1xuXHRcdHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuXG5cdFx0c2NyaXB0LmNoYXJzZXQgPSAndXRmLTgnO1xuXHRcdHNjcmlwdC50aW1lb3V0ID0gMTIwO1xuXHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKSB7XG5cdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgX193ZWJwYWNrX3JlcXVpcmVfXy5uYyk7XG5cdFx0fVxuXHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXdlYnBhY2tcIiwgZGF0YVdlYnBhY2tQcmVmaXggKyBrZXkpO1xuXHRcdHNjcmlwdC5zcmMgPSB1cmw7XG5cdH1cblx0aW5Qcm9ncmVzc1t1cmxdID0gW2RvbmVdO1xuXHR2YXIgb25TY3JpcHRDb21wbGV0ZSA9IChwcmV2LCBldmVudCkgPT4ge1xuXHRcdC8vIGF2b2lkIG1lbSBsZWFrcyBpbiBJRS5cblx0XHRzY3JpcHQub25lcnJvciA9IHNjcmlwdC5vbmxvYWQgPSBudWxsO1xuXHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcblx0XHR2YXIgZG9uZUZucyA9IGluUHJvZ3Jlc3NbdXJsXTtcblx0XHRkZWxldGUgaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdHNjcmlwdC5wYXJlbnROb2RlICYmIHNjcmlwdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG5cdFx0ZG9uZUZucyAmJiBkb25lRm5zLmZvckVhY2goKGZuKSA9PiBmbihldmVudCkpO1xuXHRcdGlmKHByZXYpIHJldHVybiBwcmV2KGV2ZW50KTtcblx0fVxuXHQ7XG5cdHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgdW5kZWZpbmVkLCB7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSksIDEyMDAwMCk7XG5cdHNjcmlwdC5vbmVycm9yID0gb25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHNjcmlwdC5vbmVycm9yKTtcblx0c2NyaXB0Lm9ubG9hZCA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25sb2FkKTtcblx0bmVlZEF0dGFjaCAmJiBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XG59OyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgPyB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoY29uZmlnLmF1dGgucGFzc3dvcmQpKSA6ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICAvLyBMaXN0ZW4gZm9yIHJlYWR5IHN0YXRlXG4gICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSByZXF1ZXN0IGVycm9yZWQgb3V0IGFuZCB3ZSBkaWRuJ3QgZ2V0IGEgcmVzcG9uc2UsIHRoaXMgd2lsbCBiZVxuICAgICAgLy8gaGFuZGxlZCBieSBvbmVycm9yIGluc3RlYWRcbiAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAvLyB3aWxsIHJldHVybiBzdGF0dXMgYXMgMCBldmVuIHRob3VnaCBpdCdzIGEgc3VjY2Vzc2Z1bCByZXF1ZXN0XG4gICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgIShyZXF1ZXN0LnJlc3BvbnNlVVJMICYmIHJlcXVlc3QucmVzcG9uc2VVUkwuaW5kZXhPZignZmlsZTonKSA9PT0gMCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIHRoZSByZXNwb25zZVxuICAgICAgdmFyIHJlc3BvbnNlSGVhZGVycyA9ICdnZXRBbGxSZXNwb25zZUhlYWRlcnMnIGluIHJlcXVlc3QgPyBwYXJzZUhlYWRlcnMocmVxdWVzdC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkgOiBudWxsO1xuICAgICAgdmFyIHJlc3BvbnNlRGF0YSA9ICFjb25maWcucmVzcG9uc2VUeXBlIHx8IGNvbmZpZy5yZXNwb25zZVR5cGUgPT09ICd0ZXh0JyA/IHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgY29uZmlnLCAnRUNPTk5BQk9SVEVEJywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcignTmV0d29yayBFcnJvcicsIGNvbmZpZywgbnVsbCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICB2YXIgdGltZW91dEVycm9yTWVzc2FnZSA9ICd0aW1lb3V0IG9mICcgKyBjb25maWcudGltZW91dCArICdtcyBleGNlZWRlZCc7XG4gICAgICBpZiAoY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgdGltZW91dEVycm9yTWVzc2FnZSA9IGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlO1xuICAgICAgfVxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKHRpbWVvdXRFcnJvck1lc3NhZ2UsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihmdWxsUGF0aCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gISFjb25maWcud2l0aENyZWRlbnRpYWxzO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSBjb25maWcucmVzcG9uc2VUeXBlO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBFeHBlY3RlZCBET01FeGNlcHRpb24gdGhyb3duIGJ5IGJyb3dzZXJzIG5vdCBjb21wYXRpYmxlIFhNTEh0dHBSZXF1ZXN0IExldmVsIDIuXG4gICAgICAgIC8vIEJ1dCwgdGhpcyBjYW4gYmUgc3VwcHJlc3NlZCBmb3IgJ2pzb24nIHR5cGUgYXMgaXQgY2FuIGJlIHBhcnNlZCBieSBkZWZhdWx0ICd0cmFuc2Zvcm1SZXNwb25zZScgZnVuY3Rpb24uXG4gICAgICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlICE9PSAnanNvbicpIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgICAgLy8gSGFuZGxlIGNhbmNlbGxhdGlvblxuICAgICAgY29uZmlnLmNhbmNlbFRva2VuLnByb21pc2UudGhlbihmdW5jdGlvbiBvbkNhbmNlbGVkKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXF1ZXN0LmFib3J0KCk7XG4gICAgICAgIHJlamVjdChjYW5jZWwpO1xuICAgICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFyZXF1ZXN0RGF0YSkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcbnZhciBBeGlvcyA9IHJlcXVpcmUoJy4vY29yZS9BeGlvcycpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9jb3JlL21lcmdlQ29uZmlnJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqIEByZXR1cm4ge0F4aW9zfSBBIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICovXG5mdW5jdGlvbiBjcmVhdGVJbnN0YW5jZShkZWZhdWx0Q29uZmlnKSB7XG4gIHZhciBjb250ZXh0ID0gbmV3IEF4aW9zKGRlZmF1bHRDb25maWcpO1xuICB2YXIgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBjb250ZXh0IHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgY29udGV4dCk7XG5cbiAgcmV0dXJuIGluc3RhbmNlO1xufVxuXG4vLyBDcmVhdGUgdGhlIGRlZmF1bHQgaW5zdGFuY2UgdG8gYmUgZXhwb3J0ZWRcbnZhciBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG5heGlvcy5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaW5zdGFuY2VDb25maWcpIHtcbiAgcmV0dXJuIGNyZWF0ZUluc3RhbmNlKG1lcmdlQ29uZmlnKGF4aW9zLmRlZmF1bHRzLCBpbnN0YW5jZUNvbmZpZykpO1xufTtcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWwnKTtcbmF4aW9zLkNhbmNlbFRva2VuID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsVG9rZW4nKTtcbmF4aW9zLmlzQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvaXNDYW5jZWwnKTtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcbmF4aW9zLnNwcmVhZCA9IHJlcXVpcmUoJy4vaGVscGVycy9zcHJlYWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBheGlvcztcblxuLy8gQWxsb3cgdXNlIG9mIGRlZmF1bHQgaW1wb3J0IHN5bnRheCBpbiBUeXBlU2NyaXB0XG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gYXhpb3M7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4vQ2FuY2VsJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsVG9rZW5gIGlzIGFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlcXVlc3QgY2FuY2VsbGF0aW9uIG9mIGFuIG9wZXJhdGlvbi5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsVG9rZW4oZXhlY3V0b3IpIHtcbiAgaWYgKHR5cGVvZiBleGVjdXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciByZXNvbHZlUHJvbWlzZTtcbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICByZXNvbHZlUHJvbWlzZSA9IHJlc29sdmU7XG4gIH0pO1xuXG4gIHZhciB0b2tlbiA9IHRoaXM7XG4gIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlKSB7XG4gICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbChtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gKi9cbkNhbmNlbFRva2VuLnNvdXJjZSA9IGZ1bmN0aW9uIHNvdXJjZSgpIHtcbiAgdmFyIGNhbmNlbDtcbiAgdmFyIHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICBjYW5jZWwgPSBjO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogdG9rZW4sXG4gICAgY2FuY2VsOiBjYW5jZWxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsVG9rZW47XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNDYW5jZWwodmFsdWUpIHtcbiAgcmV0dXJuICEhKHZhbHVlICYmIHZhbHVlLl9fQ0FOQ0VMX18pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIGJ1aWxkVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9idWlsZFVSTCcpO1xudmFyIEludGVyY2VwdG9yTWFuYWdlciA9IHJlcXVpcmUoJy4vSW50ZXJjZXB0b3JNYW5hZ2VyJyk7XG52YXIgZGlzcGF0Y2hSZXF1ZXN0ID0gcmVxdWlyZSgnLi9kaXNwYXRjaFJlcXVlc3QnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vbWVyZ2VDb25maWcnKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAvLyBBbGxvdyBmb3IgYXhpb3MoJ2V4YW1wbGUvdXJsJ1ssIGNvbmZpZ10pIGEgbGEgZmV0Y2ggQVBJXG4gIGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IGFyZ3VtZW50c1sxXSB8fCB7fTtcbiAgICBjb25maWcudXJsID0gYXJndW1lbnRzWzBdO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgfVxuXG4gIGNvbmZpZyA9IG1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG5cbiAgLy8gU2V0IGNvbmZpZy5tZXRob2RcbiAgaWYgKGNvbmZpZy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gY29uZmlnLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2UgaWYgKHRoaXMuZGVmYXVsdHMubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IHRoaXMuZGVmYXVsdHMubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnLm1ldGhvZCA9ICdnZXQnO1xuICB9XG5cbiAgLy8gSG9vayB1cCBpbnRlcmNlcHRvcnMgbWlkZGxld2FyZVxuICB2YXIgY2hhaW4gPSBbZGlzcGF0Y2hSZXF1ZXN0LCB1bmRlZmluZWRdO1xuICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZShjb25maWcpO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnVuc2hpZnQoaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4ucHVzaChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4oY2hhaW4uc2hpZnQoKSwgY2hhaW4uc2hpZnQoKSk7XG4gIH1cblxuICByZXR1cm4gcHJvbWlzZTtcbn07XG5cbkF4aW9zLnByb3RvdHlwZS5nZXRVcmkgPSBmdW5jdGlvbiBnZXRVcmkoY29uZmlnKSB7XG4gIGNvbmZpZyA9IG1lcmdlQ29uZmlnKHRoaXMuZGVmYXVsdHMsIGNvbmZpZyk7XG4gIHJldHVybiBidWlsZFVSTChjb25maWcudXJsLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplcikucmVwbGFjZSgvXlxcPy8sICcnKTtcbn07XG5cbi8vIFByb3ZpZGUgYWxpYXNlcyBmb3Igc3VwcG9ydGVkIHJlcXVlc3QgbWV0aG9kc1xudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCcsICdvcHRpb25zJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IChjb25maWcgfHwge30pLmRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIEludGVyY2VwdG9yTWFuYWdlcigpIHtcbiAgdGhpcy5oYW5kbGVycyA9IFtdO1xufVxuXG4vKipcbiAqIEFkZCBhIG5ldyBpbnRlcmNlcHRvciB0byB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3RlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGByZWplY3RgIGZvciBhIGBQcm9taXNlYFxuICpcbiAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbiB1c2UoZnVsZmlsbGVkLCByZWplY3RlZCkge1xuICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgIGZ1bGZpbGxlZDogZnVsZmlsbGVkLFxuICAgIHJlamVjdGVkOiByZWplY3RlZFxuICB9KTtcbiAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmVqZWN0ID0gZnVuY3Rpb24gZWplY3QoaWQpIHtcbiAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICB9XG59O1xuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbGwgdGhlIHJlZ2lzdGVyZWQgaW50ZXJjZXB0b3JzXG4gKlxuICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAqIGludGVyY2VwdG9ycyB0aGF0IG1heSBoYXZlIGJlY29tZSBgbnVsbGAgY2FsbGluZyBgZWplY3RgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgIGZuKGgpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEludGVyY2VwdG9yTWFuYWdlcjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGlzQWJzb2x1dGVVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwnKTtcbnZhciBjb21iaW5lVVJMcyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvY29tYmluZVVSTHMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIGJhc2VVUkwgd2l0aCB0aGUgcmVxdWVzdGVkVVJMLFxuICogb25seSB3aGVuIHRoZSByZXF1ZXN0ZWRVUkwgaXMgbm90IGFscmVhZHkgYW4gYWJzb2x1dGUgVVJMLlxuICogSWYgdGhlIHJlcXVlc3RVUkwgaXMgYWJzb2x1dGUsIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgcmVxdWVzdGVkVVJMIHVudG91Y2hlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZXF1ZXN0ZWRVUkwgQWJzb2x1dGUgb3IgcmVsYXRpdmUgVVJMIHRvIGNvbWJpbmVcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBmdWxsIHBhdGhcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZEZ1bGxQYXRoKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCkge1xuICBpZiAoYmFzZVVSTCAmJiAhaXNBYnNvbHV0ZVVSTChyZXF1ZXN0ZWRVUkwpKSB7XG4gICAgcmV0dXJuIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCk7XG4gIH1cbiAgcmV0dXJuIHJlcXVlc3RlZFVSTDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgdHJhbnNmb3JtRGF0YSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtRGF0YScpO1xudmFyIGlzQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL2lzQ2FuY2VsJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbmZ1bmN0aW9uIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKSB7XG4gIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICBjb25maWcuY2FuY2VsVG9rZW4udGhyb3dJZlJlcXVlc3RlZCgpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWcpIHtcbiAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gIC8vIEVuc3VyZSBoZWFkZXJzIGV4aXN0XG4gIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgY29uZmlnLmRhdGEsXG4gICAgY29uZmlnLmhlYWRlcnMsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICAvLyBGbGF0dGVuIGhlYWRlcnNcbiAgY29uZmlnLmhlYWRlcnMgPSB1dGlscy5tZXJnZShcbiAgICBjb25maWcuaGVhZGVycy5jb21tb24gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNbY29uZmlnLm1ldGhvZF0gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNcbiAgKTtcblxuICB1dGlscy5mb3JFYWNoKFxuICAgIFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJywgJ2NvbW1vbiddLFxuICAgIGZ1bmN0aW9uIGNsZWFuSGVhZGVyQ29uZmlnKG1ldGhvZCkge1xuICAgICAgZGVsZXRlIGNvbmZpZy5oZWFkZXJzW21ldGhvZF07XG4gICAgfVxuICApO1xuXG4gIHZhciBhZGFwdGVyID0gY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcjtcblxuICByZXR1cm4gYWRhcHRlcihjb25maWcpLnRoZW4oZnVuY3Rpb24gb25BZGFwdGVyUmVzb2x1dGlvbihyZXNwb25zZSkge1xuICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgcmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgICByZXNwb25zZS5kYXRhLFxuICAgICAgcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0sIGZ1bmN0aW9uIG9uQWRhcHRlclJlamVjdGlvbihyZWFzb24pIHtcbiAgICBpZiAoIWlzQ2FuY2VsKHJlYXNvbikpIHtcbiAgICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICAgIGlmIChyZWFzb24gJiYgcmVhc29uLnJlc3BvbnNlKSB7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSxcbiAgICAgICAgICByZWFzb24ucmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVhc29uKTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVwZGF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgY29uZmlnLCBlcnJvciBjb2RlLCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtFcnJvcn0gZXJyb3IgVGhlIGVycm9yIHRvIHVwZGF0ZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIGVycm9yLmNvbmZpZyA9IGNvbmZpZztcbiAgaWYgKGNvZGUpIHtcbiAgICBlcnJvci5jb2RlID0gY29kZTtcbiAgfVxuXG4gIGVycm9yLnJlcXVlc3QgPSByZXF1ZXN0O1xuICBlcnJvci5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICBlcnJvci5pc0F4aW9zRXJyb3IgPSB0cnVlO1xuXG4gIGVycm9yLnRvSlNPTiA9IGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZVxuICAgIH07XG4gIH07XG4gIHJldHVybiBlcnJvcjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbi8qKlxuICogQ29uZmlnLXNwZWNpZmljIG1lcmdlLWZ1bmN0aW9uIHdoaWNoIGNyZWF0ZXMgYSBuZXcgY29uZmlnLW9iamVjdFxuICogYnkgbWVyZ2luZyB0d28gY29uZmlndXJhdGlvbiBvYmplY3RzIHRvZ2V0aGVyLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcxXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMlxuICogQHJldHVybnMge09iamVjdH0gTmV3IG9iamVjdCByZXN1bHRpbmcgZnJvbSBtZXJnaW5nIGNvbmZpZzIgdG8gY29uZmlnMVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKGNvbmZpZzEsIGNvbmZpZzIpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIGNvbmZpZzIgPSBjb25maWcyIHx8IHt9O1xuICB2YXIgY29uZmlnID0ge307XG5cbiAgdmFyIHZhbHVlRnJvbUNvbmZpZzJLZXlzID0gWyd1cmwnLCAnbWV0aG9kJywgJ2RhdGEnXTtcbiAgdmFyIG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzID0gWydoZWFkZXJzJywgJ2F1dGgnLCAncHJveHknLCAncGFyYW1zJ107XG4gIHZhciBkZWZhdWx0VG9Db25maWcyS2V5cyA9IFtcbiAgICAnYmFzZVVSTCcsICd0cmFuc2Zvcm1SZXF1ZXN0JywgJ3RyYW5zZm9ybVJlc3BvbnNlJywgJ3BhcmFtc1NlcmlhbGl6ZXInLFxuICAgICd0aW1lb3V0JywgJ3RpbWVvdXRNZXNzYWdlJywgJ3dpdGhDcmVkZW50aWFscycsICdhZGFwdGVyJywgJ3Jlc3BvbnNlVHlwZScsICd4c3JmQ29va2llTmFtZScsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJywgJ29uVXBsb2FkUHJvZ3Jlc3MnLCAnb25Eb3dubG9hZFByb2dyZXNzJywgJ2RlY29tcHJlc3MnLFxuICAgICdtYXhDb250ZW50TGVuZ3RoJywgJ21heEJvZHlMZW5ndGgnLCAnbWF4UmVkaXJlY3RzJywgJ3RyYW5zcG9ydCcsICdodHRwQWdlbnQnLFxuICAgICdodHRwc0FnZW50JywgJ2NhbmNlbFRva2VuJywgJ3NvY2tldFBhdGgnLCAncmVzcG9uc2VFbmNvZGluZydcbiAgXTtcbiAgdmFyIGRpcmVjdE1lcmdlS2V5cyA9IFsndmFsaWRhdGVTdGF0dXMnXTtcblxuICBmdW5jdGlvbiBnZXRNZXJnZWRWYWx1ZSh0YXJnZXQsIHNvdXJjZSkge1xuICAgIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHRhcmdldCkgJiYgdXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2UodGFyZ2V0LCBzb3VyY2UpO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2Uoe30sIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiBzb3VyY2Uuc2xpY2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIHV0aWxzLmZvckVhY2godmFsdWVGcm9tQ29uZmlnMktleXMsIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzLCBtZXJnZURlZXBQcm9wZXJ0aWVzKTtcblxuICB1dGlscy5mb3JFYWNoKGRlZmF1bHRUb0NvbmZpZzJLZXlzLCBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdXRpbHMuZm9yRWFjaChkaXJlY3RNZXJnZUtleXMsIGZ1bmN0aW9uIG1lcmdlKHByb3ApIHtcbiAgICBpZiAocHJvcCBpbiBjb25maWcyKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHByb3AgaW4gY29uZmlnMSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHZhciBheGlvc0tleXMgPSB2YWx1ZUZyb21Db25maWcyS2V5c1xuICAgIC5jb25jYXQobWVyZ2VEZWVwUHJvcGVydGllc0tleXMpXG4gICAgLmNvbmNhdChkZWZhdWx0VG9Db25maWcyS2V5cylcbiAgICAuY29uY2F0KGRpcmVjdE1lcmdlS2V5cyk7XG5cbiAgdmFyIG90aGVyS2V5cyA9IE9iamVjdFxuICAgIC5rZXlzKGNvbmZpZzEpXG4gICAgLmNvbmNhdChPYmplY3Qua2V5cyhjb25maWcyKSlcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIGZpbHRlckF4aW9zS2V5cyhrZXkpIHtcbiAgICAgIHJldHVybiBheGlvc0tleXMuaW5kZXhPZihrZXkpID09PSAtMTtcbiAgICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG90aGVyS2V5cywgbWVyZ2VEZWVwUHJvcGVydGllcyk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4vY3JlYXRlRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGRhdGEgVGhlIGRhdGEgdG8gYmUgdHJhbnNmb3JtZWRcbiAqIEBwYXJhbSB7QXJyYXl9IGhlYWRlcnMgVGhlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShkYXRhLCBoZWFkZXJzLCBmbnMpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIHV0aWxzLmZvckVhY2goZm5zLCBmdW5jdGlvbiB0cmFuc2Zvcm0oZm4pIHtcbiAgICBkYXRhID0gZm4oZGF0YSwgaGVhZGVycyk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRhO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xuXG52YXIgREVGQVVMVF9DT05URU5UX1RZUEUgPSB7XG4gICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuZnVuY3Rpb24gc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsIHZhbHVlKSB7XG4gIGlmICghdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVycykgJiYgdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVyc1snQ29udGVudC1UeXBlJ10pKSB7XG4gICAgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSB2YWx1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0QWRhcHRlcigpIHtcbiAgdmFyIGFkYXB0ZXI7XG4gIGlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gRm9yIGJyb3dzZXJzIHVzZSBYSFIgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL3hocicpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocHJvY2VzcykgPT09ICdbb2JqZWN0IHByb2Nlc3NdJykge1xuICAgIC8vIEZvciBub2RlIHVzZSBIVFRQIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy9odHRwJyk7XG4gIH1cbiAgcmV0dXJuIGFkYXB0ZXI7XG59XG5cbnZhciBkZWZhdWx0cyA9IHtcbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQWNjZXB0Jyk7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQXJyYXlCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc1N0cmVhbShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNGaWxlKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0Jsb2IoZGF0YSlcbiAgICApIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNBcnJheUJ1ZmZlclZpZXcoZGF0YSkpIHtcbiAgICAgIHJldHVybiBkYXRhLmJ1ZmZlcjtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNPYmplY3QoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICB0cmFuc2Zvcm1SZXNwb25zZTogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpIHtcbiAgICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0cnkge1xuICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgLyogSWdub3JlICovIH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIC8qKlxuICAgKiBBIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIHRvIGFib3J0IGEgcmVxdWVzdC4gSWYgc2V0IHRvIDAgKGRlZmF1bHQpIGFcbiAgICogdGltZW91dCBpcyBub3QgY3JlYXRlZC5cbiAgICovXG4gIHRpbWVvdXQ6IDAsXG5cbiAgeHNyZkNvb2tpZU5hbWU6ICdYU1JGLVRPS0VOJyxcbiAgeHNyZkhlYWRlck5hbWU6ICdYLVhTUkYtVE9LRU4nLFxuXG4gIG1heENvbnRlbnRMZW5ndGg6IC0xLFxuICBtYXhCb2R5TGVuZ3RoOiAtMSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9XG59O1xuXG5kZWZhdWx0cy5oZWFkZXJzID0ge1xuICBjb21tb246IHtcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKidcbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBiaW5kKGZuLCB0aGlzQXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKCkge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBlbmNvZGUodmFsKSB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodmFsKS5cbiAgICByZXBsYWNlKC8lM0EvZ2ksICc6JykuXG4gICAgcmVwbGFjZSgvJTI0L2csICckJykuXG4gICAgcmVwbGFjZSgvJTJDL2dpLCAnLCcpLlxuICAgIHJlcGxhY2UoLyUyMC9nLCAnKycpLlxuICAgIHJlcGxhY2UoLyU1Qi9naSwgJ1snKS5cbiAgICByZXBsYWNlKC8lNUQvZ2ksICddJyk7XG59XG5cbi8qKlxuICogQnVpbGQgYSBVUkwgYnkgYXBwZW5kaW5nIHBhcmFtcyB0byB0aGUgZW5kXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgYmFzZSBvZiB0aGUgdXJsIChlLmcuLCBodHRwOi8vd3d3Lmdvb2dsZS5jb20pXG4gKiBAcGFyYW0ge29iamVjdH0gW3BhcmFtc10gVGhlIHBhcmFtcyB0byBiZSBhcHBlbmRlZFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGZvcm1hdHRlZCB1cmxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgcGFyYW1zU2VyaWFsaXplcikge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIGlmIChwYXJhbXNTZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKTtcbiAgfSBlbHNlIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtcy50b1N0cmluZygpO1xuICB9IGVsc2Uge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuXG4gICAgdXRpbHMuZm9yRWFjaChwYXJhbXMsIGZ1bmN0aW9uIHNlcmlhbGl6ZSh2YWwsIGtleSkge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh1dGlscy5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAga2V5ID0ga2V5ICsgJ1tdJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbCA9IFt2YWxdO1xuICAgICAgfVxuXG4gICAgICB1dGlscy5mb3JFYWNoKHZhbCwgZnVuY3Rpb24gcGFyc2VWYWx1ZSh2KSB7XG4gICAgICAgIGlmICh1dGlscy5pc0RhdGUodikpIHtcbiAgICAgICAgICB2ID0gdi50b0lTT1N0cmluZygpO1xuICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KHYpKSB7XG4gICAgICAgICAgdiA9IEpTT04uc3RyaW5naWZ5KHYpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnRzLnB1c2goZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodikpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFydHMuam9pbignJicpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICB2YXIgaGFzaG1hcmtJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuXG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgICAgdmFyIGNvb2tpZSA9IFtdO1xuICAgICAgICAgIGNvb2tpZS5wdXNoKG5hbWUgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcblxuICAgICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2V4cGlyZXM9JyArIG5ldyBEYXRlKGV4cGlyZXMpLnRvR01UU3RyaW5nKCkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3BhdGg9JyArIHBhdGgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZG9tYWluPScgKyBkb21haW4pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdzZWN1cmUnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKG5hbWUpIHtcbiAgICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICAgIHJldHVybiAobWF0Y2ggPyBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbM10pIDogbnVsbCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICAgIHRoaXMud3JpdGUobmFtZSwgJycsIERhdGUubm93KCkgLSA4NjQwMDAwMCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52ICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUoKSB7fSxcbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZCgpIHsgcmV0dXJuIG51bGw7IH0sXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vLyBIZWFkZXJzIHdob3NlIGR1cGxpY2F0ZXMgYXJlIGlnbm9yZWQgYnkgbm9kZVxuLy8gYy5mLiBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbCNodHRwX21lc3NhZ2VfaGVhZGVyc1xudmFyIGlnbm9yZUR1cGxpY2F0ZU9mID0gW1xuICAnYWdlJywgJ2F1dGhvcml6YXRpb24nLCAnY29udGVudC1sZW5ndGgnLCAnY29udGVudC10eXBlJywgJ2V0YWcnLFxuICAnZXhwaXJlcycsICdmcm9tJywgJ2hvc3QnLCAnaWYtbW9kaWZpZWQtc2luY2UnLCAnaWYtdW5tb2RpZmllZC1zaW5jZScsXG4gICdsYXN0LW1vZGlmaWVkJywgJ2xvY2F0aW9uJywgJ21heC1mb3J3YXJkcycsICdwcm94eS1hdXRob3JpemF0aW9uJyxcbiAgJ3JlZmVyZXInLCAncmV0cnktYWZ0ZXInLCAndXNlci1hZ2VudCdcbl07XG5cbi8qKlxuICogUGFyc2UgaGVhZGVycyBpbnRvIGFuIG9iamVjdFxuICpcbiAqIGBgYFxuICogRGF0ZTogV2VkLCAyNyBBdWcgMjAxNCAwODo1ODo0OSBHTVRcbiAqIENvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuICogQ29ubmVjdGlvbjoga2VlcC1hbGl2ZVxuICogVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWRcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBoZWFkZXJzIEhlYWRlcnMgbmVlZGluZyB0byBiZSBwYXJzZWRcbiAqIEByZXR1cm5zIHtPYmplY3R9IEhlYWRlcnMgcGFyc2VkIGludG8gYW4gb2JqZWN0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgdmFyIHBhcnNlZCA9IHt9O1xuICB2YXIga2V5O1xuICB2YXIgdmFsO1xuICB2YXIgaTtcblxuICBpZiAoIWhlYWRlcnMpIHsgcmV0dXJuIHBhcnNlZDsgfVxuXG4gIHV0aWxzLmZvckVhY2goaGVhZGVycy5zcGxpdCgnXFxuJyksIGZ1bmN0aW9uIHBhcnNlcihsaW5lKSB7XG4gICAgaSA9IGxpbmUuaW5kZXhPZignOicpO1xuICAgIGtleSA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoMCwgaSkpLnRvTG93ZXJDYXNlKCk7XG4gICAgdmFsID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cihpICsgMSkpO1xuXG4gICAgaWYgKGtleSkge1xuICAgICAgaWYgKHBhcnNlZFtrZXldICYmIGlnbm9yZUR1cGxpY2F0ZU9mLmluZGV4T2Yoa2V5KSA+PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICBwYXJzZWRba2V5XSA9IChwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldIDogW10pLmNvbmNhdChbdmFsXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcblxuLypnbG9iYWwgdG9TdHJpbmc6dHJ1ZSovXG5cbi8vIHV0aWxzIGlzIGEgbGlicmFyeSBvZiBnZW5lcmljIGhlbHBlciBmdW5jdGlvbnMgbm9uLXNwZWNpZmljIHRvIGF4aW9zXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXkodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgdW5kZWZpbmVkXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHVuZGVmaW5lZCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQnVmZmVyKHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwpICYmIHZhbC5jb25zdHJ1Y3RvciAhPT0gbnVsbCAmJiAhaXNVbmRlZmluZWQodmFsLmNvbnN0cnVjdG9yKVxuICAgICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyKHZhbCk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5QnVmZmVyXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGb3JtRGF0YVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEZvcm1EYXRhLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGb3JtRGF0YSh2YWwpIHtcbiAgcmV0dXJuICh0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnKSAmJiAodmFsIGluc3RhbmNlb2YgRm9ybURhdGEpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHZhbCkge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpICYmIChBcnJheUJ1ZmZlci5pc1ZpZXcpKSB7XG4gICAgcmVzdWx0ID0gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gKHZhbCkgJiYgKHZhbC5idWZmZXIpICYmICh2YWwuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJpbmdcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmluZywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyaW5nKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZyc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBOdW1iZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIE51bWJlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzTnVtYmVyKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ251bWJlcic7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gT2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWwpIHtcbiAgaWYgKHRvU3RyaW5nLmNhbGwodmFsKSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbCk7XG4gIHJldHVybiBwcm90b3R5cGUgPT09IG51bGwgfHwgcHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRGF0ZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRGF0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRGF0ZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRmlsZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRmlsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRmlsZSh2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRmlsZV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgQmxvYlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgQmxvYiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQmxvYih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgQmxvYl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEZ1bmN0aW9uLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWwpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFN0cmVhbVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgU3RyZWFtLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTdHJlYW0odmFsKSB7XG4gIHJldHVybiBpc09iamVjdCh2YWwpICYmIGlzRnVuY3Rpb24odmFsLnBpcGUpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIFVSTFNlYXJjaFBhcmFtcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsIGluc3RhbmNlb2YgVVJMU2VhcmNoUGFyYW1zO1xufVxuXG4vKipcbiAqIFRyaW0gZXhjZXNzIHdoaXRlc3BhY2Ugb2ZmIHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiBhIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgVGhlIFN0cmluZyB0byB0cmltXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgU3RyaW5nIGZyZWVkIG9mIGV4Y2VzcyB3aGl0ZXNwYWNlXG4gKi9cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlxccyovLCAnJykucmVwbGFjZSgvXFxzKiQvLCAnJyk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICogbmF0aXZlc2NyaXB0XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ05hdGl2ZVNjcmlwdCcgb3IgJ05TJ1xuICovXG5mdW5jdGlvbiBpc1N0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIChuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnTmF0aXZlU2NyaXB0JyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSAnTlMnKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gKFxuICAgIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJ1xuICApO1xufVxuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbiBBcnJheSBvciBhbiBPYmplY3QgaW52b2tpbmcgYSBmdW5jdGlvbiBmb3IgZWFjaCBpdGVtLlxuICpcbiAqIElmIGBvYmpgIGlzIGFuIEFycmF5IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwgaW5kZXgsIGFuZCBjb21wbGV0ZSBhcnJheSBmb3IgZWFjaCBpdGVtLlxuICpcbiAqIElmICdvYmonIGlzIGFuIE9iamVjdCBjYWxsYmFjayB3aWxsIGJlIGNhbGxlZCBwYXNzaW5nXG4gKiB0aGUgdmFsdWUsIGtleSwgYW5kIGNvbXBsZXRlIG9iamVjdCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheX0gb2JqIFRoZSBvYmplY3QgdG8gaXRlcmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGNhbGxiYWNrIHRvIGludm9rZSBmb3IgZWFjaCBpdGVtXG4gKi9cbmZ1bmN0aW9uIGZvckVhY2gob2JqLCBmbikge1xuICAvLyBEb24ndCBib3RoZXIgaWYgbm8gdmFsdWUgcHJvdmlkZWRcbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEZvcmNlIGFuIGFycmF5IGlmIG5vdCBhbHJlYWR5IHNvbWV0aGluZyBpdGVyYWJsZVxuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcpIHtcbiAgICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgICBvYmogPSBbb2JqXTtcbiAgfVxuXG4gIGlmIChpc0FycmF5KG9iaikpIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgYXJyYXkgdmFsdWVzXG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBvYmoubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBmbi5jYWxsKG51bGwsIG9ialtpXSwgaSwgb2JqKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIG9iamVjdCBrZXlzXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgZm4uY2FsbChudWxsLCBvYmpba2V5XSwga2V5LCBvYmopO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEFjY2VwdHMgdmFyYXJncyBleHBlY3RpbmcgZWFjaCBhcmd1bWVudCB0byBiZSBhbiBvYmplY3QsIHRoZW5cbiAqIGltbXV0YWJseSBtZXJnZXMgdGhlIHByb3BlcnRpZXMgb2YgZWFjaCBvYmplY3QgYW5kIHJldHVybnMgcmVzdWx0LlxuICpcbiAqIFdoZW4gbXVsdGlwbGUgb2JqZWN0cyBjb250YWluIHRoZSBzYW1lIGtleSB0aGUgbGF0ZXIgb2JqZWN0IGluXG4gKiB0aGUgYXJndW1lbnRzIGxpc3Qgd2lsbCB0YWtlIHByZWNlZGVuY2UuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGBqc1xuICogdmFyIHJlc3VsdCA9IG1lcmdlKHtmb286IDEyM30sIHtmb286IDQ1Nn0pO1xuICogY29uc29sZS5sb2cocmVzdWx0LmZvbyk7IC8vIG91dHB1dHMgNDU2XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqMSBPYmplY3QgdG8gbWVyZ2VcbiAqIEByZXR1cm5zIHtPYmplY3R9IFJlc3VsdCBvZiBhbGwgbWVyZ2UgcHJvcGVydGllc1xuICovXG5mdW5jdGlvbiBtZXJnZSgvKiBvYmoxLCBvYmoyLCBvYmozLCAuLi4gKi8pIHtcbiAgdmFyIHJlc3VsdCA9IHt9O1xuICBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmIChpc1BsYWluT2JqZWN0KHJlc3VsdFtrZXldKSAmJiBpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2Uoe30sIHZhbCk7XG4gICAgfSBlbHNlIGlmIChpc0FycmF5KHZhbCkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsLnNsaWNlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBFeHRlbmRzIG9iamVjdCBhIGJ5IG11dGFibHkgYWRkaW5nIHRvIGl0IHRoZSBwcm9wZXJ0aWVzIG9mIG9iamVjdCBiLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gYmUgZXh0ZW5kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIGZyb21cbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGlzQXJnIFRoZSBvYmplY3QgdG8gYmluZCBmdW5jdGlvbiB0b1xuICogQHJldHVybiB7T2JqZWN0fSBUaGUgcmVzdWx0aW5nIHZhbHVlIG9mIG9iamVjdCBhXG4gKi9cbmZ1bmN0aW9uIGV4dGVuZChhLCBiLCB0aGlzQXJnKSB7XG4gIGZvckVhY2goYiwgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodGhpc0FyZyAmJiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhW2tleV0gPSBiaW5kKHZhbCwgdGhpc0FyZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFba2V5XSA9IHZhbDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgYnl0ZSBvcmRlciBtYXJrZXIuIFRoaXMgY2F0Y2hlcyBFRiBCQiBCRiAodGhlIFVURi04IEJPTSlcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCB3aXRoIEJPTVxuICogQHJldHVybiB7c3RyaW5nfSBjb250ZW50IHZhbHVlIHdpdGhvdXQgQk9NXG4gKi9cbmZ1bmN0aW9uIHN0cmlwQk9NKGNvbnRlbnQpIHtcbiAgaWYgKGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gMHhGRUZGKSB7XG4gICAgY29udGVudCA9IGNvbnRlbnQuc2xpY2UoMSk7XG4gIH1cbiAgcmV0dXJuIGNvbnRlbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0FycmF5OiBpc0FycmF5LFxuICBpc0FycmF5QnVmZmVyOiBpc0FycmF5QnVmZmVyLFxuICBpc0J1ZmZlcjogaXNCdWZmZXIsXG4gIGlzRm9ybURhdGE6IGlzRm9ybURhdGEsXG4gIGlzQXJyYXlCdWZmZXJWaWV3OiBpc0FycmF5QnVmZmVyVmlldyxcbiAgaXNTdHJpbmc6IGlzU3RyaW5nLFxuICBpc051bWJlcjogaXNOdW1iZXIsXG4gIGlzT2JqZWN0OiBpc09iamVjdCxcbiAgaXNQbGFpbk9iamVjdDogaXNQbGFpbk9iamVjdCxcbiAgaXNVbmRlZmluZWQ6IGlzVW5kZWZpbmVkLFxuICBpc0RhdGU6IGlzRGF0ZSxcbiAgaXNGaWxlOiBpc0ZpbGUsXG4gIGlzQmxvYjogaXNCbG9iLFxuICBpc0Z1bmN0aW9uOiBpc0Z1bmN0aW9uLFxuICBpc1N0cmVhbTogaXNTdHJlYW0sXG4gIGlzVVJMU2VhcmNoUGFyYW1zOiBpc1VSTFNlYXJjaFBhcmFtcyxcbiAgaXNTdGFuZGFyZEJyb3dzZXJFbnY6IGlzU3RhbmRhcmRCcm93c2VyRW52LFxuICBmb3JFYWNoOiBmb3JFYWNoLFxuICBtZXJnZTogbWVyZ2UsXG4gIGV4dGVuZDogZXh0ZW5kLFxuICB0cmltOiB0cmltLFxuICBzdHJpcEJPTTogc3RyaXBCT01cbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvLCBmcm9tKSB7XG4gIGlmIChmcm9tID09PSB1bmRlZmluZWQpIGZyb20gPSAnJztcblxuICB2YXIgdG9QYXJ0cyA9ICh0byAmJiB0by5zcGxpdCgnLycpKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IChmcm9tICYmIGZyb20uc3BsaXQoJy8nKSkgfHwgW107XG5cbiAgdmFyIGlzVG9BYnMgPSB0byAmJiBpc0Fic29sdXRlKHRvKTtcbiAgdmFyIGlzRnJvbUFicyA9IGZyb20gJiYgaXNBYnNvbHV0ZShmcm9tKTtcbiAgdmFyIG11c3RFbmRBYnMgPSBpc1RvQWJzIHx8IGlzRnJvbUFicztcblxuICBpZiAodG8gJiYgaXNBYnNvbHV0ZSh0bykpIHtcbiAgICAvLyB0byBpcyBhYnNvbHV0ZVxuICAgIGZyb21QYXJ0cyA9IHRvUGFydHM7XG4gIH0gZWxzZSBpZiAodG9QYXJ0cy5sZW5ndGgpIHtcbiAgICAvLyB0byBpcyByZWxhdGl2ZSwgZHJvcCB0aGUgZmlsZW5hbWVcbiAgICBmcm9tUGFydHMucG9wKCk7XG4gICAgZnJvbVBhcnRzID0gZnJvbVBhcnRzLmNvbmNhdCh0b1BhcnRzKTtcbiAgfVxuXG4gIGlmICghZnJvbVBhcnRzLmxlbmd0aCkgcmV0dXJuICcvJztcblxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaDtcbiAgaWYgKGZyb21QYXJ0cy5sZW5ndGgpIHtcbiAgICB2YXIgbGFzdCA9IGZyb21QYXJ0c1tmcm9tUGFydHMubGVuZ3RoIC0gMV07XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGxhc3QgPT09ICcuJyB8fCBsYXN0ID09PSAnLi4nIHx8IGxhc3QgPT09ICcnO1xuICB9IGVsc2Uge1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBmYWxzZTtcbiAgfVxuXG4gIHZhciB1cCA9IDA7XG4gIGZvciAodmFyIGkgPSBmcm9tUGFydHMubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgIHZhciBwYXJ0ID0gZnJvbVBhcnRzW2ldO1xuXG4gICAgaWYgKHBhcnQgPT09ICcuJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgfSBlbHNlIGlmIChwYXJ0ID09PSAnLi4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwKys7XG4gICAgfSBlbHNlIGlmICh1cCkge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIGlmICghbXVzdEVuZEFicykgZm9yICg7IHVwLS07IHVwKSBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcblxuICBpZiAoXG4gICAgbXVzdEVuZEFicyAmJlxuICAgIGZyb21QYXJ0c1swXSAhPT0gJycgJiZcbiAgICAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKVxuICApXG4gICAgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lO1xuIiwiZnVuY3Rpb24gdmFsdWVPZihvYmopIHtcbiAgcmV0dXJuIG9iai52YWx1ZU9mID8gb2JqLnZhbHVlT2YoKSA6IE9iamVjdC5wcm90b3R5cGUudmFsdWVPZi5jYWxsKG9iaik7XG59XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICAvLyBUZXN0IGZvciBzdHJpY3QgZXF1YWxpdHkgZmlyc3QuXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICAvLyBPdGhlcndpc2UsIGlmIGVpdGhlciBvZiB0aGVtID09IG51bGwgdGhleSBhcmUgbm90IGVxdWFsLlxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIEFycmF5LmlzQXJyYXkoYikgJiZcbiAgICAgIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJlxuICAgICAgYS5ldmVyeShmdW5jdGlvbihpdGVtLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBpZiAodHlwZW9mIGEgPT09ICdvYmplY3QnIHx8IHR5cGVvZiBiID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSB2YWx1ZU9mKGEpO1xuICAgIHZhciBiVmFsdWUgPSB2YWx1ZU9mKGIpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHJldHVybiBPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCBhLCBiKSkuZXZlcnkoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7XG4iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGggOiAnLycgKyBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICcvJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gcGF0aC50b0xvd2VyQ2FzZSgpLmluZGV4T2YocHJlZml4LnRvTG93ZXJDYXNlKCkpID09PSAwICYmICcvPyMnLmluZGV4T2YocGF0aC5jaGFyQXQocHJlZml4Lmxlbmd0aCkpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpID8gcGF0aC5zdWJzdHIocHJlZml4Lmxlbmd0aCkgOiBwYXRoO1xufVxuZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gIHZhciBwYXRobmFtZSA9IHBhdGggfHwgJy8nO1xuICB2YXIgc2VhcmNoID0gJyc7XG4gIHZhciBoYXNoID0gJyc7XG4gIHZhciBoYXNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCcjJyk7XG5cbiAgaWYgKGhhc2hJbmRleCAhPT0gLTEpIHtcbiAgICBoYXNoID0gcGF0aG5hbWUuc3Vic3RyKGhhc2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgaGFzaEluZGV4KTtcbiAgfVxuXG4gIHZhciBzZWFyY2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJz8nKTtcblxuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG4gIHZhciBwYXRoID0gcGF0aG5hbWUgfHwgJy8nO1xuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6IFwiP1wiICsgc2VhcmNoO1xuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiBcIiNcIiArIGhhc2g7XG4gIHJldHVybiBwYXRoO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5LCBjdXJyZW50TG9jYXRpb24pIHtcbiAgdmFyIGxvY2F0aW9uO1xuXG4gIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBUd28tYXJnIGZvcm06IHB1c2gocGF0aCwgc3RhdGUpXG4gICAgbG9jYXRpb24gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfSBlbHNlIHtcbiAgICAvLyBPbmUtYXJnIGZvcm06IHB1c2gobG9jYXRpb24pXG4gICAgbG9jYXRpb24gPSBfZXh0ZW5kcyh7fSwgcGF0aCk7XG4gICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnBhdGhuYW1lID0gJyc7XG5cbiAgICBpZiAobG9jYXRpb24uc2VhcmNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBsb2NhdGlvbi5zZWFyY2ggPSAnPycgKyBsb2NhdGlvbi5zZWFyY2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLnNlYXJjaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChsb2NhdGlvbi5oYXNoKSB7XG4gICAgICBpZiAobG9jYXRpb24uaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgbG9jYXRpb24uaGFzaCA9ICcjJyArIGxvY2F0aW9uLmhhc2g7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvY2F0aW9uLmhhc2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAoc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBsb2NhdGlvbi5zdGF0ZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGRlY29kZVVSSShsb2NhdGlvbi5wYXRobmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFVSSUVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgVVJJRXJyb3IoJ1BhdGhuYW1lIFwiJyArIGxvY2F0aW9uLnBhdGhuYW1lICsgJ1wiIGNvdWxkIG5vdCBiZSBkZWNvZGVkLiAnICsgJ1RoaXMgaXMgbGlrZWx5IGNhdXNlZCBieSBhbiBpbnZhbGlkIHBlcmNlbnQtZW5jb2RpbmcuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICB9XG5cbiAgaWYgKGtleSkgbG9jYXRpb24ua2V5ID0ga2V5O1xuXG4gIGlmIChjdXJyZW50TG9jYXRpb24pIHtcbiAgICAvLyBSZXNvbHZlIGluY29tcGxldGUvcmVsYXRpdmUgcGF0aG5hbWUgcmVsYXRpdmUgdG8gY3VycmVudCBsb2NhdGlvbi5cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZTtcbiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9IHJlc29sdmVQYXRobmFtZShsb2NhdGlvbi5wYXRobmFtZSwgY3VycmVudExvY2F0aW9uLnBhdGhuYW1lKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gV2hlbiB0aGVyZSBpcyBubyBwcmlvciBsb2NhdGlvbiBhbmQgcGF0aG5hbWUgaXMgZW1wdHksIHNldCBpdCB0byAvXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSAnLyc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGxvY2F0aW9uO1xufVxuZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwoYSwgYikge1xuICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2ggJiYgYS5rZXkgPT09IGIua2V5ICYmIHZhbHVlRXF1YWwoYS5zdGF0ZSwgYi5zdGF0ZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzZXRQcm9tcHQobmV4dFByb21wdCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJvbXB0ID09IG51bGwsICdBIGhpc3Rvcnkgc3VwcG9ydHMgb25seSBvbmUgcHJvbXB0IGF0IGEgdGltZScpIDogdm9pZCAwO1xuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChwcm9tcHQgPT09IG5leHRQcm9tcHQpIHByb21wdCA9IG51bGw7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUT0RPOiBJZiBhbm90aGVyIHRyYW5zaXRpb24gc3RhcnRzIHdoaWxlIHdlJ3JlIHN0aWxsIGNvbmZpcm1pbmdcbiAgICAvLyB0aGUgcHJldmlvdXMgb25lLCB3ZSBtYXkgZW5kIHVwIGluIGEgd2VpcmQgc3RhdGUuIEZpZ3VyZSBvdXQgdGhlXG4gICAgLy8gYmVzdCB3YXkgdG8gaGFuZGxlIHRoaXMuXG4gICAgaWYgKHByb21wdCAhPSBudWxsKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHlwZW9mIHByb21wdCA9PT0gJ2Z1bmN0aW9uJyA/IHByb21wdChsb2NhdGlvbiwgYWN0aW9uKSA6IHByb21wdDtcblxuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZ2V0VXNlckNvbmZpcm1hdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGdldFVzZXJDb25maXJtYXRpb24ocmVzdWx0LCBjYWxsYmFjayk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0EgaGlzdG9yeSBuZWVkcyBhIGdldFVzZXJDb25maXJtYXRpb24gZnVuY3Rpb24gaW4gb3JkZXIgdG8gdXNlIGEgcHJvbXB0IG1lc3NhZ2UnKSA6IHZvaWQgMDtcbiAgICAgICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmV0dXJuIGZhbHNlIGZyb20gYSB0cmFuc2l0aW9uIGhvb2sgdG8gY2FuY2VsIHRoZSB0cmFuc2l0aW9uLlxuICAgICAgICBjYWxsYmFjayhyZXN1bHQgIT09IGZhbHNlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuXG4gIGZ1bmN0aW9uIGFwcGVuZExpc3RlbmVyKGZuKSB7XG4gICAgdmFyIGlzQWN0aXZlID0gdHJ1ZTtcblxuICAgIGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgaWYgKGlzQWN0aXZlKSBmbi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc0FjdGl2ZSA9IGZhbHNlO1xuICAgICAgbGlzdGVuZXJzID0gbGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICByZXR1cm4gaXRlbSAhPT0gbGlzdGVuZXI7XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbm90aWZ5TGlzdGVuZXJzKCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZXRQcm9tcHQ6IHNldFByb21wdCxcbiAgICBjb25maXJtVHJhbnNpdGlvblRvOiBjb25maXJtVHJhbnNpdGlvblRvLFxuICAgIGFwcGVuZExpc3RlbmVyOiBhcHBlbmRMaXN0ZW5lcixcbiAgICBub3RpZnlMaXN0ZW5lcnM6IG5vdGlmeUxpc3RlbmVyc1xuICB9O1xufVxuXG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbmZ1bmN0aW9uIGdldENvbmZpcm1hdGlvbihtZXNzYWdlLCBjYWxsYmFjaykge1xuICBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tYWxlcnRcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgaWYgKCh1YS5pbmRleE9mKCdBbmRyb2lkIDIuJykgIT09IC0xIHx8IHVhLmluZGV4T2YoJ0FuZHJvaWQgNC4wJykgIT09IC0xKSAmJiB1YS5pbmRleE9mKCdNb2JpbGUgU2FmYXJpJykgIT09IC0xICYmIHVhLmluZGV4T2YoJ0Nocm9tZScpID09PSAtMSAmJiB1YS5pbmRleE9mKCdXaW5kb3dzIFBob25lJykgPT09IC0xKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB3aW5kb3cuaGlzdG9yeSAmJiAncHVzaFN0YXRlJyBpbiB3aW5kb3cuaGlzdG9yeTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJyb3dzZXIgZmlyZXMgcG9wc3RhdGUgb24gaGFzaCBjaGFuZ2UuXG4gKiBJRTEwIGFuZCBJRTExIGRvIG5vdC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyBmYWxzZSBpZiB1c2luZyBnbyhuKSB3aXRoIGhhc2ggaGlzdG9yeSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkLlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCkge1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRmlyZWZveCcpID09PSAtMTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGEgZ2l2ZW4gcG9wc3RhdGUgZXZlbnQgaXMgYW4gZXh0cmFuZW91cyBXZWJLaXQgZXZlbnQuXG4gKiBBY2NvdW50cyBmb3IgdGhlIGZhY3QgdGhhdCBDaHJvbWUgb24gaU9TIGZpcmVzIHJlYWwgcG9wc3RhdGUgZXZlbnRzXG4gKiBjb250YWluaW5nIHVuZGVmaW5lZCBzdGF0ZSB3aGVuIHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbi5cbiAqL1xuXG5mdW5jdGlvbiBpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5zdGF0ZSA9PT0gdW5kZWZpbmVkICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignQ3JpT1MnKSA9PT0gLTE7XG59XG5cbnZhciBQb3BTdGF0ZUV2ZW50ID0gJ3BvcHN0YXRlJztcbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbmZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZUJyb3dzZXJIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdCcm93c2VyIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBfcHJvcHMuZm9yY2VSZWZyZXNoLFxuICAgICAgZm9yY2VSZWZyZXNoID0gX3Byb3BzJGZvcmNlUmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZm9yY2VSZWZyZXNoLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKGhpc3RvcnlTdGF0ZSkge1xuICAgIHZhciBfcmVmID0gaGlzdG9yeVN0YXRlIHx8IHt9LFxuICAgICAgICBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlO1xuXG4gICAgdmFyIF93aW5kb3ckbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb24sXG4gICAgICAgIHBhdGhuYW1lID0gX3dpbmRvdyRsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgc2VhcmNoID0gX3dpbmRvdyRsb2NhdGlvbi5zZWFyY2gsXG4gICAgICAgIGhhc2ggPSBfd2luZG93JGxvY2F0aW9uLmhhc2g7XG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihldmVudC5zdGF0ZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBrZXlzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIGtleXMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsS2V5cy5pbmRleE9mKHRvTG9jYXRpb24ua2V5KTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oZ2V0SGlzdG9yeVN0YXRlKCkpO1xuICB2YXIgYWxsS2V5cyA9IFtpbml0aWFsTG9jYXRpb24ua2V5XTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnB1c2hTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgdmFyIG5leHRLZXlzID0gYWxsS2V5cy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmlwSGFzaCh1cmwpIHtcbiAgdmFyIGhhc2hJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gdXJsIDogdXJsLnNsaWNlKDAsIGhhc2hJbmRleCk7XG59XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbG9jYXRpb25zQXJlRXF1YWwkJDEoYSwgYikge1xuICAgIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG5cbiAgICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHtcbiAgICAgIC8vIEVuc3VyZSB3ZSBhbHdheXMgaGF2ZSBhIHByb3Blcmx5LWVuY29kZWQgaGFzaC5cbiAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gICAgICB2YXIgcHJldkxvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjtcbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsJCQxKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcbiAgICAgIGhhbmRsZVBvcChsb2NhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2YgcGF0aHMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3IgcGF0aHMgd2UgZG9uJ3Qga25vdy5cblxuICAgIHZhciB0b0luZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aCh0b0xvY2F0aW9uKSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfSAvLyBFbnN1cmUgdGhlIGhhc2ggaXMgZW5jb2RlZCBwcm9wZXJseSBiZWZvcmUgZG9pbmcgYW55dGhpbmcgZWxzZS5cblxuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcbiAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgdmFyIGFsbFBhdGhzID0gW2NyZWF0ZVBhdGgoaW5pdGlhbExvY2F0aW9uKV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgdmFyIGJhc2VUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdiYXNlJyk7XG4gICAgdmFyIGhyZWYgPSAnJztcblxuICAgIGlmIChiYXNlVGFnICYmIGJhc2VUYWcuZ2V0QXR0cmlidXRlKCdocmVmJykpIHtcbiAgICAgIGhyZWYgPSBzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICAgIH1cblxuICAgIHJldHVybiBocmVmICsgJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhmYWxzZSwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgUFVTSCB0aGUgc2FtZSBwYXRoOyBhIG5ldyBlbnRyeSB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgaGlzdG9yeSBzdGFjaycpIDogdm9pZCAwO1xuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbFBhdGhzW3ByZXZJbmRleF0gPSBwYXRoO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGNhbkdvV2l0aG91dFJlbG9hZCwgJ0hhc2ggaGlzdG9yeSBnbyhuKSBjYXVzZXMgYSBmdWxsIHBhZ2UgcmVsb2FkIGluIHRoaXMgYnJvd3NlcicpIDogdm9pZCAwO1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQkMSwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5mdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlTWVtb3J5SGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMuaW5pdGlhbEVudHJpZXMsXG4gICAgICBpbml0aWFsRW50cmllcyA9IF9wcm9wcyRpbml0aWFsRW50cmllcyA9PT0gdm9pZCAwID8gWycvJ10gOiBfcHJvcHMkaW5pdGlhbEVudHJpZXMsXG4gICAgICBfcHJvcHMkaW5pdGlhbEluZGV4ID0gX3Byb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVLZXkoKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCBrZXlMZW5ndGgpO1xuICB9XG5cbiAgdmFyIGluZGV4ID0gY2xhbXAoaW5pdGlhbEluZGV4LCAwLCBpbml0aWFsRW50cmllcy5sZW5ndGggLSAxKTtcbiAgdmFyIGVudHJpZXMgPSBpbml0aWFsRW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycgPyBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBjcmVhdGVLZXkoKSkgOiBjcmVhdGVMb2NhdGlvbihlbnRyeSwgdW5kZWZpbmVkLCBlbnRyeS5rZXkgfHwgY3JlYXRlS2V5KCkpO1xuICB9KTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIHZhciBjcmVhdGVIcmVmID0gY3JlYXRlUGF0aDtcblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcbiAgICAgIHZhciBuZXh0RW50cmllcyA9IGhpc3RvcnkuZW50cmllcy5zbGljZSgwKTtcblxuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGNsYW1wKGhpc3RvcnkuaW5kZXggKyBuLCAwLCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoIC0gMSk7XG4gICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgIHZhciBsb2NhdGlvbiA9IGhpc3RvcnkuZW50cmllc1tuZXh0SW5kZXhdO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuR28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBoaXN0b3J5LmluZGV4ICsgbjtcbiAgICByZXR1cm4gbmV4dEluZGV4ID49IDAgJiYgbmV4dEluZGV4IDwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5LCBjcmVhdGVIYXNoSGlzdG9yeSwgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBwYXJzZVBhdGgsIGNyZWF0ZVBhdGggfTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHkoMjI3KSk7dmFyIGJhPW5ldyBTZXQsY2E9e307ZnVuY3Rpb24gZGEoYSxiKXtlYShhLGIpO2VhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBlYShhLGIpe2NhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKyliYS5hZGQoYlthXSl9XG52YXIgZmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGhhPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxpYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuamE9e30sa2E9e307ZnVuY3Rpb24gbGEoYSl7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGphLGEpKXJldHVybiExO2lmKGhhLnRlc3QoYSkpcmV0dXJuIGthW2FdPSEwO2phW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG1hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbmEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8bWEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIG9hPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gcGEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EsXG5wYSk7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5ELnhsaW5rSHJlZj1uZXcgQihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiBxYShhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChuYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/bGEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciByYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzYT02MDEwMyx0YT02MDEwNix1YT02MDEwNyx3YT02MDEwOCx4YT02MDExNCx5YT02MDEwOSx6YT02MDExMCxBYT02MDExMixCYT02MDExMyxDYT02MDEyMCxEYT02MDExNSxFYT02MDExNixGYT02MDEyMSxHYT02MDEyOCxIYT02MDEyOSxJYT02MDEzMCxKYT02MDEzMTtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciBFPVN5bWJvbC5mb3I7c2E9RShcInJlYWN0LmVsZW1lbnRcIik7dGE9RShcInJlYWN0LnBvcnRhbFwiKTt1YT1FKFwicmVhY3QuZnJhZ21lbnRcIik7d2E9RShcInJlYWN0LnN0cmljdF9tb2RlXCIpO3hhPUUoXCJyZWFjdC5wcm9maWxlclwiKTt5YT1FKFwicmVhY3QucHJvdmlkZXJcIik7emE9RShcInJlYWN0LmNvbnRleHRcIik7QWE9RShcInJlYWN0LmZvcndhcmRfcmVmXCIpO0JhPUUoXCJyZWFjdC5zdXNwZW5zZVwiKTtDYT1FKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTtEYT1FKFwicmVhY3QubWVtb1wiKTtFYT1FKFwicmVhY3QubGF6eVwiKTtGYT1FKFwicmVhY3QuYmxvY2tcIik7RShcInJlYWN0LnNjb3BlXCIpO0dhPUUoXCJyZWFjdC5vcGFxdWUuaWRcIik7SGE9RShcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7SWE9RShcInJlYWN0Lm9mZnNjcmVlblwiKTtKYT1FKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKX1cbnZhciBLYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gTGEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUthJiZhW0thXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBNYTtmdW5jdGlvbiBOYShhKXtpZih2b2lkIDA9PT1NYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtNYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTWErYX12YXIgT2E9ITE7XG5mdW5jdGlvbiBQYShhLGIpe2lmKCFhfHxPYSlyZXR1cm5cIlwiO09hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChrKXt2YXIgZD1rfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2goayl7ZD1rfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goayl7ZD1rfWEoKX19Y2F0Y2goayl7aWYoayYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBrLnN0YWNrKXtmb3IodmFyIGU9ay5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXJldHVyblwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e09hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TmEoYSk6XCJcIn1cbmZ1bmN0aW9uIFFhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBOYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE5hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBOYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE5hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1QYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1QYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMjI6cmV0dXJuIGE9UGEoYS50eXBlLl9yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPVBhKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gUmEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB0YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB6YTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBBYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtcbnJldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgRGE6cmV0dXJuIFJhKGEudHlwZSk7Y2FzZSBGYTpyZXR1cm4gUmEoYS5fcmVuZGVyKTtjYXNlIEVhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBSYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfWZ1bmN0aW9uIFNhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG0oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gJGEoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZxYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYWIoYSxiKXskYShhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2JiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmJiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGJiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIGRiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIGViKGEsYil7YT1tKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IoeSg5MSkpO3JldHVybiBtKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHkoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih5KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIga2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmIsb2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmI9bmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gcGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBxYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWIpLmZvckVhY2goZnVuY3Rpb24oYSl7cmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxYltiXT1xYlthXX0pfSk7ZnVuY3Rpb24gc2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFiLmhhc093blByb3BlcnR5KGEpJiZxYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiB0YihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1zYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB1Yj1tKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdmIoYSxiKXtpZihiKXtpZih1YlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHkoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHkoNjIpKTt9fVxuZnVuY3Rpb24gd2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XG5mdW5jdGlvbiBCYihhKXtpZihhPUNiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgeWIpdGhyb3cgRXJyb3IoeSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1EYihiKSx5YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBFYihhKXt6Yj9BYj9BYi5wdXNoKGEpOkFiPVthXTp6Yj1hfWZ1bmN0aW9uIEZiKCl7aWYoemIpe3ZhciBhPXpiLGI9QWI7QWI9emI9bnVsbDtCYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQmIoYlthXSl9fWZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBJYigpe312YXIgSmI9R2IsS2I9ITEsTGI9ITE7ZnVuY3Rpb24gTWIoKXtpZihudWxsIT09emJ8fG51bGwhPT1BYilJYigpLEZiKCl9XG5mdW5jdGlvbiBOYihhLGIsYyl7aWYoTGIpcmV0dXJuIGEoYixjKTtMYj0hMDt0cnl7cmV0dXJuIEpiKGEsYixjKX1maW5hbGx5e0xiPSExLE1iKCl9fVxuZnVuY3Rpb24gT2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcih5KDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIFBiPSExO2lmKGZhKXRyeXt2YXIgUWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFFiLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtQYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpfWNhdGNoKGEpe1BiPSExfWZ1bmN0aW9uIFJiKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChuKXt0aGlzLm9uRXJyb3Iobil9fXZhciBTYj0hMSxUYj1udWxsLFViPSExLFZiPW51bGwsV2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7U2I9ITA7VGI9YX19O2Z1bmN0aW9uIFhiKGEsYixjLGQsZSxmLGcsaCxrKXtTYj0hMTtUYj1udWxsO1JiLmFwcGx5KFdiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBZYihhLGIsYyxkLGUsZixnLGgsayl7WGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKFNiKXtpZihTYil7dmFyIGw9VGI7U2I9ITE7VGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHkoMTk4KSk7VWJ8fChVYj0hMCxWYj1sKX19ZnVuY3Rpb24gWmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiAkYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGFjKGEpe2lmKFpiKGEpIT09YSl0aHJvdyBFcnJvcih5KDE4OCkpO31cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVpiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGFjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGFjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IoeSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih5KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHkoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gY2MoYSl7YT1iYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRjKGEsYil7Zm9yKHZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1iOyl7aWYoYj09PWF8fGI9PT1jKXJldHVybiEwO2I9Yi5yZXR1cm59cmV0dXJuITF9dmFyIGVjLGZjLGdjLGhjLGljPSExLGpjPVtdLGtjPW51bGwsbGM9bnVsbCxtYz1udWxsLG5jPW5ldyBNYXAsb2M9bmV3IE1hcCxwYz1bXSxxYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiByYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSxkb21FdmVudE5hbWU6YixldmVudFN5c3RlbUZsYWdzOmN8MTYsbmF0aXZlRXZlbnQ6ZSx0YXJnZXRDb250YWluZXJzOltkXX19ZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjprYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6bGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6bWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOm5jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOm9jLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gdGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1yYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmZmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gdWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4ga2M9dGMoa2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIGxjPXRjKGxjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBtYz10YyhtYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO25jLnNldChmLHRjKG5jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxvYy5zZXQoZix0YyhvYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiB2YyhhKXt2YXIgYj13YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVpiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPSRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO2hjKGEubGFuZVByaW9yaXR5LGZ1bmN0aW9uKCl7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2djKGMpfSl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24geGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXJldHVybiBiPUNiKGMpLG51bGwhPT1iJiZmYyhiKSxhLmJsb2NrZWRPbj1jLCExO2Iuc2hpZnQoKX1yZXR1cm4hMH1mdW5jdGlvbiB6YyhhLGIsYyl7eGMoYSkmJmMuZGVsZXRlKGIpfVxuZnVuY3Rpb24gQWMoKXtmb3IoaWM9ITE7MDxqYy5sZW5ndGg7KXt2YXIgYT1qY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9Q2IoYS5ibG9ja2VkT24pO251bGwhPT1hJiZlYyhhKTticmVha31mb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yyl7YS5ibG9ja2VkT249YzticmVha31iLnNoaWZ0KCl9bnVsbD09PWEuYmxvY2tlZE9uJiZqYy5zaGlmdCgpfW51bGwhPT1rYyYmeGMoa2MpJiYoa2M9bnVsbCk7bnVsbCE9PWxjJiZ4YyhsYykmJihsYz1udWxsKTtudWxsIT09bWMmJnhjKG1jKSYmKG1jPW51bGwpO25jLmZvckVhY2goemMpO29jLmZvckVhY2goemMpfVxuZnVuY3Rpb24gQmMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLGljfHwoaWM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksQWMpKSl9XG5mdW5jdGlvbiBDYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBCYyhiLGEpfWlmKDA8amMubGVuZ3RoKXtCYyhqY1swXSxhKTtmb3IodmFyIGM9MTtjPGpjLmxlbmd0aDtjKyspe3ZhciBkPWpjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09a2MmJkJjKGtjLGEpO251bGwhPT1sYyYmQmMobGMsYSk7bnVsbCE9PW1jJiZCYyhtYyxhKTtuYy5mb3JFYWNoKGIpO29jLmZvckVhY2goYik7Zm9yKGM9MDtjPHBjLmxlbmd0aDtjKyspZD1wY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8cGMubGVuZ3RoJiYoYz1wY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOyl2YyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJnBjLnNoaWZ0KCl9XG5mdW5jdGlvbiBEYyhhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBFYz17YW5pbWF0aW9uZW5kOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6RGMoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxGYz17fSxHYz17fTtcbmZhJiYoR2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgRWMuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgRWMudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBIYyhhKXtpZihGY1thXSlyZXR1cm4gRmNbYV07aWYoIUVjW2FdKXJldHVybiBhO3ZhciBiPUVjW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEdjKXJldHVybiBGY1thXT1iW2NdO3JldHVybiBhfVxudmFyIEljPUhjKFwiYW5pbWF0aW9uZW5kXCIpLEpjPUhjKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLEtjPUhjKFwiYW5pbWF0aW9uc3RhcnRcIiksTGM9SGMoXCJ0cmFuc2l0aW9uZW5kXCIpLE1jPW5ldyBNYXAsTmM9bmV3IE1hcCxPYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixJYyxcImFuaW1hdGlvbkVuZFwiLEpjLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsS2MsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXG5cImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIixMYyxcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gUGMoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV07ZT1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtOYy5zZXQoZCxiKTtNYy5zZXQoZCxlKTtkYShlLFtkXSl9fXZhciBRYz1yLnVuc3RhYmxlX25vdztRYygpO3ZhciBGPTg7XG5mdW5jdGlvbiBSYyhhKXtpZigwIT09KDEmYSkpcmV0dXJuIEY9MTUsMTtpZigwIT09KDImYSkpcmV0dXJuIEY9MTQsMjtpZigwIT09KDQmYSkpcmV0dXJuIEY9MTMsNDt2YXIgYj0yNCZhO2lmKDAhPT1iKXJldHVybiBGPTEyLGI7aWYoMCE9PShhJjMyKSlyZXR1cm4gRj0xMSwzMjtiPTE5MiZhO2lmKDAhPT1iKXJldHVybiBGPTEwLGI7aWYoMCE9PShhJjI1NikpcmV0dXJuIEY9OSwyNTY7Yj0zNTg0JmE7aWYoMCE9PWIpcmV0dXJuIEY9OCxiO2lmKDAhPT0oYSY0MDk2KSlyZXR1cm4gRj03LDQwOTY7Yj00MTg2MTEyJmE7aWYoMCE9PWIpcmV0dXJuIEY9NixiO2I9NjI5MTQ1NjAmYTtpZigwIT09YilyZXR1cm4gRj01LGI7aWYoYSY2NzEwODg2NClyZXR1cm4gRj00LDY3MTA4ODY0O2lmKDAhPT0oYSYxMzQyMTc3MjgpKXJldHVybiBGPTMsMTM0MjE3NzI4O2I9ODA1MzA2MzY4JmE7aWYoMCE9PWIpcmV0dXJuIEY9MixiO2lmKDAhPT0oMTA3Mzc0MTgyNCZhKSlyZXR1cm4gRj0xLDEwNzM3NDE4MjQ7XG5GPTg7cmV0dXJuIGF9ZnVuY3Rpb24gU2MoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIDE1O2Nhc2UgOTg6cmV0dXJuIDEwO2Nhc2UgOTc6Y2FzZSA5NjpyZXR1cm4gODtjYXNlIDk1OnJldHVybiAyO2RlZmF1bHQ6cmV0dXJuIDB9fWZ1bmN0aW9uIFRjKGEpe3N3aXRjaChhKXtjYXNlIDE1OmNhc2UgMTQ6cmV0dXJuIDk5O2Nhc2UgMTM6Y2FzZSAxMjpjYXNlIDExOmNhc2UgMTA6cmV0dXJuIDk4O2Nhc2UgOTpjYXNlIDg6Y2FzZSA3OmNhc2UgNjpjYXNlIDQ6Y2FzZSA1OnJldHVybiA5NztjYXNlIDM6Y2FzZSAyOmNhc2UgMTpyZXR1cm4gOTU7Y2FzZSAwOnJldHVybiA5MDtkZWZhdWx0OnRocm93IEVycm9yKHkoMzU4LGEpKTt9fVxuZnVuY3Rpb24gVWMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gRj0wO3ZhciBkPTAsZT0wLGY9YS5leHBpcmVkTGFuZXMsZz1hLnN1c3BlbmRlZExhbmVzLGg9YS5waW5nZWRMYW5lcztpZigwIT09ZilkPWYsZT1GPTE1O2Vsc2UgaWYoZj1jJjEzNDIxNzcyNywwIT09Zil7dmFyIGs9ZiZ+ZzswIT09az8oZD1SYyhrKSxlPUYpOihoJj1mLDAhPT1oJiYoZD1SYyhoKSxlPUYpKX1lbHNlIGY9YyZ+ZywwIT09Zj8oZD1SYyhmKSxlPUYpOjAhPT1oJiYoZD1SYyhoKSxlPUYpO2lmKDA9PT1kKXJldHVybiAwO2Q9MzEtVmMoZCk7ZD1jJigoMD5kPzA6MTw8ZCk8PDEpLTE7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZykpe1JjKGIpO2lmKGU8PUYpcmV0dXJuIGI7Rj1lfWI9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtVmMoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiBXYyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24gWGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxNTpyZXR1cm4gMTtjYXNlIDE0OnJldHVybiAyO2Nhc2UgMTI6cmV0dXJuIGE9WWMoMjQmfmIpLDA9PT1hP1hjKDEwLGIpOmE7Y2FzZSAxMDpyZXR1cm4gYT1ZYygxOTImfmIpLDA9PT1hP1hjKDgsYik6YTtjYXNlIDg6cmV0dXJuIGE9WWMoMzU4NCZ+YiksMD09PWEmJihhPVljKDQxODYxMTImfmIpLDA9PT1hJiYoYT01MTIpKSxhO2Nhc2UgMjpyZXR1cm4gYj1ZYyg4MDUzMDYzNjgmfmIpLDA9PT1iJiYoYj0yNjg0MzU0NTYpLGJ9dGhyb3cgRXJyb3IoeSgzNTgsYSkpO31mdW5jdGlvbiBZYyhhKXtyZXR1cm4gYSYtYX1mdW5jdGlvbiBaYyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjt2YXIgZD1iLTE7YS5zdXNwZW5kZWRMYW5lcyY9ZDthLnBpbmdlZExhbmVzJj1kO2E9YS5ldmVudFRpbWVzO2I9MzEtVmMoYik7YVtiXT1jfXZhciBWYz1NYXRoLmNsejMyP01hdGguY2x6MzI6YWQsYmQ9TWF0aC5sb2csY2Q9TWF0aC5MTjI7ZnVuY3Rpb24gYWQoYSl7cmV0dXJuIDA9PT1hPzMyOjMxLShiZChhKS9jZHwwKXwwfXZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIGdkKGEsYixjLGQpe0tifHxJYigpO3ZhciBlPWhkLGY9S2I7S2I9ITA7dHJ5e0hiKGUsYSxiLGMsZCl9ZmluYWxseXsoS2I9Zil8fE1iKCl9fWZ1bmN0aW9uIGlkKGEsYixjLGQpe2VkKGRkLGhkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkKXtpZihmZCl7dmFyIGU7aWYoKGU9MD09PShiJjQpKSYmMDxqYy5sZW5ndGgmJi0xPHFjLmluZGV4T2YoYSkpYT1yYyhudWxsLGEsYixjLGQpLGpjLnB1c2goYSk7ZWxzZXt2YXIgZj15YyhhLGIsYyxkKTtpZihudWxsPT09ZillJiZzYyhhLGQpO2Vsc2V7aWYoZSl7aWYoLTE8cWMuaW5kZXhPZihhKSl7YT1yYyhmLGEsYixjLGQpO2pjLnB1c2goYSk7cmV0dXJufWlmKHVjKGYsYSxiLGMsZCkpcmV0dXJuO3NjKGEsZCl9amQoYSxiLGQsbnVsbCxjKX19fX1cbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPXhiKGQpO2U9d2MoZSk7aWYobnVsbCE9PWUpe3ZhciBmPVpiKGUpO2lmKG51bGw9PT1mKWU9bnVsbDtlbHNle3ZhciBnPWYudGFnO2lmKDEzPT09Zyl7ZT0kYihmKTtpZihudWxsIT09ZSlyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZigzPT09Zyl7aWYoZi5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWYudGFnP2Yuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSBmIT09ZSYmKGU9bnVsbCl9fWpkKGEsYixkLGUsYyk7cmV0dXJuIG51bGx9dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO1xuZnVuY3Rpb24gbmQoKXtpZihtZClyZXR1cm4gbWQ7dmFyIGEsYj1sZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBtZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9bShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9bSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPW0oe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPW0oe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPW0oe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1tKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9bSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1tKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9bSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1tKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1tKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9bSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9bSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9ZmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWZhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9ZmEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoZmEpe3ZhciB4ZTtpZihmYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO2E9cmU7aWYoS2IpYShiKTtlbHNle0tiPSEwO3RyeXtHYihhLGIpfWZpbmFsbHl7S2I9ITEsTWIoKX19fX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlLEllPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBKZShhLGIpe2lmKEhlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighSWUuY2FsbChiLGNbZF0pfHwhSGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBLZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZShhLGIpe3ZhciBjPUtlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtlKGMpfX1mdW5jdGlvbiBNZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01lKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgUGU9ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk9lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkplKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cblBjKFwiY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXNpbiBmb2N1cyBmb2N1c291dCBibHVyIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksXG4wKTtQYyhcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTtQYyhPYywyKTtmb3IodmFyIFZlPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxXZT0wO1dlPFZlLmxlbmd0aDtXZSsrKU5jLnNldChWZVtXZV0sMCk7ZWEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtcbmVhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtlYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2RhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZGEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5kYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIFhlPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxZZT1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChYZSkpO1xuZnVuY3Rpb24gWmUoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7WWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfX19aWYoVWIpdGhyb3cgYT1WYixVYj0hMSxWYj1udWxsLGE7fVxuZnVuY3Rpb24gRyhhLGIpe3ZhciBjPSRlKGIpLGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChhZihiLGEsMiwhMSksYy5hZGQoZCkpfXZhciBiZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIGNmKGEpe2FbYmZdfHwoYVtiZl09ITAsYmEuZm9yRWFjaChmdW5jdGlvbihiKXtZZS5oYXMoYil8fGRmKGIsITEsYSxudWxsKTtkZihiLCEwLGEsbnVsbCl9KSl9XG5mdW5jdGlvbiBkZihhLGIsYyxkKXt2YXIgZT00PGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06MCxmPWM7XCJzZWxlY3Rpb25jaGFuZ2VcIj09PWEmJjkhPT1jLm5vZGVUeXBlJiYoZj1jLm93bmVyRG9jdW1lbnQpO2lmKG51bGwhPT1kJiYhYiYmWWUuaGFzKGEpKXtpZihcInNjcm9sbFwiIT09YSlyZXR1cm47ZXw9MjtmPWR9dmFyIGc9JGUoZiksaD1hK1wiX19cIisoYj9cImNhcHR1cmVcIjpcImJ1YmJsZVwiKTtnLmhhcyhoKXx8KGImJihlfD00KSxhZihmLGEsZSxiKSxnLmFkZChoKSl9XG5mdW5jdGlvbiBhZihhLGIsYyxkKXt2YXIgZT1OYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWU/MjplKXtjYXNlIDA6ZT1nZDticmVhaztjYXNlIDE6ZT1pZDticmVhaztkZWZhdWx0OmU9aGR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IVBifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGpkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9d2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufU5iKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XG5hOnt2YXIgaD1NYy5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9dGQseD1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2QoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9UmQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjp4PVwiZm9jdXNcIjtrPUZkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOng9XCJibHVyXCI7az1GZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUZkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az1CZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxuRGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1WZDticmVhaztjYXNlIEljOmNhc2UgSmM6Y2FzZSBLYzprPUhkO2JyZWFrO2Nhc2UgTGM6az1YZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az12ZDticmVhaztjYXNlIFwid2hlZWxcIjprPVpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9SmQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1UZH12YXIgdz0wIT09KGImNCksej0hdyYmXCJzY3JvbGxcIj09PWEsdT13P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3c9W107Zm9yKHZhciB0PWQscTtudWxsIT09XG50Oyl7cT10O3ZhciB2PXEuc3RhdGVOb2RlOzU9PT1xLnRhZyYmbnVsbCE9PXYmJihxPXYsbnVsbCE9PXUmJih2PU9iKHQsdSksbnVsbCE9diYmdy5wdXNoKGVmKHQsdixxKSkpKTtpZih6KWJyZWFrO3Q9dC5yZXR1cm59MDx3Lmxlbmd0aCYmKGg9bmV3IGsoaCx4LG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnd9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiYwPT09KGImMTYpJiYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYod2MoeCl8fHhbZmZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCx4PXg/d2MoeCk6bnVsbCxudWxsIT09XG54JiYoej1aYih4KSx4IT09enx8NSE9PXgudGFnJiY2IT09eC50YWcpKXg9bnVsbH1lbHNlIGs9bnVsbCx4PWQ7aWYoayE9PXgpe3c9QmQ7dj1cIm9uTW91c2VMZWF2ZVwiO3U9XCJvbk1vdXNlRW50ZXJcIjt0PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdz1UZCx2PVwib25Qb2ludGVyTGVhdmVcIix1PVwib25Qb2ludGVyRW50ZXJcIix0PVwicG9pbnRlclwiO3o9bnVsbD09az9oOnVlKGspO3E9bnVsbD09eD9oOnVlKHgpO2g9bmV3IHcodix0K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9ejtoLnJlbGF0ZWRUYXJnZXQ9cTt2PW51bGw7d2MoZSk9PT1kJiYodz1uZXcgdyh1LHQrXCJlbnRlclwiLHgsYyxlKSx3LnRhcmdldD1xLHcucmVsYXRlZFRhcmdldD16LHY9dyk7ej12O2lmKGsmJngpYjp7dz1rO3U9eDt0PTA7Zm9yKHE9dztxO3E9Z2YocSkpdCsrO3E9MDtmb3Iodj11O3Y7dj1nZih2KSlxKys7Zm9yKDswPHQtcTspdz1nZih3KSx0LS07Zm9yKDswPHEtdDspdT1cbmdmKHUpLHEtLTtmb3IoO3QtLTspe2lmKHc9PT11fHxudWxsIT09dSYmdz09PXUuYWx0ZXJuYXRlKWJyZWFrIGI7dz1nZih3KTt1PWdmKHUpfXc9bnVsbH1lbHNlIHc9bnVsbDtudWxsIT09ayYmaGYoZyxoLGssdywhMSk7bnVsbCE9PXgmJm51bGwhPT16JiZoZihnLHoseCx3LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBKPXZlO2Vsc2UgaWYobWUoaCkpaWYod2UpSj1GZTtlbHNle0o9RGU7dmFyIEs9Q2V9ZWxzZShrPWgubm9kZU5hbWUpJiZcImlucHV0XCI9PT1rLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1oLnR5cGV8fFwicmFkaW9cIj09PWgudHlwZSkmJihKPUVlKTtpZihKJiYoSj1KKGEsZCkpKXtuZShnLEosYyxlKTticmVhayBhfUsmJksoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJihLPWguX3dyYXBwZXJTdGF0ZSkmJlxuSy5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZiYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9Sz1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZShLKXx8XCJ0cnVlXCI9PT1LLmNvbnRlbnRFZGl0YWJsZSlRZT1LLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgUTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xuY2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6TD1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifUw9dm9pZCAwfWVsc2UgaWU/Z2UoYSxjKSYmKEw9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtMJiYoZGUmJlwia29cIiE9PWMubG9jYWxlJiYoaWV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1MP1wib25Db21wb3NpdGlvbkVuZFwiPT09TCYmaWUmJihRPW5kKCkpOihrZD1lLGxkPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGllPSEwKSksSz1vZShkLEwpLDA8Sy5sZW5ndGgmJihMPW5ldyBMZChMLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6TCxsaXN0ZW5lcnM6S30pLFE/TC5kYXRhPVE6KFE9aGUoYyksbnVsbCE9PVEmJihMLmRhdGE9USkpKSk7aWYoUT1jZT9qZShhLGMpOmtlKGEsYykpZD1vZShkLFwib25CZWZvcmVJbnB1dFwiKSwwPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXG5cImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT1RKX1zZShnLGIpfSl9ZnVuY3Rpb24gZWYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPU9iKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KGVmKGEsZixlKSksZj1PYihhLGIpLG51bGwhPWYmJmQucHVzaChlZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIGdmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBoZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPU9iKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KGVmKGMsayxoKSkpOmV8fChrPU9iKGMsZiksbnVsbCE9ayYmZy5wdXNoKGVmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9ZnVuY3Rpb24gamYoKXt9dmFyIGtmPW51bGwsbGY9bnVsbDtmdW5jdGlvbiBtZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBuZihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIG9mPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHBmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBxZihhKXsxPT09YS5ub2RlVHlwZT9hLnRleHRDb250ZW50PVwiXCI6OT09PWEubm9kZVR5cGUmJihhPWEuYm9keSxudWxsIT1hJiYoYS50ZXh0Q29udGVudD1cIlwiKSl9XG5mdW5jdGlvbiByZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1mdW5jdGlvbiBzZihhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiJFwiPT09Y3x8XCIkIVwiPT09Y3x8XCIkP1wiPT09Yyl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2VcIi8kXCI9PT1jJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgdGY9MDtmdW5jdGlvbiB1ZihhKXtyZXR1cm57JCR0eXBlb2Y6R2EsdG9TdHJpbmc6YSx2YWx1ZU9mOmF9fXZhciB2Zj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx3Zj1cIl9fcmVhY3RGaWJlciRcIit2Zix4Zj1cIl9fcmVhY3RQcm9wcyRcIit2ZixmZj1cIl9fcmVhY3RDb250YWluZXIkXCIrdmYseWY9XCJfX3JlYWN0RXZlbnRzJFwiK3ZmO1xuZnVuY3Rpb24gd2MoYSl7dmFyIGI9YVt3Zl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbZmZdfHxjW3dmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNmKGEpO251bGwhPT1hOyl7aWYoYz1hW3dmXSlyZXR1cm4gYzthPXNmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbd2ZdfHxhW2ZmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHkoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbeGZdfHxudWxsfVxuZnVuY3Rpb24gJGUoYSl7dmFyIGI9YVt5Zl07dm9pZCAwPT09YiYmKGI9YVt5Zl09bmV3IFNldCk7cmV0dXJuIGJ9dmFyIHpmPVtdLEFmPS0xO2Z1bmN0aW9uIEJmKGEpe3JldHVybntjdXJyZW50OmF9fWZ1bmN0aW9uIEgoYSl7MD5BZnx8KGEuY3VycmVudD16ZltBZl0semZbQWZdPW51bGwsQWYtLSl9ZnVuY3Rpb24gSShhLGIpe0FmKys7emZbQWZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQ2Y9e30sTT1CZihDZiksTj1CZighMSksRGY9Q2Y7XG5mdW5jdGlvbiBFZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIENmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEZmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gR2YoKXtIKE4pO0goTSl9ZnVuY3Rpb24gSGYoYSxiLGMpe2lmKE0uY3VycmVudCE9PUNmKXRocm93IEVycm9yKHkoMTY4KSk7SShNLGIpO0koTixjKX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IoeSgxMDgsUmEoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbSh7fSxjLGQpfWZ1bmN0aW9uIEpmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1NLmN1cnJlbnQ7SShNLGEpO0koTixOLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih5KDE2OSkpO2M/KGE9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChOKSxIKE0pLEkoTSxhKSk6SChOKTtJKE4sYyl9XG52YXIgTGY9bnVsbCxNZj1udWxsLE5mPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LE9mPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxQZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLFFmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsUmY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsU2Y9ci51bnN0YWJsZV9ub3csVGY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxVZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFZmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksV2Y9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxYZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFlmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFpmPXt9LCRmPXZvaWQgMCE9PVJmP1JmOmZ1bmN0aW9uKCl7fSxhZz1udWxsLGJnPW51bGwsY2c9ITEsZGc9U2YoKSxPPTFFND5kZz9TZjpmdW5jdGlvbigpe3JldHVybiBTZigpLWRnfTtcbmZ1bmN0aW9uIGVnKCl7c3dpdGNoKFRmKCkpe2Nhc2UgVWY6cmV0dXJuIDk5O2Nhc2UgVmY6cmV0dXJuIDk4O2Nhc2UgV2Y6cmV0dXJuIDk3O2Nhc2UgWGY6cmV0dXJuIDk2O2Nhc2UgWWY6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBVZjtjYXNlIDk4OnJldHVybiBWZjtjYXNlIDk3OnJldHVybiBXZjtjYXNlIDk2OnJldHVybiBYZjtjYXNlIDk1OnJldHVybiBZZjtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBnZyhhLGIpe2E9ZmcoYSk7cmV0dXJuIE5mKGEsYil9ZnVuY3Rpb24gaGcoYSxiLGMpe2E9ZmcoYSk7cmV0dXJuIE9mKGEsYixjKX1mdW5jdGlvbiBpZygpe2lmKG51bGwhPT1iZyl7dmFyIGE9Ymc7Ymc9bnVsbDtQZihhKX1qZygpfVxuZnVuY3Rpb24gamcoKXtpZighY2cmJm51bGwhPT1hZyl7Y2c9ITA7dmFyIGE9MDt0cnl7dmFyIGI9YWc7Z2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2FnPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWFnJiYoYWc9YWcuc2xpY2UoYSsxKSksT2YoVWYsaWcpLGM7fWZpbmFsbHl7Y2c9ITF9fX12YXIga2c9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gbGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1tKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIG1nPUJmKG51bGwpLG5nPW51bGwsb2c9bnVsbCxwZz1udWxsO2Z1bmN0aW9uIHFnKCl7cGc9b2c9bmc9bnVsbH1cbmZ1bmN0aW9uIHJnKGEpe3ZhciBiPW1nLmN1cnJlbnQ7SChtZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBzZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZigoYS5jaGlsZExhbmVzJmIpPT09YilpZihudWxsPT09Y3x8KGMuY2hpbGRMYW5lcyZiKT09PWIpYnJlYWs7ZWxzZSBjLmNoaWxkTGFuZXN8PWI7ZWxzZSBhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHRnKGEsYil7bmc9YTtwZz1vZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKDAhPT0oYS5sYW5lcyZiKSYmKHVnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHZnKGEsYil7aWYocGchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXBnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1vZyl7aWYobnVsbD09PW5nKXRocm93IEVycm9yKHkoMzA4KSk7b2c9YjtuZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIG9nPW9nLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB3Zz0hMTtmdW5jdGlvbiB4ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB5ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB6ZyhhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1mdW5jdGlvbiBBZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIEJnKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBDZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3dnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG49YS5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe249bi51cGRhdGVRdWV1ZTt2YXIgQT1uLmxhc3RCYXNlVXBkYXRlO0EhPT1nJiYobnVsbD09PUE/bi5maXJzdEJhc2VVcGRhdGU9bDpBLm5leHQ9bCxuLmxhc3RCYXNlVXBkYXRlPWspfX1pZihudWxsIT09Zil7QT1lLmJhc2VTdGF0ZTtnPTA7bj1sPWs9bnVsbDtkb3toPWYubGFuZTt2YXIgcD1mLmV2ZW50VGltZTtpZigoZCZoKT09PWgpe251bGwhPT1uJiYobj1uLm5leHQ9e2V2ZW50VGltZTpwLGxhbmU6MCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBDPWEseD1mO2g9YjtwPWM7c3dpdGNoKHgudGFnKXtjYXNlIDE6Qz14LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEMpe0E9Qy5jYWxsKHAsQSxoKTticmVhayBhfUE9QzticmVhayBhO2Nhc2UgMzpDLmZsYWdzPUMuZmxhZ3MmLTQwOTd8NjQ7Y2FzZSAwOkM9eC5wYXlsb2FkO2g9XCJmdW5jdGlvblwiPT09dHlwZW9mIEM/Qy5jYWxsKHAsQSxoKTpDO2lmKG51bGw9PT1ofHx2b2lkIDA9PT1oKWJyZWFrIGE7QT1tKHt9LEEsaCk7YnJlYWsgYTtjYXNlIDI6d2c9ITB9fW51bGwhPT1mLmNhbGxiYWNrJiYoYS5mbGFnc3w9MzIsaD1lLmVmZmVjdHMsbnVsbD09PWg/ZS5lZmZlY3RzPVtmXTpoLnB1c2goZikpfWVsc2UgcD17ZXZlbnRUaW1lOnAsbGFuZTpoLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW4/KGw9bj1wLGs9QSk6bj1uLm5leHQ9cCxnfD1oO2Y9Zi5uZXh0O2lmKG51bGw9PT1cbmYpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2UgZj1oLm5leHQsaC5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1oLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09biYmKGs9QSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bjtEZ3w9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPUF9fWZ1bmN0aW9uIEVnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcih5KDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIEZnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gR2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm0oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEtnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1piKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9SGcoKSxkPUlnKGEpLGU9emcoYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1cbmIpO0FnKGEsZSk7SmcoYSxkLGMpfX07ZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSmUoYyxkKXx8IUplKGUsZik6ITB9XG5mdW5jdGlvbiBNZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj12ZyhmKTooZT1GZihiKT9EZjpNLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9S2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBPZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUZnO3hnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9dmcoZik6KGY9RmYoYik/RGY6TS5jdXJyZW50LGUuY29udGV4dD1FZihhLGYpKTtDZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoR2coYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksQ2coYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NCl9dmFyIFBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBRZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHkoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IoeSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RmcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IoeSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IoeSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFJnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHkoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7fVxuZnVuY3Rpb24gU2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5mbGFncz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1UZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFncz0yLFxuYyk6ZDtiLmZsYWdzPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1VZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1RZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VmcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5XZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WGcoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBBKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1VZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYz1WZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1RZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgdGE6cmV0dXJuIGI9V2coYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFBnKGIpfHxMYShiKSlyZXR1cm4gYj1YZyhiLFxuYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXVhP24oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSB0YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihQZyhjKXx8TGEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bihhLGIsYyxkLG51bGwpO1JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT11YT9uKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSB0YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihQZyhkKXx8TGEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbihiLGEsZCxlLG51bGwpO1JnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsdT1nLHo9Zz0wLHE9bnVsbDtudWxsIT09dSYmejxoLmxlbmd0aDt6Kyspe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIG49cChlLHUsaFt6XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT1cbm4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx6KTtudWxsPT09dD9sPW46dC5zaWJsaW5nPW47dD1uO3U9cX1pZih6PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoO3o8aC5sZW5ndGg7eisrKXU9QShlLGhbel0sayksbnVsbCE9PXUmJihnPWYodSxnLHopLG51bGw9PT10P2w9dTp0LnNpYmxpbmc9dSx0PXUpO3JldHVybiBsfWZvcih1PWQoZSx1KTt6PGgubGVuZ3RoO3orKylxPUModSxlLHosaFt6XSxrKSxudWxsIT09cSYmKGEmJm51bGwhPT1xLmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PXEua2V5P3o6cS5rZXkpLGc9ZihxLGcseiksbnVsbD09PXQ/bD1xOnQuc2libGluZz1xLHQ9cSk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiB3KGUsZyxoLGspe3ZhciBsPUxhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHkoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09XG5oKXRocm93IEVycm9yKHkoMTUxKSk7Zm9yKHZhciB0PWw9bnVsbCx1PWcsej1nPTAscT1udWxsLG49aC5uZXh0KCk7bnVsbCE9PXUmJiFuLmRvbmU7eisrLG49aC5uZXh0KCkpe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIHc9cChlLHUsbi52YWx1ZSxrKTtpZihudWxsPT09dyl7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHUpO2c9Zih3LGcseik7bnVsbD09PXQ/bD13OnQuc2libGluZz13O3Q9dzt1PXF9aWYobi5kb25lKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDshbi5kb25lO3orKyxuPWgubmV4dCgpKW49QShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO3JldHVybiBsfWZvcih1PWQoZSx1KTshbi5kb25lO3orKyxuPWgubmV4dCgpKW49Qyh1LGUseixuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZcbnUuZGVsZXRlKG51bGw9PT1uLmtleT96Om4ua2V5KSxnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXVhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHNhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09dWEpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtcbmQ9ZShrLGYucHJvcHMpO2QucmVmPVFnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09dWE/KGQ9WGcoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVZnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVFnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB0YTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1cbldnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVVnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFBnKGYpKXJldHVybiB4KGEsZCxmLGgpO2lmKExhKGYpKXJldHVybiB3KGEsZCxmLGgpO2wmJlJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDIyOmNhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGhyb3cgRXJyb3IoeSgxNTIsUmEoYS50eXBlKXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWWc9U2coITApLFpnPVNnKCExKSwkZz17fSxhaD1CZigkZyksYmg9QmYoJGcpLGNoPUJmKCRnKTtcbmZ1bmN0aW9uIGRoKGEpe2lmKGE9PT0kZyl0aHJvdyBFcnJvcih5KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGVoKGEsYil7SShjaCxiKTtJKGJoLGEpO0koYWgsJGcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPW1iKGIsYSl9SChhaCk7SShhaCxiKX1mdW5jdGlvbiBmaCgpe0goYWgpO0goYmgpO0goY2gpfWZ1bmN0aW9uIGdoKGEpe2RoKGNoLmN1cnJlbnQpO3ZhciBiPWRoKGFoLmN1cnJlbnQpO3ZhciBjPW1iKGIsYS50eXBlKTtiIT09YyYmKEkoYmgsYSksSShhaCxjKSl9ZnVuY3Rpb24gaGgoYSl7YmguY3VycmVudD09PWEmJihIKGFoKSxIKGJoKSl9dmFyIFA9QmYoMCk7XG5mdW5jdGlvbiBpaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBqaD1udWxsLGtoPW51bGwsbGg9ITE7XG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPW5oKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmZsYWdzPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBvaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcGgoYSl7aWYobGgpe3ZhciBiPWtoO2lmKGIpe3ZhciBjPWI7aWYoIW9oKGEsYikpe2I9cmYoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFvaChhLGIpKXthLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MjtsaD0hMTtqaD1hO3JldHVybn1taChqaCxjKX1qaD1hO2toPXJmKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MixsaD0hMSxqaD1hfX1mdW5jdGlvbiBxaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47amg9YX1cbmZ1bmN0aW9uIHJoKGEpe2lmKGEhPT1qaClyZXR1cm4hMTtpZighbGgpcmV0dXJuIHFoKGEpLGxoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhbmYoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWtoO2I7KW1oKGEsYiksYj1yZihiLm5leHRTaWJsaW5nKTtxaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHkoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe2toPXJmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlwiJCFcIiE9PWMmJlwiJD9cIiE9PWN8fGIrK31hPWEubmV4dFNpYmxpbmd9a2g9bnVsbH19ZWxzZSBraD1qaD9yZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIHNoKCl7a2g9amg9bnVsbDtsaD0hMX12YXIgdGg9W107ZnVuY3Rpb24gdWgoKXtmb3IodmFyIGE9MDthPHRoLmxlbmd0aDthKyspdGhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDt0aC5sZW5ndGg9MH12YXIgdmg9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcix3aD1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx4aD0wLFI9bnVsbCxTPW51bGwsVD1udWxsLHloPSExLHpoPSExO2Z1bmN0aW9uIEFoKCl7dGhyb3cgRXJyb3IoeSgzMjEpKTt9ZnVuY3Rpb24gQmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIENoKGEsYixjLGQsZSxmKXt4aD1mO1I9YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO3ZoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/RGg6RWg7YT1jKGQsZSk7aWYoemgpe2Y9MDtkb3t6aD0hMTtpZighKDI1PmYpKXRocm93IEVycm9yKHkoMzAxKSk7Zis9MTtUPVM9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7dmguY3VycmVudD1GaDthPWMoZCxlKX13aGlsZSh6aCl9dmguY3VycmVudD1HaDtiPW51bGwhPT1TJiZudWxsIT09Uy5uZXh0O3hoPTA7VD1TPVI9bnVsbDt5aD0hMTtpZihiKXRocm93IEVycm9yKHkoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gSGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWE7cmV0dXJuIFR9XG5mdW5jdGlvbiBJaCgpe2lmKG51bGw9PT1TKXt2YXIgYT1SLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1TLm5leHQ7dmFyIGI9bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlOlQubmV4dDtpZihudWxsIT09YilUPWIsUz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeSgzMTApKTtTPWE7YT17bWVtb2l6ZWRTdGF0ZTpTLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlMuYmFzZVN0YXRlLGJhc2VRdWV1ZTpTLmJhc2VRdWV1ZSxxdWV1ZTpTLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hfXJldHVybiBUfWZ1bmN0aW9uIEpoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gS2goYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1TLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsubGFuZTtpZigoeGgmbCk9PT1sKW51bGwhPT1oJiYoaD1oLm5leHQ9e2xhbmU6MCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2Vsc2V7dmFyIG49e2xhbmU6bCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLFxuZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW4sZj1kKTpoPWgubmV4dD1uO1IubGFuZXN8PWw7RGd8PWx9az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIExoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWIuX2dldFZlcnNpb247ZD1kKGIuX3NvdXJjZSk7dmFyIGU9Yi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeTtpZihudWxsIT09ZSlhPWU9PT1kO2Vsc2UgaWYoYT1hLm11dGFibGVSZWFkTGFuZXMsYT0oeGgmYSk9PT1hKWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9ZCx0aC5wdXNoKGIpO2lmKGEpcmV0dXJuIGMoYi5fc291cmNlKTt0aC5wdXNoKGIpO3Rocm93IEVycm9yKHkoMzUwKSk7fVxuZnVuY3Rpb24gTmgoYSxiLGMsZCl7dmFyIGU9VTtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih5KDM0OSkpO3ZhciBmPWIuX2dldFZlcnNpb24sZz1mKGIuX3NvdXJjZSksaD12aC5jdXJyZW50LGs9aC51c2VTdGF0ZShmdW5jdGlvbigpe3JldHVybiBNaChlLGIsYyl9KSxsPWtbMV0sbj1rWzBdO2s9VDt2YXIgQT1hLm1lbW9pemVkU3RhdGUscD1BLnJlZnMsQz1wLmdldFNuYXBzaG90LHg9QS5zb3VyY2U7QT1BLnN1YnNjcmliZTt2YXIgdz1SO2EubWVtb2l6ZWRTdGF0ZT17cmVmczpwLHNvdXJjZTpiLHN1YnNjcmliZTpkfTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3AuZ2V0U25hcHNob3Q9YztwLnNldFNuYXBzaG90PWw7dmFyIGE9ZihiLl9zb3VyY2UpO2lmKCFIZShnLGEpKXthPWMoYi5fc291cmNlKTtIZShuLGEpfHwobChhKSxhPUlnKHcpLGUubXV0YWJsZVJlYWRMYW5lc3w9YSZlLnBlbmRpbmdMYW5lcyk7YT1lLm11dGFibGVSZWFkTGFuZXM7ZS5lbnRhbmdsZWRMYW5lc3w9YTtmb3IodmFyIGQ9XG5lLmVudGFuZ2xlbWVudHMsaD1hOzA8aDspe3ZhciBrPTMxLVZjKGgpLHY9MTw8aztkW2tdfD1hO2gmPX52fX19LFtjLGIsZF0pO2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIGQoYi5fc291cmNlLGZ1bmN0aW9uKCl7dmFyIGE9cC5nZXRTbmFwc2hvdCxjPXAuc2V0U25hcHNob3Q7dHJ5e2MoYShiLl9zb3VyY2UpKTt2YXIgZD1JZyh3KTtlLm11dGFibGVSZWFkTGFuZXN8PWQmZS5wZW5kaW5nTGFuZXN9Y2F0Y2gocSl7YyhmdW5jdGlvbigpe3Rocm93IHE7fSl9fSl9LFtiLGRdKTtIZShDLGMpJiZIZSh4LGIpJiZIZShBLGQpfHwoYT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTpufSxhLmRpc3BhdGNoPWw9T2guYmluZChudWxsLFIsYSksay5xdWV1ZT1hLGsuYmFzZVF1ZXVlPW51bGwsbj1NaChlLGIsYyksay5tZW1vaXplZFN0YXRlPWsuYmFzZVN0YXRlPW4pO3JldHVybiBufVxuZnVuY3Rpb24gUGgoYSxiLGMpe3ZhciBkPUloKCk7cmV0dXJuIE5oKGQsYSxiLGMpfWZ1bmN0aW9uIFFoKGEpe3ZhciBiPUhoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gUmgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ui51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxSLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIFNoKGEpe3ZhciBiPUhoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9ZnVuY3Rpb24gVGgoKXtyZXR1cm4gSWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIFVoKGEsYixjLGQpe3ZhciBlPUhoKCk7Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIFZoKGEsYixjLGQpe3ZhciBlPUloKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PVMpe3ZhciBnPVMubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmQmgoZCxnLmRlcHMpKXtSaChiLGMsZixkKTtyZXR1cm59fVIuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLGYsZCl9ZnVuY3Rpb24gV2goYSxiKXtyZXR1cm4gVWgoNTE2LDQsYSxiKX1mdW5jdGlvbiBYaChhLGIpe3JldHVybiBWaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFZoKDQsMixhLGIpfWZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19XG5mdW5jdGlvbiAkaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMixaaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBhaSgpe31mdW5jdGlvbiBiaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRpKGEsYil7dmFyIGM9ZWcoKTtnZyg5OD5jPzk4OmMsZnVuY3Rpb24oKXthKCEwKX0pO2dnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBjPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXthKCExKSxiKCl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWN9fSl9XG5mdW5jdGlvbiBPaChhLGIsYyl7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9e2xhbmU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIucGVuZGluZztudWxsPT09Zz9mLm5leHQ9ZjooZi5uZXh0PWcubmV4dCxnLm5leHQ9Zik7Yi5wZW5kaW5nPWY7Zz1hLmFsdGVybmF0ZTtpZihhPT09Unx8bnVsbCE9PWcmJmc9PT1SKXpoPXloPSEwO2Vsc2V7aWYoMD09PWEubGFuZXMmJihudWxsPT09Z3x8MD09PWcubGFuZXMpJiYoZz1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWcpKXRyeXt2YXIgaD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZyhoLGMpO2YuZWFnZXJSZWR1Y2VyPWc7Zi5lYWdlclN0YXRlPWs7aWYoSGUoayxoKSlyZXR1cm59Y2F0Y2gobCl7fWZpbmFsbHl7fUpnKGEsZSxkKX19XG52YXIgR2g9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOkFoLHVzZUNvbnRleHQ6QWgsdXNlRWZmZWN0OkFoLHVzZUltcGVyYXRpdmVIYW5kbGU6QWgsdXNlTGF5b3V0RWZmZWN0OkFoLHVzZU1lbW86QWgsdXNlUmVkdWNlcjpBaCx1c2VSZWY6QWgsdXNlU3RhdGU6QWgsdXNlRGVidWdWYWx1ZTpBaCx1c2VEZWZlcnJlZFZhbHVlOkFoLHVzZVRyYW5zaXRpb246QWgsdXNlTXV0YWJsZVNvdXJjZTpBaCx1c2VPcGFxdWVJZGVudGlmaWVyOkFoLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRGg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7SGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6V2gsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFVoKDQsMixaaC5iaW5kKG51bGwsXG5iLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVWgoNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1IaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpTaCx1c2VTdGF0ZTpRaCx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9UWgoYSksYz1iWzBdLGQ9YlsxXTtXaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247XG53aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9UWgoITEpLGI9YVswXTthPWRpLmJpbmQobnVsbCxhWzFdKTtTaChhKTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtkLm1lbW9pemVkU3RhdGU9e3JlZnM6e2dldFNuYXBzaG90OmIsc2V0U25hcHNob3Q6bnVsbH0sc291cmNlOmEsc3Vic2NyaWJlOmN9O3JldHVybiBOaChkLGEsYixjKX0sdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe2lmKGxoKXt2YXIgYT0hMSxiPXVmKGZ1bmN0aW9uKCl7YXx8KGE9ITAsYyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSkpO3Rocm93IEVycm9yKHkoMzU1KSk7fSksYz1RaChiKVsxXTswPT09KFIubW9kZSYyKSYmKFIuZmxhZ3N8PTUxNixSaCg1LGZ1bmN0aW9uKCl7YyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSl9LFxudm9pZCAwLG51bGwpKTtyZXR1cm4gYn1iPVwicjpcIisodGYrKykudG9TdHJpbmcoMzYpO1FoKGIpO3JldHVybiBifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEVoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6S2gsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUtoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9S2goSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxGaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOkxoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBMaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1MaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUxoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBMaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sZWk9cmEuUmVhY3RDdXJyZW50T3duZXIsdWc9ITE7ZnVuY3Rpb24gZmkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9aZyhiLG51bGwsYyxkKTpZZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBnaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dGcoYixlKTtkPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhamkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsa2koYSxiLGcsZCxlLGYpO2E9VmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKDA9PT0oZSZmKSYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpKZSxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBoaShhLGIsZik7Yi5mbGFnc3w9MTthPVRnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24ga2koYSxiLGMsZCxlLGYpe2lmKG51bGwhPT1hJiZKZShhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYpaWYodWc9ITEsMCE9PShmJmUpKTAhPT0oYS5mbGFncyYxNjM4NCkmJih1Zz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLGhpKGEsYixmKTtyZXR1cm4gbGkoYSxiLGMsZCxmKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlfHxcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixjKTtlbHNlIGlmKDAhPT0oYyYxMDczNzQxODI0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLG51bGwhPT1mP2YuYmFzZUxhbmVzOmMpO2Vsc2UgcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YX0sbmkoYixhKSxudWxsO2Vsc2UgbnVsbCE9PWY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLG5pKGIsZCk7ZmkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBvaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD0xMjh9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlKXt2YXIgZj1GZihjKT9EZjpNLmN1cnJlbnQ7Zj1FZihiLGYpO3RnKGIsZSk7Yz1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUpe2lmKEZmKGMpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7dGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksTWcoYixjLGQpLE9nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXZnKGwpOihsPUZmKGMpP0RmOk0uY3VycmVudCxsPUVmKGIsbCkpO3ZhciBuPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZOZyhiLGcsZCxsKTt3Zz0hMTt2YXIgcD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxwIT09a3x8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG4mJihHZyhiLGMsbixkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9d2d8fExnKGIsYyxoLGQscCxrLGwpKT8oQXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO3lnKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bGcoYi50eXBlLGgpO2cucHJvcHM9bDtBPWIucGVuZGluZ1Byb3BzO3A9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9dmcoayk6KGs9RmYoYyk/RGY6TS5jdXJyZW50LGs9RWYoYixrKSk7dmFyIEM9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG49XCJmdW5jdGlvblwiPT09dHlwZW9mIEN8fFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1BfHxwIT09aykmJk5nKGIsZyxkLGspO3dnPSExO3A9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7aCE9PUF8fHAhPT14fHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyYmKEdnKGIsYyxDLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobD13Z3x8TGcoYixjLGwsZCxwLHgsaykpPyhufHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fFxuaD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxkPSExKX1yZXR1cm4gcWkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gcWkoYSxiLGMsZCxlLGYpe29pKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJktmKGIsYywhMSksaGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7ZWkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1ZZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVlnKGIsbnVsbCxoLGYpKTpmaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZLZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHJpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/SGYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmSGYoYSxiLmNvbnRleHQsITEpO2VoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBzaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5TGFuZTowfTtcbmZ1bmN0aW9uIHRpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPVAuY3VycmVudCxmPSExLGc7KGc9MCE9PShiLmZsYWdzJjY0KSl8fChnPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7Zz8oZj0hMCxiLmZsYWdzJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1kLmZhbGxiYWNrfHwhMD09PWQudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChlfD0xKTtJKFAsZSYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZC5mYWxsYmFjayYmcGgoYik7YT1kLmNoaWxkcmVuO2U9ZC5mYWxsYmFjaztpZihmKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LGIubWVtb2l6ZWRTdGF0ZT1zaSxhO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgZC51bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LFxuYi5tZW1vaXplZFN0YXRlPXNpLGIubGFuZXM9MzM1NTQ0MzIsYTtjPXZpKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmF9LGIubW9kZSxjLG51bGwpO2MucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9Y31pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXtpZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9OntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWlmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306XG57YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1hLm1vZGUsZj1hLmNoaWxkO2I9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpifTswPT09KGUmMikmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1iKTpmPXZpKGIsZSwwLG51bGwpO2M9WGcoYyxlLGQsbnVsbCk7Zi5yZXR1cm49YTtjLnJldHVybj1hO2Yuc2libGluZz1jO2EuY2hpbGQ9ZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHhpKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1UZyhlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYyKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGEubmV4dEVmZmVjdD1udWxsLGEuZmxhZ3M9OCxiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1hKTtyZXR1cm4gYi5jaGlsZD1jfVxuZnVuY3Rpb24gd2koYSxiLGMsZCxlKXt2YXIgZj1iLm1vZGUsZz1hLmNoaWxkO2E9Zy5zaWJsaW5nO3ZhciBoPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Y307MD09PShmJjIpJiZiLmNoaWxkIT09Zz8oYz1iLmNoaWxkLGMuY2hpbGRMYW5lcz0wLGMucGVuZGluZ1Byb3BzPWgsZz1jLmxhc3RFZmZlY3QsbnVsbCE9PWc/KGIuZmlyc3RFZmZlY3Q9Yy5maXJzdEVmZmVjdCxiLmxhc3RFZmZlY3Q9ZyxnLm5leHRFZmZlY3Q9bnVsbCk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbCk6Yz1UZyhnLGgpO251bGwhPT1hP2Q9VGcoYSxkKTooZD1YZyhkLGYsZSxudWxsKSxkLmZsYWdzfD0yKTtkLnJldHVybj1iO2MucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yi5jaGlsZD1jO3JldHVybiBkfWZ1bmN0aW9uIHlpKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO3NnKGEucmV0dXJuLGIpfVxuZnVuY3Rpb24gemkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIEFpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7ZmkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1QLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnlpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXlpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoUCxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt6aShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1paChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9emkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnppKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBoaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7RGd8PWIubGFuZXM7aWYoMCE9PShjJmIuY2hpbGRMYW5lcykpe2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih5KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1UZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9VGcoYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1yZXR1cm4gbnVsbH12YXIgQmksQ2ksRGksRWk7XG5CaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Q2k9ZnVuY3Rpb24oKXt9O1xuRGk9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO2RoKGFoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGUpO2Q9ZWIoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPW0oe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1qZil9dmIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1cbmwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiYoY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8XG4oYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkcoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTpcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09R2E/ay50b1N0cmluZygpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixcbmMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtFaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtmdW5jdGlvbiBGaShhLGIpe2lmKCFsaClzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7ZD1iLnN0YXRlTm9kZTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpcmgoYik/Yi5mbGFnc3w9NDpkLmh5ZHJhdGV8fChiLmZsYWdzfD0yNTYpO0NpKGIpO3JldHVybiBudWxsO2Nhc2UgNTpoaChiKTt2YXIgZT1kaChjaC5jdXJyZW50KTtjPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGkoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09XG5iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO3JldHVybiBudWxsfWE9ZGgoYWguY3VycmVudCk7aWYocmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2Rbd2ZdPWI7ZFt4Zl09Zjtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixkKTtHKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPFhlLmxlbmd0aDthKyspRyhYZVthXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZCk7RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxHKFwiaW52YWxpZFwiLGQpfXZiKGMsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWYuaGFzT3duUHJvcGVydHkoZykmJihlPWZbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGU/ZC50ZXh0Q29udGVudCE9PWUmJihhPVtcImNoaWxkcmVuXCIsZV0pOlwibnVtYmVyXCI9PT10eXBlb2YgZSYmZC50ZXh0Q29udGVudCE9PVwiXCIrZSYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2VdKTpjYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZSYmXCJvblNjcm9sbFwiPT09ZyYmRyhcInNjcm9sbFwiLGQpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7Y2IoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1cbmpmKX1kPWE7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O2E9PT1rYi5odG1sJiYoYT1sYihjKSk7YT09PWtiLmh0bWw/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW3dmXT1iO2FbeGZdPWQ7QmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9d2IoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixhKTtHKFwiY2xvc2VcIixhKTtcbmU9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxYZS5sZW5ndGg7ZSsrKUcoWGVbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsYSk7RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1cbmdiKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH12YihjLGUpO3ZhciBoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/dGIoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm9iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1jfHxcIlwiIT09aykmJnBiKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZwYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGNhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkcoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZxYShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2NiKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1qZil9bWYoYyxkKSYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKUVpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO1xuYz1kaChjaC5jdXJyZW50KTtkaChhaC5jdXJyZW50KTtyaChiKT8oZD1iLnN0YXRlTm9kZSxjPWIubWVtb2l6ZWRQcm9wcyxkW3dmXT1iLGQubm9kZVZhbHVlIT09YyYmKGIuZmxhZ3N8PTQpKTooZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbd2ZdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJnJoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZihkJiYhYyYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KFAuY3VycmVudCYxKSkwPT09ViYmKFY9Myk7ZWxzZXtpZigwPT09Vnx8Mz09PVYpVj1cbjQ7bnVsbD09PVV8fDA9PT0oRGcmMTM0MjE3NzI3KSYmMD09PShIaSYxMzQyMTc3MjcpfHxJaShVLFcpfWlmKGR8fGMpYi5mbGFnc3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksQ2koYiksbnVsbD09PWEmJmNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYiksbnVsbDtjYXNlIDE3OnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAxOTpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Y9MCE9PShiLmZsYWdzJjY0KTtnPWQucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGYpRmkoZCwhMSk7ZWxzZXtpZigwIT09Vnx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9aWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTY0O0ZpKGQsITEpO2Y9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGIudXBkYXRlUXVldWU9ZixiLmZsYWdzfD00KTtcbm51bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MixmLm5leHRFZmZlY3Q9bnVsbCxmLmZpcnN0RWZmZWN0PW51bGwsZi5sYXN0RWZmZWN0PW51bGwsZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLFxuZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztJKFAsUC5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1hLnNpYmxpbmd9bnVsbCE9PWQudGFpbCYmTygpPkppJiYoYi5mbGFnc3w9NjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKX1lbHNle2lmKCFmKWlmKGE9aWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTY0LGY9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEZpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFsaClyZXR1cm4gYj1iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKk8oKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5KaSYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD1cbjY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMik7ZC5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGQubGFzdD1nKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9TygpLGMuc2libGluZz1udWxsLGI9UC5jdXJyZW50LEkoUCxmP2ImMXwyOmImMSksYyk6bnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT0obnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSkmJlwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIiE9PWQubW9kZSYmKGIuZmxhZ3N8PTQpLG51bGx9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBMaShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpGZihhLnR5cGUpJiZHZigpO3ZhciBiPWEuZmxhZ3M7cmV0dXJuIGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7Yj1hLmZsYWdzO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IoeSgyODUpKTthLmZsYWdzPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBoaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoUCksYj1hLmZsYWdzLGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChQKSxudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGEpLG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBNaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1RYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZX19ZnVuY3Rpb24gTmkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFBpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FpfHwoUWk9ITAsUmk9ZCk7TmkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBTaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7TmkoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVRpP1RpPW5ldyBTZXQoW3RoaXNdKTpUaS5hZGQodGhpcyksTmkoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9dmFyIFVpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O1xuZnVuY3Rpb24gVmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7V2koYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfWZ1bmN0aW9uIFhpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmZsYWdzJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6bGcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmIuZmxhZ3MmMjU2JiZxZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtyZXR1cm47Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBZaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97aWYoMz09PShhLnRhZyYzKSl7dmFyIGQ9YS5jcmVhdGU7YS5kZXN0cm95PWQoKX1hPWEubmV4dH13aGlsZShhIT09Yil9Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97dmFyIGU9YTtkPWUubmV4dDtlPWUudGFnOzAhPT0oZSY0KSYmMCE9PShlJjEpJiYoWmkoYyxhKSwkaShjLGEpKTthPWR9d2hpbGUoYSE9PWIpfXJldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtjLmZsYWdzJjQmJihudWxsPT09Yj9hLmNvbXBvbmVudERpZE1vdW50KCk6KGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6bGcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyksYS5jb21wb25lbnREaWRVcGRhdGUoZCxcbmIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKSkpO2I9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmRWcoYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1FZyhjLGIsYSl9cmV0dXJuO2Nhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmZsYWdzJjQmJm1mKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmQ2MoYykpKSk7XG5yZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpjYXNlIDIzOmNhc2UgMjQ6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gYWooYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZD1kLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnNldFByb3BlcnR5P2Quc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6ZC5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNiKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKCgyMyE9PWMudGFnJiYyNCE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHxjPT09YSkmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09XG5hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gYmooYSxiKXtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtNZi5vbkNvbW1pdEZpYmVyVW5tb3VudChMZixiKX1jYXRjaChmKXt9c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBjPWE9YS5uZXh0O2Rve3ZhciBkPWMsZT1kLmRlc3Ryb3k7ZD1kLnRhZztpZih2b2lkIDAhPT1lKWlmKDAhPT0oZCY0KSlaaShiLGMpO2Vsc2V7ZD1iO3RyeXtlKCl9Y2F0Y2goZil7V2koZCxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWEpfWJyZWFrO2Nhc2UgMTpWaShiKTthPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXthLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxhLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxhLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7V2koYixcbmYpfWJyZWFrO2Nhc2UgNTpWaShiKTticmVhaztjYXNlIDQ6Y2ooYSxiKX19ZnVuY3Rpb24gZGooYSl7YS5hbHRlcm5hdGU9bnVsbDthLmNoaWxkPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnJldHVybj1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBlaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIGZqKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKGVqKGIpKWJyZWFrIGE7Yj1iLnJldHVybn10aHJvdyBFcnJvcih5KDE2MCkpO312YXIgYz1iO2I9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDE2MSkpO31jLmZsYWdzJjE2JiYocGIoYixcIlwiKSxjLmZsYWdzJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8ZWooYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5mbGFncyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PVxuYy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZmxhZ3MmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9naihhLGMsYik6aGooYSxjLGIpfVxuZnVuY3Rpb24gZ2ooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPWpmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspZ2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gaGooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihoaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWhqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGNqKGEsYil7Zm9yKHZhciBjPWIsZD0hMSxlLGY7Oyl7aWYoIWQpe2Q9Yy5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1kKXRocm93IEVycm9yKHkoMTYwKSk7ZT1kLnN0YXRlTm9kZTtzd2l0Y2goZC50YWcpe2Nhc2UgNTpmPSExO2JyZWFrIGE7Y2FzZSAzOmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYTtjYXNlIDQ6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhfWQ9ZC5yZXR1cm59ZD0hMH1pZig1PT09Yy50YWd8fDY9PT1jLnRhZyl7YTpmb3IodmFyIGc9YSxoPWMsaz1oOzspaWYoYmooZyxrKSxudWxsIT09ay5jaGlsZCYmNCE9PWsudGFnKWsuY2hpbGQucmV0dXJuPWssaz1rLmNoaWxkO2Vsc2V7aWYoaz09PWgpYnJlYWsgYTtmb3IoO251bGw9PT1rLnNpYmxpbmc7KXtpZihudWxsPT09ay5yZXR1cm58fGsucmV0dXJuPT09aClicmVhayBhO2s9ay5yZXR1cm59ay5zaWJsaW5nLnJldHVybj1rLnJldHVybjtrPWsuc2libGluZ31mPyhnPWUsaD1jLnN0YXRlTm9kZSxcbjg9PT1nLm5vZGVUeXBlP2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTpnLnJlbW92ZUNoaWxkKGgpKTplLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1jLnRhZyl7aWYobnVsbCE9PWMuY2hpbGQpe2U9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKGJqKGEsYyksbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJuOzQ9PT1jLnRhZyYmKGQ9ITEpfWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gaWooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOnZhciBjPWIudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG8gMz09PShkLnRhZyYzKSYmKGE9ZC5kZXN0cm95LGQuZGVzdHJveT12b2lkIDAsdm9pZCAwIT09YSYmYSgpKSxkPWQubmV4dDt3aGlsZShkIT09Yyl9cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OmM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7ZD1iLm1lbW9pemVkUHJvcHM7dmFyIGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbeGZdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJiRhKGMsZCk7d2IoYSxlKTtiPXdiKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPVxuMil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3RiKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/cGIoYyxoKTpxYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6YWIoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGY9ZC52YWx1ZSxudWxsIT1mP2ZiKGMsISFkLm11bHRpcGxlLGYsITEpOmEhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9mYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1cbmIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmM9Yi5zdGF0ZU5vZGU7Yy5oeWRyYXRlJiYoYy5oeWRyYXRlPSExLENjKGMuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGwhPT1iLm1lbW9pemVkU3RhdGUmJihqaj1PKCksYWooYi5jaGlsZCwhMCkpO2tqKGIpO3JldHVybjtjYXNlIDE5OmtqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybjtjYXNlIDIzOmNhc2UgMjQ6YWooYixudWxsIT09Yi5tZW1vaXplZFN0YXRlKTtyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9ZnVuY3Rpb24ga2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgVWkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1sai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIG1qKGEsYil7cmV0dXJuIG51bGwhPT1hJiYoYT1hLm1lbW9pemVkU3RhdGUsbnVsbD09PWF8fG51bGwhPT1hLmRlaHlkcmF0ZWQpPyhiPWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YiYmbnVsbD09PWIuZGVoeWRyYXRlZCk6ITF9dmFyIG5qPU1hdGguY2VpbCxvaj1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHBqPXJhLlJlYWN0Q3VycmVudE93bmVyLFg9MCxVPW51bGwsWT1udWxsLFc9MCxxaj0wLHJqPUJmKDApLFY9MCxzaj1udWxsLHRqPTAsRGc9MCxIaT0wLHVqPTAsdmo9bnVsbCxqaj0wLEppPUluZmluaXR5O2Z1bmN0aW9uIHdqKCl7Smk9TygpKzUwMH12YXIgWj1udWxsLFFpPSExLFJpPW51bGwsVGk9bnVsbCx4aj0hMSx5aj1udWxsLHpqPTkwLEFqPVtdLEJqPVtdLENqPW51bGwsRGo9MCxFaj1udWxsLEZqPS0xLEdqPTAsSGo9MCxJaj1udWxsLEpqPSExO2Z1bmN0aW9uIEhnKCl7cmV0dXJuIDAhPT0oWCY0OCk/TygpOi0xIT09Rmo/Rmo6Rmo9TygpfVxuZnVuY3Rpb24gSWcoYSl7YT1hLm1vZGU7aWYoMD09PShhJjIpKXJldHVybiAxO2lmKDA9PT0oYSY0KSlyZXR1cm4gOTk9PT1lZygpPzE6MjswPT09R2omJihHaj10aik7aWYoMCE9PWtnLnRyYW5zaXRpb24pezAhPT1IaiYmKEhqPW51bGwhPT12aj92ai5wZW5kaW5nTGFuZXM6MCk7YT1Hajt2YXIgYj00MTg2MTEyJn5IajtiJj0tYjswPT09YiYmKGE9NDE4NjExMiZ+YSxiPWEmLWEsMD09PWImJihiPTgxOTIpKTtyZXR1cm4gYn1hPWVnKCk7MCE9PShYJjQpJiY5OD09PWE/YT1YYygxMixHaik6KGE9U2MoYSksYT1YYyhhLEdqKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZyhhLGIsYyl7aWYoNTA8RGopdGhyb3cgRGo9MCxFaj1udWxsLEVycm9yKHkoMTg1KSk7YT1LaihhLGIpO2lmKG51bGw9PT1hKXJldHVybiBudWxsOyRjKGEsYixjKTthPT09VSYmKEhpfD1iLDQ9PT1WJiZJaShhLFcpKTt2YXIgZD1lZygpOzE9PT1iPzAhPT0oWCY4KSYmMD09PShYJjQ4KT9MaihhKTooTWooYSxjKSwwPT09WCYmKHdqKCksaWcoKSkpOigwPT09KFgmNCl8fDk4IT09ZCYmOTkhPT1kfHwobnVsbD09PUNqP0NqPW5ldyBTZXQoW2FdKTpDai5hZGQoYSkpLE1qKGEsYykpO3ZqPWF9ZnVuY3Rpb24gS2ooYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfVxuZnVuY3Rpb24gTWooYSxiKXtmb3IodmFyIGM9YS5jYWxsYmFja05vZGUsZD1hLnN1c3BlbmRlZExhbmVzLGU9YS5waW5nZWRMYW5lcyxmPWEuZXhwaXJhdGlvblRpbWVzLGc9YS5wZW5kaW5nTGFuZXM7MDxnOyl7dmFyIGg9MzEtVmMoZyksaz0xPDxoLGw9ZltoXTtpZigtMT09PWwpe2lmKDA9PT0oayZkKXx8MCE9PShrJmUpKXtsPWI7UmMoayk7dmFyIG49RjtmW2hdPTEwPD1uP2wrMjUwOjY8PW4/bCs1RTM6LTF9fWVsc2UgbDw9YiYmKGEuZXhwaXJlZExhbmVzfD1rKTtnJj1+a31kPVVjKGEsYT09PVU/VzowKTtiPUY7aWYoMD09PWQpbnVsbCE9PWMmJihjIT09WmYmJlBmKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTApO2Vsc2V7aWYobnVsbCE9PWMpe2lmKGEuY2FsbGJhY2tQcmlvcml0eT09PWIpcmV0dXJuO2MhPT1aZiYmUGYoYyl9MTU9PT1iPyhjPUxqLmJpbmQobnVsbCxhKSxudWxsPT09YWc/KGFnPVtjXSxiZz1PZihVZixqZykpOmFnLnB1c2goYyksXG5jPVpmKToxND09PWI/Yz1oZyg5OSxMai5iaW5kKG51bGwsYSkpOihjPVRjKGIpLGM9aGcoYyxOai5iaW5kKG51bGwsYSkpKTthLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIE5qKGEpe0ZqPS0xO0hqPUdqPTA7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBiPWEuY2FsbGJhY2tOb2RlO2lmKE9qKCkmJmEuY2FsbGJhY2tOb2RlIT09YilyZXR1cm4gbnVsbDt2YXIgYz1VYyhhLGE9PT1VP1c6MCk7aWYoMD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9Yzt2YXIgZT1YO1h8PTE2O3ZhciBmPVBqKCk7aWYoVSE9PWF8fFchPT1kKXdqKCksUWooYSxkKTtkbyB0cnl7UmooKTticmVha31jYXRjaChoKXtTaihhLGgpfXdoaWxlKDEpO3FnKCk7b2ouY3VycmVudD1mO1g9ZTtudWxsIT09WT9kPTA6KFU9bnVsbCxXPTAsZD1WKTtpZigwIT09KHRqJkhpKSlRaihhLDApO2Vsc2UgaWYoMCE9PWQpezI9PT1kJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGM9V2MoYSksMCE9PWMmJihkPVRqKGEsYykpKTtpZigxPT09ZCl0aHJvdyBiPXNqLFFqKGEsMCksSWkoYSxjKSxNaihhLE8oKSksYjthLmZpbmlzaGVkV29yaz1cbmEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWM7c3dpdGNoKGQpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IoeSgzNDUpKTtjYXNlIDI6VWooYSk7YnJlYWs7Y2FzZSAzOklpKGEsYyk7aWYoKGMmNjI5MTQ1NjApPT09YyYmKGQ9amorNTAwLU8oKSwxMDxkKSl7aWYoMCE9PVVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmMpIT09Yyl7SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxkKTticmVha31VaihhKTticmVhaztjYXNlIDQ6SWkoYSxjKTtpZigoYyY0MTg2MTEyKT09PWMpYnJlYWs7ZD1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxjOyl7dmFyIGc9MzEtVmMoYyk7Zj0xPDxnO2c9ZFtnXTtnPmUmJihlPWcpO2MmPX5mfWM9ZTtjPU8oKS1jO2M9KDEyMD5jPzEyMDo0ODA+Yz80ODA6MTA4MD5jPzEwODA6MTkyMD5jPzE5MjA6M0UzPmM/M0UzOjQzMjA+XG5jPzQzMjA6MTk2MCpuaihjLzE5NjApKS1jO2lmKDEwPGMpe2EudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksYyk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA1OlVqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMjkpKTt9fU1qKGEsTygpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1iP05qLmJpbmQobnVsbCxhKTpudWxsfWZ1bmN0aW9uIElpKGEsYil7YiY9fnVqO2ImPX5IaTthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLVZjKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1cbmZ1bmN0aW9uIExqKGEpe2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTtPaigpO2lmKGE9PT1VJiYwIT09KGEuZXhwaXJlZExhbmVzJlcpKXt2YXIgYj1XO3ZhciBjPVRqKGEsYik7MCE9PSh0aiZIaSkmJihiPVVjKGEsYiksYz1UaihhLGIpKX1lbHNlIGI9VWMoYSwwKSxjPVRqKGEsYik7MCE9PWEudGFnJiYyPT09YyYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxiPVdjKGEpLDAhPT1iJiYoYz1UaihhLGIpKSk7aWYoMT09PWMpdGhyb3cgYz1zaixRaihhLDApLElpKGEsYiksTWooYSxPKCkpLGM7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtVaihhKTtNaihhLE8oKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBWaigpe2lmKG51bGwhPT1Dail7dmFyIGE9Q2o7Q2o9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSl7YS5leHBpcmVkTGFuZXN8PTI0JmEucGVuZGluZ0xhbmVzO01qKGEsTygpKX0pfWlnKCl9ZnVuY3Rpb24gV2ooYSxiKXt2YXIgYz1YO1h8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gWGooYSxiKXt2YXIgYz1YO1gmPS0yO1h8PTg7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gbmkoYSxiKXtJKHJqLHFqKTtxanw9Yjt0anw9Yn1mdW5jdGlvbiBLaSgpe3FqPXJqLmN1cnJlbnQ7SChyail9XG5mdW5jdGlvbiBRaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxwZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZHZigpO2JyZWFrO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2JyZWFrO2Nhc2UgNTpoaChkKTticmVhaztjYXNlIDQ6ZmgoKTticmVhaztjYXNlIDEzOkgoUCk7YnJlYWs7Y2FzZSAxOTpIKFApO2JyZWFrO2Nhc2UgMTA6cmcoZCk7YnJlYWs7Y2FzZSAyMzpjYXNlIDI0OktpKCl9Yz1jLnJldHVybn1VPWE7WT1UZyhhLmN1cnJlbnQsbnVsbCk7Vz1xaj10aj1iO1Y9MDtzaj1udWxsO3VqPUhpPURnPTB9XG5mdW5jdGlvbiBTaihhLGIpe2Rve3ZhciBjPVk7dHJ5e3FnKCk7dmguY3VycmVudD1HaDtpZih5aCl7Zm9yKHZhciBkPVIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9eWg9ITF9eGg9MDtUPVM9Uj1udWxsO3poPSExO3BqLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtWPTE7c2o9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1XO2guZmxhZ3N8PTIwNDg7aC5maXJzdEVmZmVjdD1oLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rO2lmKDA9PT0oaC5tb2RlJjIpKXt2YXIgbj1oLmFsdGVybmF0ZTtuPyhoLnVwZGF0ZVF1ZXVlPW4udXBkYXRlUXVldWUsaC5tZW1vaXplZFN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSxoLmxhbmVzPW4ubGFuZXMpOlxuKGgudXBkYXRlUXVldWU9bnVsbCxoLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIEE9MCE9PShQLmN1cnJlbnQmMSkscD1nO2Rve3ZhciBDO2lmKEM9MTM9PT1wLnRhZyl7dmFyIHg9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT14KUM9bnVsbCE9PXguZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciB3PXAubWVtb2l6ZWRQcm9wcztDPXZvaWQgMD09PXcuZmFsbGJhY2s/ITE6ITAhPT13LnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOkE/ITE6ITB9fWlmKEMpe3ZhciB6PXAudXBkYXRlUXVldWU7aWYobnVsbD09PXope3ZhciB1PW5ldyBTZXQ7dS5hZGQobCk7cC51cGRhdGVRdWV1ZT11fWVsc2Ugei5hZGQobCk7aWYoMD09PShwLm1vZGUmMikpe3AuZmxhZ3N8PTY0O2guZmxhZ3N8PTE2Mzg0O2guZmxhZ3MmPS0yOTgxO2lmKDE9PT1oLnRhZylpZihudWxsPT09aC5hbHRlcm5hdGUpaC50YWc9MTc7ZWxzZXt2YXIgdD16ZygtMSwxKTt0LnRhZz0yO0FnKGgsdCl9aC5sYW5lc3w9MTticmVhayBhfWs9XG52b2lkIDA7aD1iO3ZhciBxPWYucGluZ0NhY2hlO251bGw9PT1xPyhxPWYucGluZ0NhY2hlPW5ldyBPaSxrPW5ldyBTZXQscS5zZXQobCxrKSk6KGs9cS5nZXQobCksdm9pZCAwPT09ayYmKGs9bmV3IFNldCxxLnNldChsLGspKSk7aWYoIWsuaGFzKGgpKXtrLmFkZChoKTt2YXIgdj1Zai5iaW5kKG51bGwsZixsLGgpO2wudGhlbih2LHYpfXAuZmxhZ3N8PTQwOTY7cC5sYW5lcz1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7az1FcnJvcigoUmEoaC50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiKX01IT09ViYmKFY9Mik7az1NaShrLGgpO3A9XG5nO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOmY9aztwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEo9UGkocCxmLGIpO0JnKHAsSik7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciBLPXAudHlwZSxRPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5mbGFncyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgSy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1RJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgUS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhRKSkpKXtwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEw9U2kocCxmLGIpO0JnKHAsTCk7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WmooYyl9Y2F0Y2godmEpe2I9dmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIFBqKCl7dmFyIGE9b2ouY3VycmVudDtvai5jdXJyZW50PUdoO3JldHVybiBudWxsPT09YT9HaDphfWZ1bmN0aW9uIFRqKGEsYil7dmFyIGM9WDtYfD0xNjt2YXIgZD1QaigpO1U9PT1hJiZXPT09Ynx8UWooYSxiKTtkbyB0cnl7YWsoKTticmVha31jYXRjaChlKXtTaihhLGUpfXdoaWxlKDEpO3FnKCk7WD1jO29qLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcih5KDI2MSkpO1U9bnVsbDtXPTA7cmV0dXJuIFZ9ZnVuY3Rpb24gYWsoKXtmb3IoO251bGwhPT1ZOyliayhZKX1mdW5jdGlvbiBSaigpe2Zvcig7bnVsbCE9PVkmJiFRZigpOyliayhZKX1mdW5jdGlvbiBiayhhKXt2YXIgYj1jayhhLmFsdGVybmF0ZSxhLHFqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/WmooYSk6WT1iO3BqLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFpqKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMjA0OCkpe2M9R2koYyxiLHFqKTtpZihudWxsIT09Yyl7WT1jO3JldHVybn1jPWI7aWYoMjQhPT1jLnRhZyYmMjMhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8MCE9PShxaiYxMDczNzQxODI0KXx8MD09PShjLm1vZGUmNCkpe2Zvcih2YXIgZD0wLGU9Yy5jaGlsZDtudWxsIT09ZTspZHw9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZT1lLnNpYmxpbmc7Yy5jaGlsZExhbmVzPWR9bnVsbCE9PWEmJjA9PT0oYS5mbGFncyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxudWxsIT09Yi5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QpLDE8Yi5mbGFncyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iOmEuZmlyc3RFZmZlY3Q9YixhLmxhc3RFZmZlY3Q9YikpfWVsc2V7Yz1MaShiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MjA0NztZPWM7cmV0dXJufW51bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmZsYWdzfD0yMDQ4KX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVYmJihWPTUpfWZ1bmN0aW9uIFVqKGEpe3ZhciBiPWVnKCk7Z2coOTksZGsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZGsoYSxiKXtkbyBPaigpO3doaWxlKG51bGwhPT15aik7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih5KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7dmFyIGQ9Yy5sYW5lc3xjLmNoaWxkTGFuZXMsZT1kLGY9YS5wZW5kaW5nTGFuZXMmfmU7YS5wZW5kaW5nTGFuZXM9ZTthLnN1c3BlbmRlZExhbmVzPTA7YS5waW5nZWRMYW5lcz0wO2EuZXhwaXJlZExhbmVzJj1lO2EubXV0YWJsZVJlYWRMYW5lcyY9ZTthLmVudGFuZ2xlZExhbmVzJj1lO2U9YS5lbnRhbmdsZW1lbnRzO2Zvcih2YXIgZz1hLmV2ZW50VGltZXMsaD1hLmV4cGlyYXRpb25UaW1lczswPGY7KXt2YXIgaz0zMS1WYyhmKSxsPTE8PGs7ZVtrXT0wO2dba109LTE7aFtrXT0tMTtmJj1+bH1udWxsIT09XG5DaiYmMD09PShkJjI0KSYmQ2ouaGFzKGEpJiZDai5kZWxldGUoYSk7YT09PVUmJihZPVU9bnVsbCxXPTApOzE8Yy5mbGFncz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGQ9Yy5maXJzdEVmZmVjdCk6ZD1jOmQ9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZCl7ZT1YO1h8PTMyO3BqLmN1cnJlbnQ9bnVsbDtrZj1mZDtnPU5lKCk7aWYoT2UoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTppZihoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdywobD1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKSkmJjAhPT1sLnJhbmdlQ291bnQpe2g9bC5hbmNob3JOb2RlO2Y9bC5hbmNob3JPZmZzZXQ7az1sLmZvY3VzTm9kZTtsPWwuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaCh2YSl7aD1udWxsO1xuYnJlYWsgYX12YXIgbj0wLEE9LTEscD0tMSxDPTAseD0wLHc9Zyx6PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt3IT09aHx8MCE9PWYmJjMhPT13Lm5vZGVUeXBlfHwoQT1uK2YpO3chPT1rfHwwIT09bCYmMyE9PXcubm9kZVR5cGV8fChwPW4rbCk7Mz09PXcubm9kZVR5cGUmJihuKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT13LmZpcnN0Q2hpbGQpKWJyZWFrO3o9dzt3PXV9Zm9yKDs7KXtpZih3PT09ZylicmVhayBiO3o9PT1oJiYrK0M9PT1mJiYoQT1uKTt6PT09ayYmKyt4PT09bCYmKHA9bik7aWYobnVsbCE9PSh1PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9ejt6PXcucGFyZW50Tm9kZX13PXV9aD0tMT09PUF8fC0xPT09cD9udWxsOntzdGFydDpBLGVuZDpwfX1lbHNlIGg9bnVsbDtoPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9bnVsbDtsZj17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtJaj1udWxsO0pqPSExO1o9ZDtkbyB0cnl7ZWsoKX1jYXRjaCh2YSl7aWYobnVsbD09PVxuWil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtJaj1udWxsO1o9ZDtkbyB0cnl7Zm9yKGc9YTtudWxsIT09Wjspe3ZhciB0PVouZmxhZ3M7dCYxNiYmcGIoWi5zdGF0ZU5vZGUsXCJcIik7aWYodCYxMjgpe3ZhciBxPVouYWx0ZXJuYXRlO2lmKG51bGwhPT1xKXt2YXIgdj1xLnJlZjtudWxsIT09diYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB2P3YobnVsbCk6di5jdXJyZW50PW51bGwpfX1zd2l0Y2godCYxMDM4KXtjYXNlIDI6ZmooWik7Wi5mbGFncyY9LTM7YnJlYWs7Y2FzZSA2OmZqKFopO1ouZmxhZ3MmPS0zO2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgMTAyNDpaLmZsYWdzJj0tMTAyNTticmVhaztjYXNlIDEwMjg6Wi5mbGFncyY9LTEwMjU7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA0OmlqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgODpoPVo7Y2ooZyxoKTt2YXIgSj1oLmFsdGVybmF0ZTtkaihoKTtudWxsIT09XG5KJiZkaihKKX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO3Y9bGY7cT1OZSgpO3Q9di5mb2N1c2VkRWxlbTtnPXYuc2VsZWN0aW9uUmFuZ2U7aWYocSE9PXQmJnQmJnQub3duZXJEb2N1bWVudCYmTWUodC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0KSl7bnVsbCE9PWcmJk9lKHQpJiYocT1nLnN0YXJ0LHY9Zy5lbmQsdm9pZCAwPT09diYmKHY9cSksXCJzZWxlY3Rpb25TdGFydFwiaW4gdD8odC5zZWxlY3Rpb25TdGFydD1xLHQuc2VsZWN0aW9uRW5kPU1hdGgubWluKHYsdC52YWx1ZS5sZW5ndGgpKToodj0ocT10Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmcS5kZWZhdWx0Vmlld3x8d2luZG93LHYuZ2V0U2VsZWN0aW9uJiYodj12LmdldFNlbGVjdGlvbigpLGg9dC50ZXh0Q29udGVudC5sZW5ndGgsSj1NYXRoLm1pbihnLnN0YXJ0LGgpLGc9dm9pZCAwPT09XG5nLmVuZD9KOk1hdGgubWluKGcuZW5kLGgpLCF2LmV4dGVuZCYmSj5nJiYoaD1nLGc9SixKPWgpLGg9TGUodCxKKSxmPUxlKHQsZyksaCYmZiYmKDEhPT12LnJhbmdlQ291bnR8fHYuYW5jaG9yTm9kZSE9PWgubm9kZXx8di5hbmNob3JPZmZzZXQhPT1oLm9mZnNldHx8di5mb2N1c05vZGUhPT1mLm5vZGV8fHYuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkmJihxPXEuY3JlYXRlUmFuZ2UoKSxxLnNldFN0YXJ0KGgubm9kZSxoLm9mZnNldCksdi5yZW1vdmVBbGxSYW5nZXMoKSxKPmc/KHYuYWRkUmFuZ2UocSksdi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KHEuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksdi5hZGRSYW5nZShxKSkpKSkpO3E9W107Zm9yKHY9dDt2PXYucGFyZW50Tm9kZTspMT09PXYubm9kZVR5cGUmJnEucHVzaCh7ZWxlbWVudDp2LGxlZnQ6di5zY3JvbGxMZWZ0LHRvcDp2LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0LmZvY3VzJiZ0LmZvY3VzKCk7Zm9yKHQ9XG4wO3Q8cS5sZW5ndGg7dCsrKXY9cVt0XSx2LmVsZW1lbnQuc2Nyb2xsTGVmdD12LmxlZnQsdi5lbGVtZW50LnNjcm9sbFRvcD12LnRvcH1mZD0hIWtmO2xmPWtmPW51bGw7YS5jdXJyZW50PWM7Wj1kO2RvIHRyeXtmb3IodD1hO251bGwhPT1aOyl7dmFyIEs9Wi5mbGFncztLJjM2JiZZaSh0LFouYWx0ZXJuYXRlLFopO2lmKEsmMTI4KXtxPXZvaWQgMDt2YXIgUT1aLnJlZjtpZihudWxsIT09USl7dmFyIEw9Wi5zdGF0ZU5vZGU7c3dpdGNoKFoudGFnKXtjYXNlIDU6cT1MO2JyZWFrO2RlZmF1bHQ6cT1MfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBRP1EocSk6US5jdXJyZW50PXF9fVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7Wj1udWxsOyRmKCk7WD1lfWVsc2UgYS5jdXJyZW50PWM7aWYoeGopeGo9ITEseWo9YSx6aj1iO2Vsc2UgZm9yKFo9ZDtudWxsIT09WjspYj1cbloubmV4dEVmZmVjdCxaLm5leHRFZmZlY3Q9bnVsbCxaLmZsYWdzJjgmJihLPVosSy5zaWJsaW5nPW51bGwsSy5zdGF0ZU5vZGU9bnVsbCksWj1iO2Q9YS5wZW5kaW5nTGFuZXM7MD09PWQmJihUaT1udWxsKTsxPT09ZD9hPT09RWo/RGorKzooRGo9MCxFaj1hKTpEaj0wO2M9Yy5zdGF0ZU5vZGU7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7TWYub25Db21taXRGaWJlclJvb3QoTGYsYyx2b2lkIDAsNjQ9PT0oYy5jdXJyZW50LmZsYWdzJjY0KSl9Y2F0Y2godmEpe31NaihhLE8oKSk7aWYoUWkpdGhyb3cgUWk9ITEsYT1SaSxSaT1udWxsLGE7aWYoMCE9PShYJjgpKXJldHVybiBudWxsO2lnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBlaygpe2Zvcig7bnVsbCE9PVo7KXt2YXIgYT1aLmFsdGVybmF0ZTtKanx8bnVsbD09PUlqfHwoMCE9PShaLmZsYWdzJjgpP2RjKFosSWopJiYoSmo9ITApOjEzPT09Wi50YWcmJm1qKGEsWikmJmRjKFosSWopJiYoSmo9ITApKTt2YXIgYj1aLmZsYWdzOzAhPT0oYiYyNTYpJiZYaShhLFopOzA9PT0oYiY1MTIpfHx4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKTtaPVoubmV4dEVmZmVjdH19ZnVuY3Rpb24gT2ooKXtpZig5MCE9PXpqKXt2YXIgYT05Nzx6aj85Nzp6ajt6aj05MDtyZXR1cm4gZ2coYSxmayl9cmV0dXJuITF9ZnVuY3Rpb24gJGkoYSxiKXtBai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9ZnVuY3Rpb24gWmkoYSxiKXtCai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9XG5mdW5jdGlvbiBmaygpe2lmKG51bGw9PT15ailyZXR1cm4hMTt2YXIgYT15ajt5aj1udWxsO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMzEpKTt2YXIgYj1YO1h8PTMyO3ZhciBjPUJqO0JqPVtdO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7dmFyIGU9Y1tkXSxmPWNbZCsxXSxnPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKXRyeXtnKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1jPUFqO0FqPVtdO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKz0yKXtlPWNbZF07Zj1jW2QrMV07dHJ5e3ZhciBoPWUuY3JlYXRlO2UuZGVzdHJveT1oKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1mb3IoaD1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWg7KWE9aC5uZXh0RWZmZWN0LGgubmV4dEVmZmVjdD1udWxsLGguZmxhZ3MmOCYmKGguc2libGluZz1cbm51bGwsaC5zdGF0ZU5vZGU9bnVsbCksaD1hO1g9YjtpZygpO3JldHVybiEwfWZ1bmN0aW9uIGdrKGEsYixjKXtiPU1pKGMsYik7Yj1QaShhLGIsMSk7QWcoYSxiKTtiPUhnKCk7YT1LaihhLDEpO251bGwhPT1hJiYoJGMoYSwxLGIpLE1qKGEsYikpfVxuZnVuY3Rpb24gV2koYSxiKXtpZigzPT09YS50YWcpZ2soYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtnayhjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpe2E9TWkoYixhKTt2YXIgZT1TaShjLGEsMSk7QWcoYyxlKTtlPUhnKCk7Yz1LaihjLDEpO2lmKG51bGwhPT1jKSRjKGMsMSxlKSxNaihjLGUpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXRyeXtkLmNvbXBvbmVudERpZENhdGNoKGIsYSl9Y2F0Y2goZil7fWJyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIFlqKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1IZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztVPT09YSYmKFcmYyk9PT1jJiYoND09PVZ8fDM9PT1WJiYoVyY2MjkxNDU2MCk9PT1XJiY1MDA+TygpLWpqP1FqKGEsMCk6dWp8PWMpO01qKGEsYil9ZnVuY3Rpb24gbGooYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1hLm1vZGUsMD09PShiJjIpP2I9MTowPT09KGImNCk/Yj05OT09PWVnKCk/MToyOigwPT09R2omJihHaj10aiksYj1ZYyg2MjkxNDU2MCZ+R2opLDA9PT1iJiYoYj00MTk0MzA0KSkpO2M9SGcoKTthPUtqKGEsYik7bnVsbCE9PWEmJigkYyhhLGIsYyksTWooYSxjKSl9dmFyIGNrO1xuY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIubGFuZXM7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fE4uY3VycmVudCl1Zz0hMDtlbHNlIGlmKDAhPT0oYyZkKSl1Zz0wIT09KGEuZmxhZ3MmMTYzODQpPyEwOiExO2Vsc2V7dWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6cmkoYik7c2goKTticmVhaztjYXNlIDU6Z2goYik7YnJlYWs7Y2FzZSAxOkZmKGIudHlwZSkmJkpmKGIpO2JyZWFrO2Nhc2UgNDplaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7dmFyIGU9Yi50eXBlLl9jb250ZXh0O0kobWcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiB0aShhLGIsYyk7SShQLFAuY3VycmVudCYxKTtiPWhpKGEsYixjKTtyZXR1cm4gbnVsbCE9PVxuYj9iLnNpYmxpbmc6bnVsbH1JKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmNjQpKXtpZihkKXJldHVybiBBaShhLGIsYyk7Yi5mbGFnc3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtJKFAsUC5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBiLmxhbmVzPTAsbWkoYSxiLGMpfXJldHVybiBoaShhLGIsYyl9ZWxzZSB1Zz0hMTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsTS5jdXJyZW50KTt0ZyhiLGMpO2U9Q2gobnVsbCxiLGQsYSxlLGMpO2IuZmxhZ3N8PTE7aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEZmKGQpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt4ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmR2coYixkLGcsYSk7ZS51cGRhdGVyPUtnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbHM9YjtPZyhiLGQsYSxjKTtiPXFpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLGZpKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTthOntudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTtcbmE9Yi5wZW5kaW5nUHJvcHM7Zj1lLl9pbml0O2U9ZihlLl9wYXlsb2FkKTtiLnR5cGU9ZTtmPWIudGFnPWhrKGUpO2E9bGcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9bGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPXBpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9Z2kobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1paShudWxsLGIsZSxsZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHkoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSkscGkoYSxiLGQsZSxjKTtjYXNlIDM6cmkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih5KDI4MikpO1xuZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lnKGEsYik7Q2coYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlzaCgpLGI9aGkoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihmPWUuaHlkcmF0ZSlraD1yZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGpoPWIsZj1saD0hMDtpZihmKXthPWUubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YTtpZihudWxsIT1hKWZvcihlPTA7ZTxhLmxlbmd0aDtlKz0yKWY9YVtlXSxmLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWFbZSsxXSx0aC5wdXNoKGYpO2M9WmcoYixudWxsLGQsYyk7Zm9yKGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8MTAyNCxjPWMuc2libGluZ31lbHNlIGZpKGEsYixkLGMpLHNoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZ2goYiksbnVsbD09PWEmJlxucGgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixuZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmbmYoZCxmKSYmKGIuZmxhZ3N8PTE2KSxvaShhLGIpLGZpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmcGgoYiksbnVsbDtjYXNlIDEzOnJldHVybiB0aShhLGIsYyk7Y2FzZSA0OnJldHVybiBlaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1ZZyhiLG51bGwsZCxjKTpmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksZ2koYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKG1nLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9SGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIU4uY3VycmVudCl7Yj1oaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1cbmsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD16ZygtMSxjJi1jKSxsLnRhZz0yLEFnKGgsbCkpO2gubGFuZXN8PWM7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmKGwubGFuZXN8PWMpO3NnKGgucmV0dXJuLGMpO2subGFuZXN8PWM7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z31maShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix0ZyhiLGMpLGU9dmcoZSxcbmYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5mbGFnc3w9MSxmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bGcoZSxiLnBlbmRpbmdQcm9wcyksZj1sZyhlLnR5cGUsZiksaWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGtpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLGIudGFnPTEsRmYoZCk/KGE9ITAsSmYoYikpOmE9ITEsdGcoYixjKSxNZyhiLGQsZSksT2coYixkLGUsYykscWkobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBBaShhLGIsYyk7Y2FzZSAyMzpyZXR1cm4gbWkoYSxiLGMpO2Nhc2UgMjQ6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO1xufTtmdW5jdGlvbiBpayhhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZmxhZ3M9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gbmgoYSxiLGMsZCl7cmV0dXJuIG5ldyBpayhhLGIsYyxkKX1mdW5jdGlvbiBqaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gaGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGppKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1BYSlyZXR1cm4gMTE7aWYoYT09PURhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9bmgoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWppKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHVhOnJldHVybiBYZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIEhhOmc9ODtlfD0xNjticmVhaztjYXNlIHdhOmc9ODtlfD0xO2JyZWFrO2Nhc2UgeGE6cmV0dXJuIGE9bmgoMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT14YSxhLnR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBCYTpyZXR1cm4gYT1uaCgxMyxjLGIsZSksYS50eXBlPUJhLGEuZWxlbWVudFR5cGU9QmEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1uaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiB2aShjLGUsZixiKTtjYXNlIEphOnJldHVybiBhPW5oKDI0LGMsYixlKSxhLmVsZW1lbnRUeXBlPUphLGEubGFuZXM9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHlhOmc9MTA7YnJlYWsgYTtjYXNlIHphOmc9OTticmVhayBhO2Nhc2UgQWE6Zz0xMTticmVhayBhO2Nhc2UgRGE6Zz0xNDticmVhayBhO2Nhc2UgRWE6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIEZhOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih5KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPW5oKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWGcoYSxiLGMsZCl7YT1uaCg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gdmkoYSxiLGMsZCl7YT1uaCgyMyxhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVWcoYSxiLGMpe2E9bmgoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gV2coYSxiLGMpe2I9bmgoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBqayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz1aYygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz1aYygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz1aYygwKTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9bnVsbH1cbmZ1bmN0aW9uIGtrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6dGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBsayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1IZygpLGc9SWcoZSk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxzO2I6e2lmKFpiKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHkoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoRmYoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih5KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihGZihrKSl7Yz1JZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1DZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXpnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PVxuZCYmKGIuY2FsbGJhY2s9ZCk7QWcoZSxiKTtKZyhlLGcsZik7cmV0dXJuIGd9ZnVuY3Rpb24gbWsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBuayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gb2soYSxiKXtuayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmbmsoYSxiKX1mdW5jdGlvbiBwaygpe3JldHVybiBudWxsfVxuZnVuY3Rpb24gcWsoYSxiLGMpe3ZhciBkPW51bGwhPWMmJm51bGwhPWMuaHlkcmF0aW9uT3B0aW9ucyYmYy5oeWRyYXRpb25PcHRpb25zLm11dGFibGVTb3VyY2VzfHxudWxsO2M9bmV3IGprKGEsYixudWxsIT1jJiYhMD09PWMuaHlkcmF0ZSk7Yj1uaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7Yy5jdXJyZW50PWI7Yi5zdGF0ZU5vZGU9Yzt4ZyhiKTthW2ZmXT1jLmN1cnJlbnQ7Y2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyl7Yj1kW2FdO3ZhciBlPWIuX2dldFZlcnNpb247ZT1lKGIuX3NvdXJjZSk7bnVsbD09Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2MubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYixlXTpjLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChiLGUpfXRoaXMuX2ludGVybmFsUm9vdD1jfVxucWsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtsayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtxay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztsayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbZmZdPW51bGx9KX07ZnVuY3Rpb24gcmsoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gc2soYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBxayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHRrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7aC5jYWxsKGEpfX1sayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXNrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2suY2FsbChhKX19WGooZnVuY3Rpb24oKXtsayhiLGcsYSxlKX0pfXJldHVybiBtayhnKX1lYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNCxiKTtvayhhLDQpfX07ZmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDY3MTA4ODY0LGIpO29rKGEsNjcxMDg4NjQpfX07XG5nYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpLGM9SWcoYSk7SmcoYSxjLGIpO29rKGEsYyl9fTtoYz1mdW5jdGlvbihhLGIpe3JldHVybiBiKCl9O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjphYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IoeSg5MCkpO1dhKGQpO2FiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1XajtcbkhiPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9WDtYfD00O3RyeXtyZXR1cm4gZ2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7WD1mLDA9PT1YJiYod2ooKSxpZygpKX19O0liPWZ1bmN0aW9uKCl7MD09PShYJjQ5KSYmKFZqKCksT2ooKSl9O0piPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtYfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fTtmdW5jdGlvbiB1ayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiBrayhhLGIsbnVsbCxjKX12YXIgdms9e0V2ZW50czpbQ2IsdWUsRGIsRWIsRmIsT2ose2N1cnJlbnQ6ITF9XX0sd2s9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTcuMC4xXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB4az17YnVuZGxlVHlwZTp3ay5idW5kbGVUeXBlLHZlcnNpb246d2sudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOndrLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6d2sucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWNjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3ay5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5wayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHlrPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZigheWsuaXNEaXNhYmxlZCYmeWsuc3VwcG9ydHNGaWJlcil0cnl7TGY9eWsuaW5qZWN0KHhrKSxNZj15a31jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dms7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9dWs7XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHkoMTg4KSk7dGhyb3cgRXJyb3IoeSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1jYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtpZigwIT09KGMmNDgpKXJldHVybiBhKGIpO1h8PTE7dHJ5e2lmKGEpcmV0dXJuIGdnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1g9YyxpZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFyayhhKSl0aHJvdyBFcnJvcih5KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWGooZnVuY3Rpb24oKXt0ayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbZmZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1XajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiB1ayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXJrKGMpKXRocm93IEVycm9yKHkoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IoeSgzOCkpO3JldHVybiB0ayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xudmFyIGNvbW1vbmpzR2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB7fTtcblxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gIHZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuICByZXR1cm4gY29tbW9uanNHbG9iYWxba2V5XSA9IChjb21tb25qc0dsb2JhbFtrZXldIHx8IDApICsgMTtcbn1cblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ2V0VW5pcXVlSWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBjcmVhdGVQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnbWluaS1jcmVhdGUtcmVhY3QtY29udGV4dCc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgaGlzdG9yeUNvbnRleHQgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlTmFtZWRDb250ZXh0KFwiUm91dGVyLUhpc3RvcnlcIik7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCQxID0gZnVuY3Rpb24gY3JlYXRlTmFtZWRDb250ZXh0KG5hbWUpIHtcbiAgdmFyIGNvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG4gIGNvbnRleHQuZGlzcGxheU5hbWUgPSBuYW1lO1xuICByZXR1cm4gY29udGV4dDtcbn07XG5cbnZhciBjb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dCQxKFwiUm91dGVyXCIpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB7XG4gICAgICAgIGhpc3Rvcnk6IHRoaXMucHJvcHMuaGlzdG9yeSxcbiAgICAgICAgbG9jYXRpb246IHRoaXMuc3RhdGUubG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBSb3V0ZXIuY29tcHV0ZVJvb3RNYXRjaCh0aGlzLnN0YXRlLmxvY2F0aW9uLnBhdGhuYW1lKSxcbiAgICAgICAgc3RhdGljQ29udGV4dDogdGhpcy5wcm9wcy5zdGF0aWNDb250ZXh0XG4gICAgICB9XG4gICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChoaXN0b3J5Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW4gfHwgbnVsbCxcbiAgICAgIHZhbHVlOiB0aGlzLnByb3BzLmhpc3RvcnlcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcocHJldlByb3BzLmhpc3RvcnkgPT09IHRoaXMucHJvcHMuaGlzdG9yeSwgXCJZb3UgY2Fubm90IGNoYW5nZSA8Um91dGVyIGhpc3Rvcnk+XCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgc3RvcmVzIGxvY2F0aW9uIGluIG1lbW9yeS5cbiAqL1xuXG52YXIgTWVtb3J5Um91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbW9yeVJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVtb3J5Um91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTWVtb3J5Um91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gTWVtb3J5Um91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIE1lbW9yeVJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgaW5pdGlhbEVudHJpZXM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBpbml0aWFsSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxuICB9O1xuXG4gIE1lbW9yeVJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxNZW1vcnlSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBNZW1vcnlSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxudmFyIExpZmVjeWNsZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShMaWZlY3ljbGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpZmVjeWNsZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGlmZWN5Y2xlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbk1vdW50KSB0aGlzLnByb3BzLm9uTW91bnQuY2FsbCh0aGlzLCB0aGlzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLm9uVXBkYXRlKSB0aGlzLnByb3BzLm9uVXBkYXRlLmNhbGwodGhpcywgdGhpcywgcHJldlByb3BzKTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVubW91bnQpIHRoaXMucHJvcHMub25Vbm1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gTGlmZWN5Y2xlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheSBmcm9tIGEgc2NyZWVuLlxuICovXG5cbmZ1bmN0aW9uIFByb21wdChfcmVmKSB7XG4gIHZhciBtZXNzYWdlID0gX3JlZi5tZXNzYWdlLFxuICAgICAgX3JlZiR3aGVuID0gX3JlZi53aGVuLFxuICAgICAgd2hlbiA9IF9yZWYkd2hlbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkd2hlbjtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFByb21wdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICBpZiAoIXdoZW4gfHwgY29udGV4dC5zdGF0aWNDb250ZXh0KSByZXR1cm4gbnVsbDtcbiAgICB2YXIgbWV0aG9kID0gY29udGV4dC5oaXN0b3J5LmJsb2NrO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmIChwcmV2UHJvcHMubWVzc2FnZSAhPT0gbWVzc2FnZSkge1xuICAgICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgICAgIHNlbGYucmVsZWFzZSA9IG1ldGhvZChtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9uVW5tb3VudDogZnVuY3Rpb24gb25Vbm1vdW50KHNlbGYpIHtcbiAgICAgICAgc2VsZi5yZWxlYXNlKCk7XG4gICAgICB9LFxuICAgICAgbWVzc2FnZTogbWVzc2FnZVxuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgbWVzc2FnZVR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnN0cmluZ10pO1xuICBQcm9tcHQucHJvcFR5cGVzID0ge1xuICAgIHdoZW46IFByb3BUeXBlcy5ib29sLFxuICAgIG1lc3NhZ2U6IG1lc3NhZ2VUeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlID0ge307XG52YXIgY2FjaGVMaW1pdCA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aChwYXRoKSB7XG4gIGlmIChjYWNoZVtwYXRoXSkgcmV0dXJuIGNhY2hlW3BhdGhdO1xuICB2YXIgZ2VuZXJhdG9yID0gcGF0aFRvUmVnZXhwLmNvbXBpbGUocGF0aCk7XG5cbiAgaWYgKGNhY2hlQ291bnQgPCBjYWNoZUxpbWl0KSB7XG4gICAgY2FjaGVbcGF0aF0gPSBnZW5lcmF0b3I7XG4gICAgY2FjaGVDb3VudCsrO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRvcjtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0aCBhbmQgcGFyYW1ldGVycy5cbiAqL1xuXG5cbmZ1bmN0aW9uIGdlbmVyYXRlUGF0aChwYXRoLCBwYXJhbXMpIHtcbiAgaWYgKHBhdGggPT09IHZvaWQgMCkge1xuICAgIHBhdGggPSBcIi9cIjtcbiAgfVxuXG4gIGlmIChwYXJhbXMgPT09IHZvaWQgMCkge1xuICAgIHBhcmFtcyA9IHt9O1xuICB9XG5cbiAgcmV0dXJuIHBhdGggPT09IFwiL1wiID8gcGF0aCA6IGNvbXBpbGVQYXRoKHBhdGgpKHBhcmFtcywge1xuICAgIHByZXR0eTogdHJ1ZVxuICB9KTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbmF2aWdhdGluZyBwcm9ncmFtbWF0aWNhbGx5IHdpdGggYSBjb21wb25lbnQuXG4gKi9cblxuZnVuY3Rpb24gUmVkaXJlY3QoX3JlZikge1xuICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgIHRvID0gX3JlZi50byxcbiAgICAgIF9yZWYkcHVzaCA9IF9yZWYucHVzaCxcbiAgICAgIHB1c2ggPSBfcmVmJHB1c2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRwdXNoO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8UmVkaXJlY3Q+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3RvcnksXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBjb250ZXh0LnN0YXRpY0NvbnRleHQ7XG4gICAgdmFyIG1ldGhvZCA9IHB1c2ggPyBoaXN0b3J5LnB1c2ggOiBoaXN0b3J5LnJlcGxhY2U7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24oY29tcHV0ZWRNYXRjaCA/IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpIDogX2V4dGVuZHMoe30sIHRvLCB7XG4gICAgICBwYXRobmFtZTogZ2VuZXJhdGVQYXRoKHRvLnBhdGhuYW1lLCBjb21wdXRlZE1hdGNoLnBhcmFtcylcbiAgICB9KSA6IHRvKTsgLy8gV2hlbiByZW5kZXJpbmcgaW4gYSBzdGF0aWMgY29udGV4dCxcbiAgICAvLyBzZXQgdGhlIG5ldyBsb2NhdGlvbiBpbW1lZGlhdGVseS5cblxuICAgIGlmIChzdGF0aWNDb250ZXh0KSB7XG4gICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGlmZWN5Y2xlLCB7XG4gICAgICBvbk1vdW50OiBmdW5jdGlvbiBvbk1vdW50KCkge1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfSxcbiAgICAgIG9uVXBkYXRlOiBmdW5jdGlvbiBvblVwZGF0ZShzZWxmLCBwcmV2UHJvcHMpIHtcbiAgICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG5cbiAgICAgICAgaWYgKCFsb2NhdGlvbnNBcmVFcXVhbChwcmV2TG9jYXRpb24sIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgICAgICAgIGtleTogcHJldkxvY2F0aW9uLmtleVxuICAgICAgICB9KSkpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgfHwgQXJyYXkuaXNBcnJheShvcHRpb25zKSkge1xuICAgIG9wdGlvbnMgPSB7XG4gICAgICBwYXRoOiBvcHRpb25zXG4gICAgfTtcbiAgfVxuXG4gIHZhciBfb3B0aW9ucyA9IG9wdGlvbnMsXG4gICAgICBwYXRoID0gX29wdGlvbnMucGF0aCxcbiAgICAgIF9vcHRpb25zJGV4YWN0ID0gX29wdGlvbnMuZXhhY3QsXG4gICAgICBleGFjdCA9IF9vcHRpb25zJGV4YWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJGV4YWN0LFxuICAgICAgX29wdGlvbnMkc3RyaWN0ID0gX29wdGlvbnMuc3RyaWN0LFxuICAgICAgc3RyaWN0ID0gX29wdGlvbnMkc3RyaWN0ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9vcHRpb25zJHN0cmljdCxcbiAgICAgIF9vcHRpb25zJHNlbnNpdGl2ZSA9IF9vcHRpb25zLnNlbnNpdGl2ZSxcbiAgICAgIHNlbnNpdGl2ZSA9IF9vcHRpb25zJHNlbnNpdGl2ZSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzZW5zaXRpdmU7XG4gIHZhciBwYXRocyA9IFtdLmNvbmNhdChwYXRoKTtcbiAgcmV0dXJuIHBhdGhzLnJlZHVjZShmdW5jdGlvbiAobWF0Y2hlZCwgcGF0aCkge1xuICAgIGlmICghcGF0aCAmJiBwYXRoICE9PSBcIlwiKSByZXR1cm4gbnVsbDtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cblxuZnVuY3Rpb24gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgcGF0aCkge1xuICB2YXIgdmFsdWUgPSBjaGlsZHJlbihwcm9wcyk7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJZb3UgcmV0dXJuZWQgYHVuZGVmaW5lZGAgZnJvbSB0aGUgYGNoaWxkcmVuYCBmdW5jdGlvbiBvZiBcIiArIChcIjxSb3V0ZVwiICsgKHBhdGggPyBcIiBwYXRoPVxcXCJcIiArIHBhdGggKyBcIlxcXCJcIiA6IFwiXCIpICsgXCI+LCBidXQgeW91IFwiKSArIFwic2hvdWxkIGhhdmUgcmV0dXJuZWQgYSBSZWFjdCBlbGVtZW50IG9yIGBudWxsYFwiKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHZhbHVlIHx8IG51bGw7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxuXG52YXIgUm91dGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUm91dGUsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFJvdXRlKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkMSkge1xuICAgICAgIWNvbnRleHQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIG1hdGNoID0gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCA/IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggLy8gPFN3aXRjaD4gYWxyZWFkeSBjb21wdXRlZCB0aGUgbWF0Y2ggZm9yIHVzXG4gICAgICA6IF90aGlzLnByb3BzLnBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIF90aGlzLnByb3BzKSA6IGNvbnRleHQkMS5tYXRjaDtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkMSwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIG1hdGNoOiBtYXRjaFxuICAgICAgfSk7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcjsgLy8gUHJlYWN0IHVzZXMgYW4gZW1wdHkgYXJyYXkgYXMgY2hpbGRyZW4gYnlcbiAgICAgIC8vIGRlZmF1bHQsIHNvIHVzZSBudWxsIGlmIHRoYXQncyB0aGUgY2FzZS5cblxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pICYmIGNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjaGlsZHJlbiA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IHByb3BzXG4gICAgICB9LCBwcm9wcy5tYXRjaCA/IGNoaWxkcmVuID8gdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IGNoaWxkcmVuIDogY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBldmFsQ2hpbGRyZW5EZXYoY2hpbGRyZW4sIHByb3BzLCBfdGhpcy5wcm9wcy5wYXRoKSA6IGNoaWxkcmVuKHByb3BzKSA6IG51bGwpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSb3V0ZS5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pLFxuICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KHByb3BzLCBwcm9wTmFtZSkge1xuICAgICAgaWYgKHByb3BzW3Byb3BOYW1lXSAmJiAhaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BzW3Byb3BOYW1lXSkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkludmFsaWQgcHJvcCAnY29tcG9uZW50JyBzdXBwbGllZCB0byAnUm91dGUnOiB0aGUgcHJvcCBpcyBub3QgYSB2YWxpZCBSZWFjdCBjb21wb25lbnRcIik7XG4gICAgICB9XG4gICAgfSxcbiAgICBleGFjdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QsXG4gICAgcGF0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICAgIHNlbnNpdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3RyaWN0OiBQcm9wVHlwZXMuYm9vbFxuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMuY29tcG9uZW50KSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjb21wb25lbnQ+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIHJlbmRlcj4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIHJlbmRlcj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSByZW5kZXI+IHdpbGwgYmUgaWdub3JlZFwiKSA6IHZvaWQgMDtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gXCIvXCIgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG5mdW5jdGlvbiBhZGRCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSkgKyBsb2NhdGlvbi5wYXRobmFtZVxuICB9KTtcbn1cblxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgbG9jYXRpb24pIHtcbiAgaWYgKCFiYXNlbmFtZSkgcmV0dXJuIGxvY2F0aW9uO1xuICB2YXIgYmFzZSA9IGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSk7XG4gIGlmIChsb2NhdGlvbi5wYXRobmFtZS5pbmRleE9mKGJhc2UpICE9PSAwKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyKGJhc2UubGVuZ3RoKVxuICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVVJMKGxvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgbG9jYXRpb24gPT09IFwic3RyaW5nXCIgPyBsb2NhdGlvbiA6IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xufVxuXG5mdW5jdGlvbiBzdGF0aWNIYW5kbGVyKG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBjYW5ub3QgJXMgd2l0aCA8U3RhdGljUm91dGVyPlwiLCBtZXRob2ROYW1lKSA6IGludmFyaWFudChmYWxzZSkgO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXG4gICAgICAgIF90aGlzJHByb3BzJGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMkY29udGV4dCA9PT0gdm9pZCAwID8ge30gOiBfdGhpcyRwcm9wcyRjb250ZXh0O1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICAgIH0sXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXG4gICAgICBzdGF0aWNDb250ZXh0OiBjb250ZXh0XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0Lm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBkaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG5cbiAgdmFyIEMgPSBmdW5jdGlvbiBDKHByb3BzKSB7XG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnRSZWYgPSBwcm9wcy53cmFwcGVkQ29tcG9uZW50UmVmLFxuICAgICAgICByZW1haW5pbmdQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFwiICsgZGlzcGxheU5hbWUgKyBcIiAvPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIGNvbnRleHQsIHtcbiAgICAgICAgcmVmOiB3cmFwcGVkQ29tcG9uZW50UmVmXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5vYmplY3RdKVxuICAgIH07XG4gIH1cblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59XG5cbnZhciB1c2VDb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dDtcbmZ1bmN0aW9uIHVzZUhpc3RvcnkoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VIaXN0b3J5KClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgcmV0dXJuIHVzZUNvbnRleHQoaGlzdG9yeUNvbnRleHQpO1xufVxuZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VMb2NhdGlvbigpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpLmxvY2F0aW9uO1xufVxuZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlUGFyYW1zKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIG1hdGNoID8gbWF0Y2gucGFyYW1zIDoge307XG59XG5mdW5jdGlvbiB1c2VSb3V0ZU1hdGNoKHBhdGgpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVJvdXRlTWF0Y2goKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICB2YXIgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xuICB2YXIgbWF0Y2ggPSB1c2VDb250ZXh0KGNvbnRleHQpLm1hdGNoO1xuICByZXR1cm4gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgcGF0aCkgOiBtYXRjaDtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBnbG9iYWwgPSB3aW5kb3c7XG4gICAgdmFyIGtleSA9IFwiX19yZWFjdF9yb3V0ZXJfYnVpbGRfX1wiO1xuICAgIHZhciBidWlsZE5hbWVzID0ge1xuICAgICAgY2pzOiBcIkNvbW1vbkpTXCIsXG4gICAgICBlc206IFwiRVMgbW9kdWxlc1wiLFxuICAgICAgdW1kOiBcIlVNRFwiXG4gICAgfTtcblxuICAgIGlmIChnbG9iYWxba2V5XSAmJiBnbG9iYWxba2V5XSAhPT0gXCJlc21cIikge1xuICAgICAgdmFyIGluaXRpYWxCdWlsZE5hbWUgPSBidWlsZE5hbWVzW2dsb2JhbFtrZXldXTtcbiAgICAgIHZhciBzZWNvbmRhcnlCdWlsZE5hbWUgPSBidWlsZE5hbWVzW1wiZXNtXCJdOyAvLyBUT0RPOiBBZGQgbGluayB0byBhcnRpY2xlIHRoYXQgZXhwbGFpbnMgaW4gZGV0YWlsIGhvdyB0byBhdm9pZFxuICAgICAgLy8gbG9hZGluZyAyIGRpZmZlcmVudCBidWlsZHMuXG5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBhcmUgbG9hZGluZyB0aGUgXCIgKyBzZWNvbmRhcnlCdWlsZE5hbWUgKyBcIiBidWlsZCBvZiBSZWFjdCBSb3V0ZXIgXCIgKyAoXCJvbiBhIHBhZ2UgdGhhdCBpcyBhbHJlYWR5IHJ1bm5pbmcgdGhlIFwiICsgaW5pdGlhbEJ1aWxkTmFtZSArIFwiIFwiKSArIFwiYnVpbGQsIHNvIHRoaW5ncyB3b24ndCB3b3JrIHJpZ2h0LlwiKTtcbiAgICB9XG5cbiAgICBnbG9iYWxba2V5XSA9IFwiZXNtXCI7XG4gIH1cbn1cblxuZXhwb3J0IHsgTWVtb3J5Um91dGVyLCBQcm9tcHQsIFJlZGlyZWN0LCBSb3V0ZSwgUm91dGVyLCBTdGF0aWNSb3V0ZXIsIFN3aXRjaCwgaGlzdG9yeUNvbnRleHQgYXMgX19IaXN0b3J5Q29udGV4dCwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQsIGdlbmVyYXRlUGF0aCwgbWF0Y2hQYXRoLCB1c2VIaXN0b3J5LCB1c2VMb2NhdGlvbiwgdXNlUGFyYW1zLCB1c2VSb3V0ZU1hdGNoLCB3aXRoUm91dGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yb3V0ZXIuanMubWFwXG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49NjAxMDMscD02MDEwNjtleHBvcnRzLkZyYWdtZW50PTYwMTA3O2V4cG9ydHMuU3RyaWN0TW9kZT02MDEwODtleHBvcnRzLlByb2ZpbGVyPTYwMTE0O3ZhciBxPTYwMTA5LHI9NjAxMTAsdD02MDExMjtleHBvcnRzLlN1c3BlbnNlPTYwMTEzO3ZhciB1PTYwMTE1LHY9NjAxMTY7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHooYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgQT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQj17fTtmdW5jdGlvbiBDKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9Qy5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtDLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3Ioeig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Qy5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixjKXt2YXIgZSxkPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGUpJiYhSS5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1kW2VdJiYoZFtlXT1nW2VdKTtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1cbmZ1bmN0aW9uIEsoYSxiKXtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PW59ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBNPS9cXC8rL2c7ZnVuY3Rpb24gTihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxuMDtnPGEubGVuZ3RoO2crKyl7az1hW2ddO3ZhciBmPWUrTihrLGcpO2grPU8oayxiLGMsZixkKX1lbHNlIGlmKGY9eShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZStOKGssZysrKSxoKz1PKGssYixjLGYsZCk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVwiXCIrYSxFcnJvcih6KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpKTtyZXR1cm4gaH1mdW5jdGlvbiBQKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdLGQ9MDtPKGEsZSxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChjLGEsZCsrKX0pO3JldHVybiBlfVxuZnVuY3Rpb24gUShhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2EuX3N0YXR1cz0wO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0O3Rocm93IGEuX3Jlc3VsdDt9dmFyIFI9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gUygpe3ZhciBhPVIuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcih6KDMyMSkpO3JldHVybiBhfXZhciBUPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlIsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3RyYW5zaXRpb246MH0sUmVhY3RDdXJyZW50T3duZXI6RyxJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O1xuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKHooMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSC5jYWxsKGIsZikmJiFJLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtmb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmsscHJvcHM6ZSxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnIsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjpxLF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1KO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp0LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1MO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHRsb2FkZWQ6IGZhbHNlLFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcblx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gbW9kdWxlWydkZWZhdWx0J10gOlxuXHRcdCgpID0+IG1vZHVsZTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZiA9IHt9O1xuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuLy8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSAoY2h1bmtJZCkgPT4ge1xuXHRyZXR1cm4gUHJvbWlzZS5hbGwoT2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5mKS5yZWR1Y2UoKHByb21pc2VzLCBrZXkpID0+IHtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmZba2V5XShjaHVua0lkLCBwcm9taXNlcyk7XG5cdFx0cmV0dXJuIHByb21pc2VzO1xuXHR9LCBbXSkpO1xufTsiLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18udSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5qc1wiO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5ubWQgPSAobW9kdWxlKSA9PiB7XG5cdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdHJldHVybiBtb2R1bGU7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL2Rpc3QvXCI7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTQzOiAwXG59O1xuXG5cbl9fd2VicGFja19yZXF1aXJlX18uZi5qID0gKGNodW5rSWQsIHByb21pc2VzKSA9PiB7XG5cdFx0Ly8gSlNPTlAgY2h1bmsgbG9hZGluZyBmb3IgamF2YXNjcmlwdFxuXHRcdHZhciBpbnN0YWxsZWRDaHVua0RhdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSA/IGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA6IHVuZGVmaW5lZDtcblx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEgIT09IDApIHsgLy8gMCBtZWFucyBcImFscmVhZHkgaW5zdGFsbGVkXCIuXG5cblx0XHRcdC8vIGEgUHJvbWlzZSBtZWFucyBcImN1cnJlbnRseSBsb2FkaW5nXCIuXG5cdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcblx0XHRcdFx0cHJvbWlzZXMucHVzaChpbnN0YWxsZWRDaHVua0RhdGFbMl0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aWYodHJ1ZSkgeyAvLyBhbGwgY2h1bmtzIGhhdmUgSlNcblx0XHRcdFx0XHQvLyBzZXR1cCBQcm9taXNlIGluIGNodW5rIGNhY2hlXG5cdFx0XHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua0RhdGEgPSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSBbcmVzb2x2ZSwgcmVqZWN0XTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRwcm9taXNlcy5wdXNoKGluc3RhbGxlZENodW5rRGF0YVsyXSA9IHByb21pc2UpO1xuXG5cdFx0XHRcdFx0Ly8gc3RhcnQgY2h1bmsgbG9hZGluZ1xuXHRcdFx0XHRcdHZhciB1cmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLnUoY2h1bmtJZCk7XG5cdFx0XHRcdFx0Ly8gY3JlYXRlIGVycm9yIGJlZm9yZSBzdGFjayB1bndvdW5kIHRvIGdldCB1c2VmdWwgc3RhY2t0cmFjZSBsYXRlclxuXHRcdFx0XHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcigpO1xuXHRcdFx0XHRcdHZhciBsb2FkaW5nRW5kZWQgPSAoZXZlbnQpID0+IHtcblx0XHRcdFx0XHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpKSB7XG5cdFx0XHRcdFx0XHRcdGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcblx0XHRcdFx0XHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rRGF0YSkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciBlcnJvclR5cGUgPSBldmVudCAmJiAoZXZlbnQudHlwZSA9PT0gJ2xvYWQnID8gJ21pc3NpbmcnIDogZXZlbnQudHlwZSk7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcblx0XHRcdFx0XHRcdFx0XHRlcnJvci5tZXNzYWdlID0gJ0xvYWRpbmcgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLm5hbWUgPSAnQ2h1bmtMb2FkRXJyb3InO1xuXHRcdFx0XHRcdFx0XHRcdGVycm9yLnR5cGUgPSBlcnJvclR5cGU7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG5cdFx0XHRcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhWzFdKGVycm9yKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5sKHVybCwgbG9hZGluZ0VuZGVkLCBcImNodW5rLVwiICsgY2h1bmtJZCk7XG5cdFx0XHRcdH0gZWxzZSBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHRcdFx0fVxuXHRcdH1cbn07XG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIGRlZmVycmVkIHN0YXJ0dXBcblxuLy8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG52YXIgd2VicGFja0pzb25wQ2FsbGJhY2sgPSAoZGF0YSkgPT4ge1xuXHR2YXIgW2NodW5rSWRzLCBtb3JlTW9kdWxlcywgcnVudGltZV0gPSBkYXRhO1xuXHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcblx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG5cdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDAsIHJlc29sdmVzID0gW107XG5cdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuXHRcdFx0cmVzb2x2ZXMucHVzaChpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF1bMF0pO1xuXHRcdH1cblx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSAwO1xuXHR9XG5cdGZvcihtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuXHRcdH1cblx0fVxuXHRpZihydW50aW1lKSBydW50aW1lKF9fd2VicGFja19yZXF1aXJlX18pO1xuXHRwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbihkYXRhKTtcblx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG5cdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuXHR9XG5cbn1cblxudmFyIGNodW5rTG9hZGluZ0dsb2JhbCA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmtfNDJib2FyZF9mcm9udFwiXSA9IHNlbGZbXCJ3ZWJwYWNrQ2h1bmtfNDJib2FyZF9mcm9udFwiXSB8fCBbXTtcbnZhciBwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiA9IGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKTtcbmNodW5rTG9hZGluZ0dsb2JhbC5wdXNoID0gd2VicGFja0pzb25wQ2FsbGJhY2s7IiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkJztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBob2lzdE5vblJlYWN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnQgKi9cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKGNvbmRpdGlvbikgcmV0dXJuO1xuICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IoXCJsb2FkYWJsZTogXCIgKyBtZXNzYWdlKTtcbiAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxO1xuICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICB0aHJvdyBlcnJvcjtcbn1cbmZ1bmN0aW9uIHdhcm4obWVzc2FnZSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oXCJsb2FkYWJsZTogXCIgKyBtZXNzYWdlKTtcbn1cblxudmFyIENvbnRleHQgPSAvKiNfX1BVUkVfXyovXG5SZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbnZhciBMT0FEQUJMRV9SRVFVSVJFRF9DSFVOS1NfS0VZID0gJ19fTE9BREFCTEVfUkVRVUlSRURfQ0hVTktTX18nO1xuZnVuY3Rpb24gZ2V0UmVxdWlyZWRDaHVua0tleShuYW1lc3BhY2UpIHtcbiAgcmV0dXJuIFwiXCIgKyBuYW1lc3BhY2UgKyBMT0FEQUJMRV9SRVFVSVJFRF9DSFVOS1NfS0VZO1xufVxuXG52YXIgc2hhcmVkSW50ZXJuYWxzID0gLyojX19QVVJFX18qL09iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIGdldFJlcXVpcmVkQ2h1bmtLZXk6IGdldFJlcXVpcmVkQ2h1bmtLZXksXG4gIGludmFyaWFudDogaW52YXJpYW50LFxuICBDb250ZXh0OiBDb250ZXh0XG59KTtcblxudmFyIExPQURBQkxFX1NIQVJFRCA9IHtcbiAgaW5pdGlhbENodW5rczoge31cbn07XG5cbnZhciBTVEFUVVNfUEVORElORyA9ICdQRU5ESU5HJztcbnZhciBTVEFUVVNfUkVTT0xWRUQgPSAnUkVTT0xWRUQnO1xudmFyIFNUQVRVU19SRUpFQ1RFRCA9ICdSRUpFQ1RFRCc7XG5cbmZ1bmN0aW9uIHJlc29sdmVDb25zdHJ1Y3RvcihjdG9yKSB7XG4gIGlmICh0eXBlb2YgY3RvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB7XG4gICAgICByZXF1aXJlQXN5bmM6IGN0b3IsXG4gICAgICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfSxcbiAgICAgIGNodW5rTmFtZTogZnVuY3Rpb24gY2h1bmtOYW1lKCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICByZXR1cm4gY3Rvcjtcbn1cblxudmFyIHdpdGhDaHVua0V4dHJhY3RvciA9IGZ1bmN0aW9uIHdpdGhDaHVua0V4dHJhY3RvcihDb21wb25lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wcykge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChleHRyYWN0b3IpIHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgT2JqZWN0LmFzc2lnbih7XG4gICAgICAgIF9fY2h1bmtFeHRyYWN0b3I6IGV4dHJhY3RvclxuICAgICAgfSwgcHJvcHMpKTtcbiAgICB9KTtcbiAgfTtcbn07XG5cbnZhciBpZGVudGl0eSA9IGZ1bmN0aW9uIGlkZW50aXR5KHYpIHtcbiAgcmV0dXJuIHY7XG59O1xuXG5mdW5jdGlvbiBjcmVhdGVMb2FkYWJsZShfcmVmKSB7XG4gIHZhciBfcmVmJGRlZmF1bHRSZXNvbHZlQ28gPSBfcmVmLmRlZmF1bHRSZXNvbHZlQ29tcG9uZW50LFxuICAgICAgZGVmYXVsdFJlc29sdmVDb21wb25lbnQgPSBfcmVmJGRlZmF1bHRSZXNvbHZlQ28gPT09IHZvaWQgMCA/IGlkZW50aXR5IDogX3JlZiRkZWZhdWx0UmVzb2x2ZUNvLFxuICAgICAgX3JlbmRlciA9IF9yZWYucmVuZGVyLFxuICAgICAgb25Mb2FkID0gX3JlZi5vbkxvYWQ7XG5cbiAgZnVuY3Rpb24gbG9hZGFibGUobG9hZGFibGVDb25zdHJ1Y3Rvciwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgY3RvciA9IHJlc29sdmVDb25zdHJ1Y3Rvcihsb2FkYWJsZUNvbnN0cnVjdG9yKTtcbiAgICB2YXIgY2FjaGUgPSB7fTtcbiAgICAvKipcbiAgICAgKiBDYWNoZWtleSByZXByZXNlbnRzIHRoZSBjb21wb25lbnQgdG8gYmUgbG9hZGVkXG4gICAgICogaWYga2V5IGNoYW5nZXMgLSBjb21wb25lbnQgaGFzIHRvIGJlIHJlbG9hZGVkXG4gICAgICogQHBhcmFtIHByb3BzXG4gICAgICogQHJldHVybnMge251bGx8Q29tcG9uZW50fVxuICAgICAqL1xuXG4gICAgZnVuY3Rpb24gX2dldENhY2hlS2V5KHByb3BzKSB7XG4gICAgICBpZiAob3B0aW9ucy5jYWNoZUtleSkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5jYWNoZUtleShwcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjdG9yLnJlc29sdmUpIHtcbiAgICAgICAgcmV0dXJuIGN0b3IucmVzb2x2ZShwcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAnc3RhdGljJztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzb2x2ZXMgbG9hZGVkIGBtb2R1bGVgIHRvIGEgc3BlY2lmaWMgYENvbXBvbmVudFxuICAgICAqIEBwYXJhbSBtb2R1bGVcbiAgICAgKiBAcGFyYW0gcHJvcHNcbiAgICAgKiBAcGFyYW0gTG9hZGFibGVcbiAgICAgKiBAcmV0dXJucyBDb21wb25lbnRcbiAgICAgKi9cblxuXG4gICAgZnVuY3Rpb24gcmVzb2x2ZShtb2R1bGUsIHByb3BzLCBMb2FkYWJsZSkge1xuICAgICAgdmFyIENvbXBvbmVudCA9IG9wdGlvbnMucmVzb2x2ZUNvbXBvbmVudCA/IG9wdGlvbnMucmVzb2x2ZUNvbXBvbmVudChtb2R1bGUsIHByb3BzKSA6IGRlZmF1bHRSZXNvbHZlQ29tcG9uZW50KG1vZHVsZSk7XG5cbiAgICAgIGlmIChvcHRpb25zLnJlc29sdmVDb21wb25lbnQgJiYgIWlzVmFsaWRFbGVtZW50VHlwZShDb21wb25lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInJlc29sdmVDb21wb25lbnQgcmV0dXJuZWQgc29tZXRoaW5nIHRoYXQgaXMgbm90IGEgUmVhY3QgY29tcG9uZW50IVwiKTtcbiAgICAgIH1cblxuICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3MoTG9hZGFibGUsIENvbXBvbmVudCwge1xuICAgICAgICBwcmVsb2FkOiB0cnVlXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBDb21wb25lbnQ7XG4gICAgfVxuXG4gICAgdmFyIElubmVyTG9hZGFibGUgPVxuICAgIC8qI19fUFVSRV9fKi9cbiAgICBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICAgICAgX2luaGVyaXRzTG9vc2UoSW5uZXJMb2FkYWJsZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgICAgIElubmVyTG9hZGFibGUuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzID0gZnVuY3Rpb24gZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKHByb3BzLCBzdGF0ZSkge1xuICAgICAgICB2YXIgY2FjaGVLZXkgPSBfZ2V0Q2FjaGVLZXkocHJvcHMpO1xuXG4gICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgICBjYWNoZUtleTogY2FjaGVLZXksXG4gICAgICAgICAgLy8gY2hhbmdlIG9mIGEga2V5IHRyaWdnZXJzIGxvYWRpbmcgc3RhdGUgYXV0b21hdGljYWxseVxuICAgICAgICAgIGxvYWRpbmc6IHN0YXRlLmxvYWRpbmcgfHwgc3RhdGUuY2FjaGVLZXkgIT09IGNhY2hlS2V5XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgZnVuY3Rpb24gSW5uZXJMb2FkYWJsZShwcm9wcykge1xuICAgICAgICB2YXIgX3RoaXM7XG5cbiAgICAgICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgICAgIHJlc3VsdDogbnVsbCxcbiAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgICAgIGNhY2hlS2V5OiBfZ2V0Q2FjaGVLZXkocHJvcHMpXG4gICAgICAgIH07XG4gICAgICAgIGludmFyaWFudCghcHJvcHMuX19jaHVua0V4dHJhY3RvciB8fCBjdG9yLnJlcXVpcmVTeW5jLCAnU1NSIHJlcXVpcmVzIGBAbG9hZGFibGUvYmFiZWwtcGx1Z2luYCwgcGxlYXNlIGluc3RhbGwgaXQnKTsgLy8gU2VydmVyLXNpZGVcblxuICAgICAgICBpZiAocHJvcHMuX19jaHVua0V4dHJhY3Rvcikge1xuICAgICAgICAgIC8vIFRoaXMgbW9kdWxlIGhhcyBiZWVuIG1hcmtlZCB3aXRoIG5vIFNTUlxuICAgICAgICAgIGlmIChvcHRpb25zLnNzciA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKTtcbiAgICAgICAgICB9IC8vIFdlIHJ1biBsb2FkIGZ1bmN0aW9uLCB3ZSBhc3N1bWUgdGhhdCBpdCB3b24ndCBmYWlsIGFuZCB0aGF0IGl0XG4gICAgICAgICAgLy8gdHJpZ2dlcnMgYSBzeW5jaHJvbm91cyBsb2FkaW5nIG9mIHRoZSBtb2R1bGVcblxuXG4gICAgICAgICAgY3Rvci5yZXF1aXJlQXN5bmMocHJvcHMpW1wiY2F0Y2hcIl0oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfSk7IC8vIFNvIHdlIGNhbiByZXF1aXJlIG5vdyB0aGUgbW9kdWxlIHN5bmNocm9ub3VzbHlcblxuICAgICAgICAgIF90aGlzLmxvYWRTeW5jKCk7XG5cbiAgICAgICAgICBwcm9wcy5fX2NodW5rRXh0cmFjdG9yLmFkZENodW5rKGN0b3IuY2h1bmtOYW1lKHByb3BzKSk7XG5cbiAgICAgICAgICByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyk7XG4gICAgICAgIH0gLy8gQ2xpZW50LXNpZGUgd2l0aCBgaXNSZWFkeWAgbWV0aG9kIHByZXNlbnQgKFNTUiBwcm9iYWJseSlcbiAgICAgICAgLy8gSWYgbW9kdWxlIGlzIGFscmVhZHkgbG9hZGVkLCB3ZSB1c2UgYSBzeW5jaHJvbm91cyBsb2FkaW5nXG4gICAgICAgIC8vIE9ubHkgcGVyZm9ybSB0aGlzIHN5bmNocm9ub3VzIGxvYWRpbmcgaWYgdGhlIGNvbXBvbmVudCBoYXMgbm90XG4gICAgICAgIC8vIGJlZW4gbWFya2VkIHdpdGggbm8gU1NSLCBlbHNlIHdlIHJpc2sgaHlkcmF0aW9uIG1pc21hdGNoZXNcblxuXG4gICAgICAgIGlmIChvcHRpb25zLnNzciAhPT0gZmFsc2UgJiYgKCAvLyBpcyByZWFkeSAtIHdhcyBsb2FkZWQgaW4gdGhpcyBzZXNzaW9uXG4gICAgICAgIGN0b3IuaXNSZWFkeSAmJiBjdG9yLmlzUmVhZHkocHJvcHMpIHx8IC8vIGlzIHJlYWR5IC0gd2FzIGxvYWRlZCBkdXJpbmcgU1NSIHByb2Nlc3NcbiAgICAgICAgY3Rvci5jaHVua05hbWUgJiYgTE9BREFCTEVfU0hBUkVELmluaXRpYWxDaHVua3NbY3Rvci5jaHVua05hbWUocHJvcHMpXSkpIHtcbiAgICAgICAgICBfdGhpcy5sb2FkU3luYygpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3Byb3RvID0gSW5uZXJMb2FkYWJsZS5wcm90b3R5cGU7XG5cbiAgICAgIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB0aGlzLm1vdW50ZWQgPSB0cnVlOyAvLyByZXRyaWV2ZSBsb2FkaW5nIHByb21pc2UgZnJvbSBhIGdsb2JhbCBjYWNoZVxuXG4gICAgICAgIHZhciBjYWNoZWRQcm9taXNlID0gdGhpcy5nZXRDYWNoZSgpOyAvLyBpZiBwcm9taXNlIGV4aXN0cywgYnV0IHJlamVjdGVkIC0gY2xlYXIgY2FjaGVcblxuICAgICAgICBpZiAoY2FjaGVkUHJvbWlzZSAmJiBjYWNoZWRQcm9taXNlLnN0YXR1cyA9PT0gU1RBVFVTX1JFSkVDVEVEKSB7XG4gICAgICAgICAgdGhpcy5zZXRDYWNoZSgpO1xuICAgICAgICB9IC8vIGNvbXBvbmVudCBtaWdodCBiZSByZXNvbHZlZCBzeW5jaHJvbm91c2x5IGluIHRoZSBjb25zdHJ1Y3RvclxuXG5cbiAgICAgICAgaWYgKHRoaXMuc3RhdGUubG9hZGluZykge1xuICAgICAgICAgIHRoaXMubG9hZEFzeW5jKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICAgICAgLy8gQ29tcG9uZW50IGhhcyB0byBiZSByZWxvYWRlZCBvbiBjYWNoZUtleSBjaGFuZ2VcbiAgICAgICAgaWYgKHByZXZTdGF0ZS5jYWNoZUtleSAhPT0gdGhpcy5zdGF0ZS5jYWNoZUtleSkge1xuICAgICAgICAgIHRoaXMubG9hZEFzeW5jKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICB0aGlzLm1vdW50ZWQgPSBmYWxzZTtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5zYWZlU2V0U3RhdGUgPSBmdW5jdGlvbiBzYWZlU2V0U3RhdGUobmV4dFN0YXRlLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAodGhpcy5tb3VudGVkKSB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLyoqXG4gICAgICAgKiByZXR1cm5zIGEgY2FjaGUga2V5IGZvciB0aGUgY3VycmVudCBwcm9wc1xuICAgICAgICogQHJldHVybnMge0NvbXBvbmVudHxzdHJpbmd9XG4gICAgICAgKi9cbiAgICAgIDtcblxuICAgICAgX3Byb3RvLmdldENhY2hlS2V5ID0gZnVuY3Rpb24gZ2V0Q2FjaGVLZXkoKSB7XG4gICAgICAgIHJldHVybiBfZ2V0Q2FjaGVLZXkodGhpcy5wcm9wcyk7XG4gICAgICB9XG4gICAgICAvKipcbiAgICAgICAqIGFjY2VzcyB0aGUgcGVyc2lzdGVudCBjYWNoZVxuICAgICAgICovXG4gICAgICA7XG5cbiAgICAgIF9wcm90by5nZXRDYWNoZSA9IGZ1bmN0aW9uIGdldENhY2hlKCkge1xuICAgICAgICByZXR1cm4gY2FjaGVbdGhpcy5nZXRDYWNoZUtleSgpXTtcbiAgICAgIH1cbiAgICAgIC8qKlxuICAgICAgICogc2V0cyB0aGUgY2FjaGUgdmFsdWUuIElmIGNhbGxlZCB3aXRob3V0IHZhbHVlIHNldHMgaXQgYXMgdW5kZWZpbmVkXG4gICAgICAgKi9cbiAgICAgIDtcblxuICAgICAgX3Byb3RvLnNldENhY2hlID0gZnVuY3Rpb24gc2V0Q2FjaGUodmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSB2b2lkIDApIHtcbiAgICAgICAgICB2YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNhY2hlW3RoaXMuZ2V0Q2FjaGVLZXkoKV0gPSB2YWx1ZTtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by50cmlnZ2VyT25Mb2FkID0gZnVuY3Rpb24gdHJpZ2dlck9uTG9hZCgpIHtcbiAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgaWYgKG9uTG9hZCkge1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgb25Mb2FkKF90aGlzMi5zdGF0ZS5yZXN1bHQsIF90aGlzMi5wcm9wcyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8qKlxuICAgICAgICogU3luY2hyb25vdXNseSBsb2FkcyBjb21wb25lbnRcbiAgICAgICAqIHRhcmdldCBtb2R1bGUgaXMgZXhwZWN0ZWQgdG8gYWxyZWFkeSBleGlzdHMgaW4gdGhlIG1vZHVsZSBjYWNoZVxuICAgICAgICogb3IgYmUgY2FwYWJsZSB0byByZXNvbHZlIHN5bmNocm9ub3VzbHkgKHdlYnBhY2sgdGFyZ2V0PW5vZGUpXG4gICAgICAgKi9cbiAgICAgIDtcblxuICAgICAgX3Byb3RvLmxvYWRTeW5jID0gZnVuY3Rpb24gbG9hZFN5bmMoKSB7XG4gICAgICAgIC8vIGxvYWQgc3luYyBpcyBleHBlY3RpbmcgY29tcG9uZW50IHRvIGJlIGluIHRoZSBcImxvYWRpbmdcIiBzdGF0ZSBhbHJlYWR5XG4gICAgICAgIC8vIHNvdW5kcyB3ZWlyZCwgYnV0IGxvYWRpbmc9dHJ1ZSBpcyB0aGUgaW5pdGlhbCBzdGF0ZSBvZiBJbm5lckxvYWRhYmxlXG4gICAgICAgIGlmICghdGhpcy5zdGF0ZS5sb2FkaW5nKSByZXR1cm47XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgbG9hZGVkTW9kdWxlID0gY3Rvci5yZXF1aXJlU3luYyh0aGlzLnByb3BzKTtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gcmVzb2x2ZShsb2FkZWRNb2R1bGUsIHRoaXMucHJvcHMsIExvYWRhYmxlKTtcbiAgICAgICAgICB0aGlzLnN0YXRlLnJlc3VsdCA9IHJlc3VsdDtcbiAgICAgICAgICB0aGlzLnN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdsb2FkYWJsZS1jb21wb25lbnRzOiBmYWlsZWQgdG8gc3luY2hyb25vdXNseSBsb2FkIGNvbXBvbmVudCwgd2hpY2ggZXhwZWN0ZWQgdG8gYmUgYXZhaWxhYmxlJywge1xuICAgICAgICAgICAgZmlsZU5hbWU6IGN0b3IucmVzb2x2ZSh0aGlzLnByb3BzKSxcbiAgICAgICAgICAgIGNodW5rTmFtZTogY3Rvci5jaHVua05hbWUodGhpcy5wcm9wcyksXG4gICAgICAgICAgICBlcnJvcjogZXJyb3IgPyBlcnJvci5tZXNzYWdlIDogZXJyb3JcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLnN0YXRlLmVycm9yID0gZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8qKlxuICAgICAgICogQXN5bmNocm9ub3VzbHkgbG9hZHMgYSBjb21wb25lbnQuXG4gICAgICAgKi9cbiAgICAgIDtcblxuICAgICAgX3Byb3RvLmxvYWRBc3luYyA9IGZ1bmN0aW9uIGxvYWRBc3luYygpIHtcbiAgICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgICAgdmFyIHByb21pc2UgPSB0aGlzLnJlc29sdmVBc3luYygpO1xuICAgICAgICBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKGxvYWRlZE1vZHVsZSkge1xuICAgICAgICAgIHZhciByZXN1bHQgPSByZXNvbHZlKGxvYWRlZE1vZHVsZSwgX3RoaXMzLnByb3BzLCB7XG4gICAgICAgICAgICBMb2FkYWJsZTogTG9hZGFibGVcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIF90aGlzMy5zYWZlU2V0U3RhdGUoe1xuICAgICAgICAgICAgcmVzdWx0OiByZXN1bHQsXG4gICAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczMudHJpZ2dlck9uTG9hZCgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KVtcImNhdGNoXCJdKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiBfdGhpczMuc2FmZVNldFN0YXRlKHtcbiAgICAgICAgICAgIGVycm9yOiBlcnJvcixcbiAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICAgIH1cbiAgICAgIC8qKlxuICAgICAgICogQXN5bmNocm9ub3VzbHkgcmVzb2x2ZXMobm90IGxvYWRzKSBhIGNvbXBvbmVudC5cbiAgICAgICAqIE5vdGUgLSB0aGlzIGZ1bmN0aW9uIGRvZXMgbm90IGNoYW5nZSB0aGUgc3RhdGVcbiAgICAgICAqL1xuICAgICAgO1xuXG4gICAgICBfcHJvdG8ucmVzb2x2ZUFzeW5jID0gZnVuY3Rpb24gcmVzb2x2ZUFzeW5jKCkge1xuICAgICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgICAgX19jaHVua0V4dHJhY3RvciA9IF90aGlzJHByb3BzLl9fY2h1bmtFeHRyYWN0b3IsXG4gICAgICAgICAgICBmb3J3YXJkZWRSZWYgPSBfdGhpcyRwcm9wcy5mb3J3YXJkZWRSZWYsXG4gICAgICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzLCBbXCJfX2NodW5rRXh0cmFjdG9yXCIsIFwiZm9yd2FyZGVkUmVmXCJdKTtcblxuICAgICAgICB2YXIgcHJvbWlzZSA9IHRoaXMuZ2V0Q2FjaGUoKTtcblxuICAgICAgICBpZiAoIXByb21pc2UpIHtcbiAgICAgICAgICBwcm9taXNlID0gY3Rvci5yZXF1aXJlQXN5bmMocHJvcHMpO1xuICAgICAgICAgIHByb21pc2Uuc3RhdHVzID0gU1RBVFVTX1BFTkRJTkc7XG4gICAgICAgICAgdGhpcy5zZXRDYWNoZShwcm9taXNlKTtcbiAgICAgICAgICBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcHJvbWlzZS5zdGF0dXMgPSBTVEFUVVNfUkVTT0xWRUQ7XG4gICAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdsb2FkYWJsZS1jb21wb25lbnRzOiBmYWlsZWQgdG8gYXN5bmNocm9ub3VzbHkgbG9hZCBjb21wb25lbnQnLCB7XG4gICAgICAgICAgICAgIGZpbGVOYW1lOiBjdG9yLnJlc29sdmUoX3RoaXM0LnByb3BzKSxcbiAgICAgICAgICAgICAgY2h1bmtOYW1lOiBjdG9yLmNodW5rTmFtZShfdGhpczQucHJvcHMpLFxuICAgICAgICAgICAgICBlcnJvcjogZXJyb3IgPyBlcnJvci5tZXNzYWdlIDogZXJyb3JcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcHJvbWlzZS5zdGF0dXMgPSBTVEFUVVNfUkVKRUNURUQ7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgICAgZm9yd2FyZGVkUmVmID0gX3RoaXMkcHJvcHMyLmZvcndhcmRlZFJlZixcbiAgICAgICAgICAgIHByb3BGYWxsYmFjayA9IF90aGlzJHByb3BzMi5mYWxsYmFjayxcbiAgICAgICAgICAgIF9fY2h1bmtFeHRyYWN0b3IgPSBfdGhpcyRwcm9wczIuX19jaHVua0V4dHJhY3RvcixcbiAgICAgICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJmb3J3YXJkZWRSZWZcIiwgXCJmYWxsYmFja1wiLCBcIl9fY2h1bmtFeHRyYWN0b3JcIl0pO1xuXG4gICAgICAgIHZhciBfdGhpcyRzdGF0ZSA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgICBlcnJvciA9IF90aGlzJHN0YXRlLmVycm9yLFxuICAgICAgICAgICAgbG9hZGluZyA9IF90aGlzJHN0YXRlLmxvYWRpbmcsXG4gICAgICAgICAgICByZXN1bHQgPSBfdGhpcyRzdGF0ZS5yZXN1bHQ7XG5cbiAgICAgICAgaWYgKG9wdGlvbnMuc3VzcGVuc2UpIHtcbiAgICAgICAgICB2YXIgY2FjaGVkUHJvbWlzZSA9IHRoaXMuZ2V0Q2FjaGUoKSB8fCB0aGlzLmxvYWRBc3luYygpO1xuXG4gICAgICAgICAgaWYgKGNhY2hlZFByb21pc2Uuc3RhdHVzID09PSBTVEFUVVNfUEVORElORykge1xuICAgICAgICAgICAgdGhyb3cgdGhpcy5sb2FkQXN5bmMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBmYWxsYmFjayA9IHByb3BGYWxsYmFjayB8fCBvcHRpb25zLmZhbGxiYWNrIHx8IG51bGw7XG5cbiAgICAgICAgaWYgKGxvYWRpbmcpIHtcbiAgICAgICAgICByZXR1cm4gZmFsbGJhY2s7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gX3JlbmRlcih7XG4gICAgICAgICAgZmFsbGJhY2s6IGZhbGxiYWNrLFxuICAgICAgICAgIHJlc3VsdDogcmVzdWx0LFxuICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnMsXG4gICAgICAgICAgcHJvcHM6IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgICAgcmVmOiBmb3J3YXJkZWRSZWZcbiAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBJbm5lckxvYWRhYmxlO1xuICAgIH0oUmVhY3QuQ29tcG9uZW50KTtcblxuICAgIHZhciBFbmhhbmNlZElubmVyTG9hZGFibGUgPSB3aXRoQ2h1bmtFeHRyYWN0b3IoSW5uZXJMb2FkYWJsZSk7XG4gICAgdmFyIExvYWRhYmxlID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRW5oYW5jZWRJbm5lckxvYWRhYmxlLCBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgZm9yd2FyZGVkUmVmOiByZWZcbiAgICAgIH0sIHByb3BzKSk7XG4gICAgfSk7IC8vIEluIGZ1dHVyZSwgcHJlbG9hZCBjb3VsZCB1c2UgYDxsaW5rIHJlbD1cInByZWxvYWRcIj5gXG5cbiAgICBMb2FkYWJsZS5wcmVsb2FkID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICBjdG9yLnJlcXVpcmVBc3luYyhwcm9wcyk7XG4gICAgfTtcblxuICAgIExvYWRhYmxlLmxvYWQgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgIHJldHVybiBjdG9yLnJlcXVpcmVBc3luYyhwcm9wcyk7XG4gICAgfTtcblxuICAgIHJldHVybiBMb2FkYWJsZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxhenkoY3Rvciwgb3B0aW9ucykge1xuICAgIHJldHVybiBsb2FkYWJsZShjdG9yLCBfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgc3VzcGVuc2U6IHRydWVcbiAgICB9KSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGxvYWRhYmxlOiBsb2FkYWJsZSxcbiAgICBsYXp5OiBsYXp5XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRSZXNvbHZlQ29tcG9uZW50KGxvYWRlZE1vZHVsZSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGVcbiAgcmV0dXJuIGxvYWRlZE1vZHVsZS5fX2VzTW9kdWxlID8gbG9hZGVkTW9kdWxlW1wiZGVmYXVsdFwiXSA6IGxvYWRlZE1vZHVsZVtcImRlZmF1bHRcIl0gfHwgbG9hZGVkTW9kdWxlO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11c2UtYmVmb3JlLWRlZmluZSwgcmVhY3Qvbm8tbXVsdGktY29tcCAqL1xuXG52YXIgX2NyZWF0ZUxvYWRhYmxlID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZUxvYWRhYmxlKHtcbiAgZGVmYXVsdFJlc29sdmVDb21wb25lbnQ6IGRlZmF1bHRSZXNvbHZlQ29tcG9uZW50LFxuICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihfcmVmKSB7XG4gICAgdmFyIENvbXBvbmVudCA9IF9yZWYucmVzdWx0LFxuICAgICAgICBwcm9wcyA9IF9yZWYucHJvcHM7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBwcm9wcyk7XG4gIH1cbn0pLFxuICAgIGxvYWRhYmxlID0gX2NyZWF0ZUxvYWRhYmxlLmxvYWRhYmxlLFxuICAgIGxhenkgPSBfY3JlYXRlTG9hZGFibGUubGF6eTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdXNlLWJlZm9yZS1kZWZpbmUsIHJlYWN0L25vLW11bHRpLWNvbXAgKi9cblxudmFyIF9jcmVhdGVMb2FkYWJsZSQxID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZUxvYWRhYmxlKHtcbiAgb25Mb2FkOiBmdW5jdGlvbiBvbkxvYWQocmVzdWx0LCBwcm9wcykge1xuICAgIGlmIChyZXN1bHQgJiYgcHJvcHMuZm9yd2FyZGVkUmVmKSB7XG4gICAgICBpZiAodHlwZW9mIHByb3BzLmZvcndhcmRlZFJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcm9wcy5mb3J3YXJkZWRSZWYocmVzdWx0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb3BzLmZvcndhcmRlZFJlZi5jdXJyZW50ID0gcmVzdWx0O1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoX3JlZikge1xuICAgIHZhciByZXN1bHQgPSBfcmVmLnJlc3VsdCxcbiAgICAgICAgcHJvcHMgPSBfcmVmLnByb3BzO1xuXG4gICAgaWYgKHByb3BzLmNoaWxkcmVuKSB7XG4gICAgICByZXR1cm4gcHJvcHMuY2hpbGRyZW4ocmVzdWx0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufSksXG4gICAgbG9hZGFibGUkMSA9IF9jcmVhdGVMb2FkYWJsZSQxLmxvYWRhYmxlLFxuICAgIGxhenkkMSA9IF9jcmVhdGVMb2FkYWJsZSQxLmxhenk7XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVyc2NvcmUtZGFuZ2xlLCBjYW1lbGNhc2UgKi9cbnZhciBCUk9XU0VSID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCc7XG5mdW5jdGlvbiBsb2FkYWJsZVJlYWR5KGRvbmUsIF90ZW1wKSB7XG4gIGlmIChkb25lID09PSB2b2lkIDApIHtcbiAgICBkb25lID0gZnVuY3Rpb24gZG9uZSgpIHt9O1xuICB9XG5cbiAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgIF9yZWYkbmFtZXNwYWNlID0gX3JlZi5uYW1lc3BhY2UsXG4gICAgICBuYW1lc3BhY2UgPSBfcmVmJG5hbWVzcGFjZSA9PT0gdm9pZCAwID8gJycgOiBfcmVmJG5hbWVzcGFjZTtcblxuICBpZiAoIUJST1dTRVIpIHtcbiAgICB3YXJuKCdgbG9hZGFibGVSZWFkeSgpYCBtdXN0IGJlIGNhbGxlZCBpbiBicm93c2VyIG9ubHknKTtcbiAgICBkb25lKCk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbiAgdmFyIHJlcXVpcmVkQ2h1bmtzID0gbnVsbDtcblxuICBpZiAoQlJPV1NFUikge1xuICAgIHZhciBpZCA9IGdldFJlcXVpcmVkQ2h1bmtLZXkobmFtZXNwYWNlKTtcbiAgICB2YXIgZGF0YUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG5cbiAgICBpZiAoZGF0YUVsZW1lbnQpIHtcbiAgICAgIHJlcXVpcmVkQ2h1bmtzID0gSlNPTi5wYXJzZShkYXRhRWxlbWVudC50ZXh0Q29udGVudCk7XG4gICAgICB2YXIgZXh0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkICsgXCJfZXh0XCIpO1xuXG4gICAgICBpZiAoZXh0RWxlbWVudCkge1xuICAgICAgICB2YXIgX0pTT04kcGFyc2UgPSBKU09OLnBhcnNlKGV4dEVsZW1lbnQudGV4dENvbnRlbnQpLFxuICAgICAgICAgICAgbmFtZWRDaHVua3MgPSBfSlNPTiRwYXJzZS5uYW1lZENodW5rcztcblxuICAgICAgICBuYW1lZENodW5rcy5mb3JFYWNoKGZ1bmN0aW9uIChjaHVua05hbWUpIHtcbiAgICAgICAgICBMT0FEQUJMRV9TSEFSRUQuaW5pdGlhbENodW5rc1tjaHVua05hbWVdID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyB2ZXJzaW9uIG1pc21hdGNoXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbG9hZGFibGUtY29tcG9uZW50OiBAbG9hZGFibGUvc2VydmVyIGRvZXMgbm90IG1hdGNoIEBsb2FkYWJsZS9jb21wb25lbnQnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoIXJlcXVpcmVkQ2h1bmtzKSB7XG4gICAgd2FybignYGxvYWRhYmxlUmVhZHkoKWAgcmVxdWlyZXMgc3RhdGUsIHBsZWFzZSB1c2UgYGdldFNjcmlwdFRhZ3NgIG9yIGBnZXRTY3JpcHRFbGVtZW50c2Agc2VydmVyLXNpZGUnKTtcbiAgICBkb25lKCk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbiAgdmFyIHJlc29sdmVkID0gZmFsc2U7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgIHdpbmRvdy5fX0xPQURBQkxFX0xPQURFRF9DSFVOS1NfXyA9IHdpbmRvdy5fX0xPQURBQkxFX0xPQURFRF9DSFVOS1NfXyB8fCBbXTtcbiAgICB2YXIgbG9hZGVkQ2h1bmtzID0gd2luZG93Ll9fTE9BREFCTEVfTE9BREVEX0NIVU5LU19fO1xuICAgIHZhciBvcmlnaW5hbFB1c2ggPSBsb2FkZWRDaHVua3MucHVzaC5iaW5kKGxvYWRlZENodW5rcyk7XG5cbiAgICBmdW5jdGlvbiBjaGVja1JlYWR5U3RhdGUoKSB7XG4gICAgICBpZiAocmVxdWlyZWRDaHVua3MuZXZlcnkoZnVuY3Rpb24gKGNodW5rKSB7XG4gICAgICAgIHJldHVybiBsb2FkZWRDaHVua3Muc29tZShmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgICAgICB2YXIgY2h1bmtzID0gX3JlZjJbMF07XG4gICAgICAgICAgcmV0dXJuIGNodW5rcy5pbmRleE9mKGNodW5rKSA+IC0xO1xuICAgICAgICB9KTtcbiAgICAgIH0pKSB7XG4gICAgICAgIGlmICghcmVzb2x2ZWQpIHtcbiAgICAgICAgICByZXNvbHZlZCA9IHRydWU7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgbG9hZGVkQ2h1bmtzLnB1c2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICBvcmlnaW5hbFB1c2guYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgICAgY2hlY2tSZWFkeVN0YXRlKCk7XG4gICAgfTtcblxuICAgIGNoZWNrUmVhZHlTdGF0ZSgpO1xuICB9KS50aGVuKGRvbmUpO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlcnNjb3JlLWRhbmdsZSAqL1xudmFyIGxvYWRhYmxlJDIgPSBsb2FkYWJsZTtcbmxvYWRhYmxlJDIubGliID0gbG9hZGFibGUkMTtcbnZhciBsYXp5JDIgPSBsYXp5O1xubGF6eSQyLmxpYiA9IGxhenkkMTtcbnZhciBfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCA9IHNoYXJlZEludGVybmFscztcblxuZXhwb3J0IGRlZmF1bHQgbG9hZGFibGUkMjtcbmV4cG9ydCB7IF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELCBsYXp5JDIgYXMgbGF6eSwgbG9hZGFibGVSZWFkeSB9O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cblxuICByZXR1cm4gc2VsZjtcbn0iLCJpbXBvcnQgUmVhY3QsIHsgRkMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbG9hZGFibGUgZnJvbSAnQGxvYWRhYmxlL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBSZWRpcmVjdCwgUm91dGUsIFN3aXRjaCB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5jb25zdCBBdXRoID0gbG9hZGFibGUoKCkgPT4gaW1wb3J0KCdAcGFnZXMvQXV0aCcpKTtcbmNvbnN0IEJvYXJkID0gbG9hZGFibGUoKCkgPT4gaW1wb3J0KCdAbGF5b3V0cy9Cb2FyZCcpKTtcbmNvbnN0IE1haW4gPSBsb2FkYWJsZSgoKSA9PiBpbXBvcnQoJ0BsYXlvdXRzL01haW4nKSk7XG5jb25zdCBNYW5hZ2UgPSBsb2FkYWJsZSgoKSA9PiBpbXBvcnQoJ0BsYXlvdXRzL01hbmFnZScpKTtcblxuY29uc3QgQXBwOiBGQyA9ICgpID0+IChcblx0PFN3aXRjaD5cblx0XHQ8Um91dGUgZXhhY3QgcGF0aD1cIi9cIj5cblx0XHRcdDxSZWRpcmVjdCB0bz1cIi9hdXRoXCIgLz5cblx0XHQ8L1JvdXRlPlxuXHRcdDxSb3V0ZSBwYXRoPVwiL2F1dGhcIiBjb21wb25lbnQ9e0F1dGh9IC8+XG5cdFx0PFJvdXRlIHBhdGg9XCIvbWFpblwiIGNvbXBvbmVudD17TWFpbn0gLz5cblx0XHQ8Um91dGUgcGF0aD1cIi9ib2FyZC86Ym9hcmRcIiBjb21wb25lbnQ9e0JvYXJkfSAvPlxuXHRcdDxSb3V0ZSBwYXRoPVwiL21hbmFnZVwiIGNvbXBvbmVudD17TWFuYWdlfSAvPlxuXHQ8L1N3aXRjaD5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEFwcDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuaW1wb3J0IEFwcCBmcm9tICcuL2xheW91dHMvQXBwJztcblxuYXhpb3MuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gdHJ1ZTtcbmF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ2h0dHBzOi8vYXBpLjQyYm9hcmQuY29tJyA6ICdodHRwOi8vbG9jYWxob3N0OjMwOTUnO1xuYXhpb3MuZGVmYXVsdHMuaGVhZGVyc1snQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJ10gPSAnKic7XG5cbnJlbmRlcihcblx0PEJyb3dzZXJSb3V0ZXI+XG5cdFx0PEFwcCAvPlxuXHQ8L0Jyb3dzZXJSb3V0ZXI+LFxuXHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXBwJyksXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==